if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


            ;
var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this || self;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && typeof cur.execScript != "undefined") {
    cur.execScript("var " + parts[0]);
  }
  for (var part; parts.length && (part = parts.shift());) {
    if (!parts.length && opt_object !== undefined) {
      cur[part] = opt_object;
    } else {
      if (cur[part] && cur[part] !== Object.prototype[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    var uncompiledDefines = goog.global.CLOSURE_UNCOMPILED_DEFINES;
    var defines = goog.global.CLOSURE_DEFINES;
    if (uncompiledDefines && uncompiledDefines.nodeType === undefined && Object.prototype.hasOwnProperty.call(uncompiledDefines, name)) {
      value = uncompiledDefines[name];
    } else {
      if (defines && defines.nodeType === undefined && Object.prototype.hasOwnProperty.call(defines, name)) {
        value = defines[name];
      }
    }
  }
  return value;
};
goog.FEATURESET_YEAR = goog.define("goog.FEATURESET_YEAR", 2012);
goog.DEBUG = goog.define("goog.DEBUG", true);
goog.LOCALE = goog.define("goog.LOCALE", "en");
goog.TRUSTED_SITE = goog.define("goog.TRUSTED_SITE", true);
goog.STRICT_MODE_COMPATIBLE = goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.DISALLOW_TEST_ONLY_CODE = goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw new Error("goog.provide cannot be used within a module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw new Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.getScriptNonce = function(opt_window) {
  if (opt_window && opt_window != goog.global) {
    return goog.getScriptNonce_(opt_window.document);
  }
  if (goog.cspNonce_ === null) {
    goog.cspNonce_ = goog.getScriptNonce_(goog.global.document);
  }
  return goog.cspNonce_;
};
goog.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
goog.cspNonce_ = null;
goog.getScriptNonce_ = function(doc) {
  var script = doc.querySelector && doc.querySelector("script[nonce]");
  if (script) {
    var nonce = script["nonce"] || script.getAttribute("nonce");
    if (nonce && goog.NONCE_PATTERN_.test(nonce)) {
      return nonce;
    }
  }
  return "";
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (typeof name !== "string" || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw new Error("Invalid module identifier");
  }
  if (!goog.isInGoogModuleLoader_()) {
    throw new Error("Module " + name + " has been loaded incorrectly. Note, " + "modules cannot be loaded as normal scripts. They require some kind of " + "pre-processing step. You're likely trying to load a module via a " + "script tag or as a part of a concatenated bundle without rewriting the " + "module. For more info see: " + "https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw new Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw new Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (name in goog.loadedModules_) {
      return goog.loadedModules_[name].exports;
    } else {
      if (!goog.implicitNamespaces_[name]) {
        var ns = goog.getObjectByName(name);
        return ns != null ? ns : null;
      }
    }
  }
  return null;
};
goog.ModuleType = {ES6:"es6", GOOG:"goog"};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();
};
goog.isInGoogModuleLoader_ = function() {
  return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;
};
goog.isInEs6ModuleLoader_ = function() {
  var inLoader = !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6;
  if (inLoader) {
    return true;
  }
  var jscomp = goog.global["$jscomp"];
  if (jscomp) {
    if (typeof jscomp.getCurrentModulePath != "function") {
      return false;
    }
    return !!jscomp.getCurrentModulePath();
  }
  return false;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInGoogModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw new Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.declareModuleId = function(namespace) {
  if (!COMPILED) {
    if (!goog.isInEs6ModuleLoader_()) {
      throw new Error("goog.declareModuleId may only be called from " + "within an ES6 module");
    }
    if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName) {
      throw new Error("goog.declareModuleId may only be called once per module.");
    }
    if (namespace in goog.loadedModules_) {
      throw new Error('Module with namespace "' + namespace + '" already exists.');
    }
  }
  if (goog.moduleLoaderState_) {
    goog.moduleLoaderState_.moduleName = namespace;
  } else {
    var jscomp = goog.global["$jscomp"];
    if (!jscomp || typeof jscomp.getCurrentModulePath != "function") {
      throw new Error('Module with namespace "' + namespace + '" has been loaded incorrectly.');
    }
    var exports = jscomp.require(jscomp.getCurrentModulePath());
    goog.loadedModules_[namespace] = {exports:exports, type:goog.ModuleType.ES6, moduleId:namespace};
  }
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw new Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.getObjectByName(name) != null;
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var i = 0; i < parts.length; i++) {
    cur = cur[parts[i]];
    if (cur == null) {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (!COMPILED && goog.DEPENDENCIES_ENABLED) {
    goog.debugLoader_.addDependency(relPath, provides, requires, opt_loadFlags);
  }
};
goog.ENABLE_DEBUG_LOADER = goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(namespace) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER) {
      goog.debugLoader_.requested(namespace);
    }
    if (goog.isProvided_(namespace)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(namespace);
      }
    } else {
      if (goog.ENABLE_DEBUG_LOADER) {
        var moduleLoaderState = goog.moduleLoaderState_;
        goog.moduleLoaderState_ = null;
        try {
          goog.debugLoader_.load_(namespace);
        } finally {
          goog.moduleLoaderState_ = moduleLoaderState;
        }
      }
    }
    return null;
  }
};
goog.requireType = function(namespace) {
  return {};
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw new Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.instance_ = undefined;
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.LOAD_MODULE_USING_EVAL = goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.SEAL_MODULE_EXPORTS = goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.TRANSPILE = goog.define("goog.TRANSPILE", "detect");
goog.ASSUME_ES_MODULES_TRANSPILED = goog.define("goog.ASSUME_ES_MODULES_TRANSPILED", false);
goog.TRANSPILE_TO_LANGUAGE = goog.define("goog.TRANSPILE_TO_LANGUAGE", "");
goog.TRANSPILER = goog.define("goog.TRANSPILER", "transpile.js");
goog.hasBadLetScoping = null;
goog.useSafari10Workaround = function() {
  if (goog.hasBadLetScoping == null) {
    var hasBadLetScoping;
    try {
      hasBadLetScoping = !eval('"use strict";' + "let x \x3d 1; function f() { return typeof x; };" + 'f() \x3d\x3d "number";');
    } catch (e) {
      hasBadLetScoping = false;
    }
    goog.hasBadLetScoping = hasBadLetScoping;
  }
  return goog.hasBadLetScoping;
};
goog.workaroundSafari10EvalBug = function(moduleDef) {
  return "(function(){" + moduleDef + "\n" + ";" + "})();\n";
};
goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:"", declareLegacyNamespace:false, type:goog.ModuleType.GOOG};
    var exports;
    if (goog.isFunction(moduleDef)) {
      exports = moduleDef.call(undefined, {});
    } else {
      if (typeof moduleDef === "string") {
        if (goog.useSafari10Workaround()) {
          moduleDef = goog.workaroundSafari10EvalBug(moduleDef);
        }
        exports = goog.loadModuleFromSource_.call(undefined, moduleDef);
      } else {
        throw new Error("Invalid module definition");
      }
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if (typeof moduleName === "string" && moduleName) {
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal && typeof exports == "object" && exports != null) {
          Object.seal(exports);
        }
      }
      var data = {exports:exports, type:goog.ModuleType.GOOG, moduleId:goog.moduleLoaderState_.moduleName};
      goog.loadedModules_[moduleName] = data;
    } else {
      throw new Error('Invalid module name "' + moduleName + '"');
    }
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
};
goog.loadModuleFromSource_ = function() {
  var exports = {};
  eval(arguments[0]);
  return exports;
};
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.global.CLOSURE_LOAD_FILE_SYNC;
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"];
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.transpile_ = function(code, path, target) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      (function() {
        (0, eval)(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      }).call(goog.global);
      if (goog.global["$gwtExport"] && goog.global["$gwtExport"]["$jscomp"] && !goog.global["$gwtExport"]["$jscomp"]["transpile"]) {
        throw new Error('The transpiler did not properly export the "transpile" ' + "method. $gwtExport: " + JSON.stringify(goog.global["$gwtExport"]));
      }
      goog.global["$jscomp"].transpile = goog.global["$gwtExport"]["$jscomp"]["transpile"];
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path, target);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call(value);
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1e9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (typeof obj.clone === "function") {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        try {
          goog.global.eval("var _evalTest_ \x3d 1;");
        } catch (ignore) {
        }
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.head.appendChild(scriptElt);
        doc.head.removeChild(scriptElt);
      }
    } else {
      throw new Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.global.CLOSURE_CSS_NAME_MAP_FN;
goog.getCssName = function(className, opt_modifier) {
  if (String(className).charAt(0) == ".") {
    throw new Error('className passed in goog.getCssName must not start with ".".' + " You passed: " + className);
  }
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  var result = opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {
    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);
  }
  return result;
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values, opt_options) {
  if (opt_options && opt_options.html) {
    str = str.replace(/</g, "\x26lt;");
  }
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2; i < arguments.length; i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw new Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (typeof caller.superClass_ !== "undefined") {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1; i < arguments.length; i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  if (typeof opt_methodName != "string" && typeof opt_methodName != "symbol") {
    throw new Error("method names provided to goog.base must be a string or a symbol");
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2; i < arguments.length; i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var proto = me.constructor.prototype; proto; proto = Object.getPrototypeOf(proto)) {
    if (proto[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return proto[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw new Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw new Error("goog.scope is not supported within a module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw new Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.defineClass.SEAL_CLASS_INSTANCES = goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    if (this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function) {
      Object.seal(instance);
    }
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
if (!COMPILED && goog.DEPENDENCIES_ENABLED) {
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.isDocumentLoading_ = function() {
    var doc = goog.global.document;
    return doc.attachEvent ? doc.readyState != "complete" : doc.readyState == "loading";
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH != undefined && typeof goog.global.CLOSURE_BASE_PATH === "string") {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var currentScript = doc.currentScript;
    if (currentScript) {
      var scripts = [currentScript];
    } else {
      var scripts = doc.getElementsByTagName("SCRIPT");
    }
    for (var i = scripts.length - 1; i >= 0; --i) {
      var script = scripts[i];
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.findBasePath_();
  goog.Transpiler = function() {
    this.requiresTranspilation_ = null;
    this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE;
  };
  goog.Transpiler.prototype.createRequiresTranspilation_ = function() {
    var transpilationTarget = "es3";
    var requiresTranspilation = {"es3":false};
    var transpilationRequiredForAllLaterModes = false;
    function addNewerLanguageTranspilationCheck(modeName, isSupported) {
      if (transpilationRequiredForAllLaterModes) {
        requiresTranspilation[modeName] = true;
      } else {
        if (isSupported()) {
          transpilationTarget = modeName;
          requiresTranspilation[modeName] = false;
        } else {
          requiresTranspilation[modeName] = true;
          transpilationRequiredForAllLaterModes = true;
        }
      }
    }
    function evalCheck(code) {
      try {
        return !!eval(code);
      } catch (ignored) {
        return false;
      }
    }
    var userAgent = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
    addNewerLanguageTranspilationCheck("es5", function() {
      return evalCheck("[1,].length\x3d\x3d1");
    });
    addNewerLanguageTranspilationCheck("es6", function() {
      var re = /Edge\/(\d+)(\.\d)*/i;
      var edgeUserAgent = userAgent.match(re);
      if (edgeUserAgent) {
        return false;
      }
      var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
      return evalCheck('(()\x3d\x3e{"use strict";' + es6fullTest + "})()");
    });
    addNewerLanguageTranspilationCheck("es7", function() {
      return evalCheck("2 ** 2 \x3d\x3d 4");
    });
    addNewerLanguageTranspilationCheck("es8", function() {
      return evalCheck("async () \x3d\x3e 1, true");
    });
    addNewerLanguageTranspilationCheck("es9", function() {
      return evalCheck("({...rest} \x3d {}), true");
    });
    addNewerLanguageTranspilationCheck("es_next", function() {
      return false;
    });
    return {target:transpilationTarget, map:requiresTranspilation};
  };
  goog.Transpiler.prototype.needsTranspile = function(lang, module) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else {
      if (goog.TRANSPILE == "never") {
        return false;
      } else {
        if (!this.requiresTranspilation_) {
          var obj = this.createRequiresTranspilation_();
          this.requiresTranspilation_ = obj.map;
          this.transpilationTarget_ = this.transpilationTarget_ || obj.target;
        }
      }
    }
    if (lang in this.requiresTranspilation_) {
      if (this.requiresTranspilation_[lang]) {
        return true;
      } else {
        if (goog.inHtmlDocument_() && module == "es6" && !("noModule" in goog.global.document.createElement("script"))) {
          return true;
        } else {
          return false;
        }
      }
    } else {
      throw new Error("Unknown language mode: " + lang);
    }
  };
  goog.Transpiler.prototype.transpile = function(code, path) {
    return goog.transpile_(code, path, this.transpilationTarget_);
  };
  goog.transpiler_ = new goog.Transpiler;
  goog.protectScriptTag_ = function(str) {
    return str.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
  };
  goog.DebugLoader_ = function() {
    this.dependencies_ = {};
    this.idToPath_ = {};
    this.written_ = {};
    this.loadingDeps_ = [];
    this.depsToLoad_ = [];
    this.paused_ = false;
    this.factory_ = new goog.DependencyFactory(goog.transpiler_);
    this.deferredCallbacks_ = {};
    this.deferredQueue_ = [];
  };
  goog.DebugLoader_.prototype.bootstrap = function(namespaces, callback) {
    var cb = callback;
    function resolve() {
      if (cb) {
        goog.global.setTimeout(cb, 0);
        cb = null;
      }
    }
    if (!namespaces.length) {
      resolve();
      return;
    }
    var deps = [];
    for (var i = 0; i < namespaces.length; i++) {
      var path = this.getPathFromDeps_(namespaces[i]);
      if (!path) {
        throw new Error("Unregonized namespace: " + namespaces[i]);
      }
      deps.push(this.dependencies_[path]);
    }
    var require = goog.require;
    var loaded = 0;
    for (var i = 0; i < namespaces.length; i++) {
      require(namespaces[i]);
      deps[i].onLoad(function() {
        if (++loaded == namespaces.length) {
          resolve();
        }
      });
    }
  };
  goog.DebugLoader_.prototype.loadClosureDeps = function() {
    var relPath = "deps.js";
    this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath + relPath), relPath, [], [], {}, false));
    this.loadDeps_();
  };
  goog.DebugLoader_.prototype.requested = function(absPathOrId, opt_force) {
    var path = this.getPathFromDeps_(absPathOrId);
    if (path && (opt_force || this.areDepsLoaded_(this.dependencies_[path].requires))) {
      var callback = this.deferredCallbacks_[path];
      if (callback) {
        delete this.deferredCallbacks_[path];
        callback();
      }
    }
  };
  goog.DebugLoader_.prototype.setDependencyFactory = function(factory) {
    this.factory_ = factory;
  };
  goog.DebugLoader_.prototype.load_ = function(namespace) {
    if (!this.getPathFromDeps_(namespace)) {
      var errorMessage = "goog.require could not find: " + namespace;
      goog.logToConsole_(errorMessage);
      throw Error(errorMessage);
    } else {
      var loader = this;
      var deps = [];
      var visit = function(namespace) {
        var path = loader.getPathFromDeps_(namespace);
        if (!path) {
          throw new Error("Bad dependency path or symbol: " + namespace);
        }
        if (loader.written_[path]) {
          return;
        }
        loader.written_[path] = true;
        var dep = loader.dependencies_[path];
        for (var i = 0; i < dep.requires.length; i++) {
          if (!goog.isProvided_(dep.requires[i])) {
            visit(dep.requires[i]);
          }
        }
        deps.push(dep);
      };
      visit(namespace);
      var wasLoading = !!this.depsToLoad_.length;
      this.depsToLoad_ = this.depsToLoad_.concat(deps);
      if (!this.paused_ && !wasLoading) {
        this.loadDeps_();
      }
    }
  };
  goog.DebugLoader_.prototype.loadDeps_ = function() {
    var loader = this;
    var paused = this.paused_;
    while (this.depsToLoad_.length && !paused) {
      (function() {
        var loadCallDone = false;
        var dep = loader.depsToLoad_.shift();
        var loaded = false;
        loader.loading_(dep);
        var controller = {pause:function() {
          if (loadCallDone) {
            throw new Error("Cannot call pause after the call to load.");
          } else {
            paused = true;
          }
        }, resume:function() {
          if (loadCallDone) {
            loader.resume_();
          } else {
            paused = false;
          }
        }, loaded:function() {
          if (loaded) {
            throw new Error("Double call to loaded.");
          }
          loaded = true;
          loader.loaded_(dep);
        }, pending:function() {
          var pending = [];
          for (var i = 0; i < loader.loadingDeps_.length; i++) {
            pending.push(loader.loadingDeps_[i]);
          }
          return pending;
        }, setModuleState:function(type) {
          goog.moduleLoaderState_ = {type:type, moduleName:"", declareLegacyNamespace:false};
        }, registerEs6ModuleExports:function(path, exports, opt_closureNamespace) {
          if (opt_closureNamespace) {
            goog.loadedModules_[opt_closureNamespace] = {exports:exports, type:goog.ModuleType.ES6, moduleId:opt_closureNamespace || ""};
          }
        }, registerGoogModuleExports:function(moduleId, exports) {
          goog.loadedModules_[moduleId] = {exports:exports, type:goog.ModuleType.GOOG, moduleId:moduleId};
        }, clearModuleState:function() {
          goog.moduleLoaderState_ = null;
        }, defer:function(callback) {
          if (loadCallDone) {
            throw new Error("Cannot register with defer after the call to load.");
          }
          loader.defer_(dep, callback);
        }, areDepsLoaded:function() {
          return loader.areDepsLoaded_(dep.requires);
        }};
        try {
          dep.load(controller);
        } finally {
          loadCallDone = true;
        }
      })();
    }
    if (paused) {
      this.pause_();
    }
  };
  goog.DebugLoader_.prototype.pause_ = function() {
    this.paused_ = true;
  };
  goog.DebugLoader_.prototype.resume_ = function() {
    if (this.paused_) {
      this.paused_ = false;
      this.loadDeps_();
    }
  };
  goog.DebugLoader_.prototype.loading_ = function(dep) {
    this.loadingDeps_.push(dep);
  };
  goog.DebugLoader_.prototype.loaded_ = function(dep) {
    for (var i = 0; i < this.loadingDeps_.length; i++) {
      if (this.loadingDeps_[i] == dep) {
        this.loadingDeps_.splice(i, 1);
        break;
      }
    }
    for (var i = 0; i < this.deferredQueue_.length; i++) {
      if (this.deferredQueue_[i] == dep.path) {
        this.deferredQueue_.splice(i, 1);
        break;
      }
    }
    if (this.loadingDeps_.length == this.deferredQueue_.length && !this.depsToLoad_.length) {
      while (this.deferredQueue_.length) {
        this.requested(this.deferredQueue_.shift(), true);
      }
    }
    dep.loaded();
  };
  goog.DebugLoader_.prototype.areDepsLoaded_ = function(pathsOrIds) {
    for (var i = 0; i < pathsOrIds.length; i++) {
      var path = this.getPathFromDeps_(pathsOrIds[i]);
      if (!path || !(path in this.deferredCallbacks_) && !goog.isProvided_(pathsOrIds[i])) {
        return false;
      }
    }
    return true;
  };
  goog.DebugLoader_.prototype.getPathFromDeps_ = function(absPathOrId) {
    if (absPathOrId in this.idToPath_) {
      return this.idToPath_[absPathOrId];
    } else {
      if (absPathOrId in this.dependencies_) {
        return absPathOrId;
      } else {
        return null;
      }
    }
  };
  goog.DebugLoader_.prototype.defer_ = function(dependency, callback) {
    this.deferredCallbacks_[dependency.path] = callback;
    this.deferredQueue_.push(dependency.path);
  };
  goog.LoadController = function() {
  };
  goog.LoadController.prototype.pause = function() {
  };
  goog.LoadController.prototype.resume = function() {
  };
  goog.LoadController.prototype.loaded = function() {
  };
  goog.LoadController.prototype.pending = function() {
  };
  goog.LoadController.prototype.registerEs6ModuleExports = function(path, exports, opt_closureNamespace) {
  };
  goog.LoadController.prototype.setModuleState = function(type) {
  };
  goog.LoadController.prototype.clearModuleState = function() {
  };
  goog.LoadController.prototype.defer = function(callback) {
  };
  goog.LoadController.prototype.areDepsLoaded = function() {
  };
  goog.Dependency = function(path, relativePath, provides, requires, loadFlags) {
    this.path = path;
    this.relativePath = relativePath;
    this.provides = provides;
    this.requires = requires;
    this.loadFlags = loadFlags;
    this.loaded_ = false;
    this.loadCallbacks_ = [];
  };
  goog.Dependency.prototype.getPathName = function() {
    var pathName = this.path;
    var protocolIndex = pathName.indexOf("://");
    if (protocolIndex >= 0) {
      pathName = pathName.substring(protocolIndex + 3);
      var slashIndex = pathName.indexOf("/");
      if (slashIndex >= 0) {
        pathName = pathName.substring(slashIndex + 1);
      }
    }
    return pathName;
  };
  goog.Dependency.prototype.onLoad = function(callback) {
    if (this.loaded_) {
      callback();
    } else {
      this.loadCallbacks_.push(callback);
    }
  };
  goog.Dependency.prototype.loaded = function() {
    this.loaded_ = true;
    var callbacks = this.loadCallbacks_;
    this.loadCallbacks_ = [];
    for (var i = 0; i < callbacks.length; i++) {
      callbacks[i]();
    }
  };
  goog.Dependency.defer_ = false;
  goog.Dependency.callbackMap_ = {};
  goog.Dependency.registerCallback_ = function(callback) {
    var key = Math.random().toString(32);
    goog.Dependency.callbackMap_[key] = callback;
    return key;
  };
  goog.Dependency.unregisterCallback_ = function(key) {
    delete goog.Dependency.callbackMap_[key];
  };
  goog.Dependency.callback_ = function(key, var_args) {
    if (key in goog.Dependency.callbackMap_) {
      var callback = goog.Dependency.callbackMap_[key];
      var args = [];
      for (var i = 1; i < arguments.length; i++) {
        args.push(arguments[i]);
      }
      callback.apply(undefined, args);
    } else {
      var errorMessage = "Callback key " + key + " does not exist (was base.js loaded more than once?).";
      throw Error(errorMessage);
    }
  };
  goog.Dependency.prototype.load = function(controller) {
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    if (!goog.inHtmlDocument_()) {
      goog.logToConsole_("Cannot use default debug loader outside of HTML documents.");
      if (this.relativePath == "deps.js") {
        goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, " + "or setting CLOSURE_NO_DEPS to true.");
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    var doc = goog.global.document;
    if (doc.readyState == "complete" && !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
      var isDeps = /\bdeps.js$/.test(this.path);
      if (isDeps) {
        controller.loaded();
        return;
      } else {
        throw Error('Cannot write "' + this.path + '" after document load');
      }
    }
    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && goog.isDocumentLoading_()) {
      var key = goog.Dependency.registerCallback_(function(script) {
        if (!goog.DebugLoader_.IS_OLD_IE_ || script.readyState == "complete") {
          goog.Dependency.unregisterCallback_(key);
          controller.loaded();
        }
      });
      var nonceAttr = !goog.DebugLoader_.IS_OLD_IE_ && goog.getScriptNonce() ? ' nonce\x3d"' + goog.getScriptNonce() + '"' : "";
      var event = goog.DebugLoader_.IS_OLD_IE_ ? "onreadystatechange" : "onload";
      var defer = goog.Dependency.defer_ ? "defer" : "";
      var script = '\x3cscript src\x3d"' + this.path + '" ' + event + "\x3d\"goog.Dependency.callback_('" + key + '\', this)" type\x3d"text/javascript" ' + defer + nonceAttr + "\x3e\x3c" + "/script\x3e";
      doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
    } else {
      var scriptEl = doc.createElement("script");
      scriptEl.defer = goog.Dependency.defer_;
      scriptEl.async = false;
      scriptEl.type = "text/javascript";
      var nonce = goog.getScriptNonce();
      if (nonce) {
        scriptEl.setAttribute("nonce", nonce);
      }
      if (goog.DebugLoader_.IS_OLD_IE_) {
        controller.pause();
        scriptEl.onreadystatechange = function() {
          if (scriptEl.readyState == "loaded" || scriptEl.readyState == "complete") {
            controller.loaded();
            controller.resume();
          }
        };
      } else {
        scriptEl.onload = function() {
          scriptEl.onload = null;
          controller.loaded();
        };
      }
      scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) : this.path;
      doc.head.appendChild(scriptEl);
    }
  };
  goog.Es6ModuleDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.Es6ModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
  };
  goog.inherits(goog.Es6ModuleDependency, goog.Dependency);
  goog.Es6ModuleDependency.prototype.load = function(controller) {
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    if (!goog.inHtmlDocument_()) {
      goog.logToConsole_("Cannot use default debug loader outside of HTML documents.");
      controller.pause();
      return;
    }
    var doc = goog.global.document;
    var dep = this;
    function write(src, contents) {
      if (contents) {
        var script = '\x3cscript type\x3d"module" crossorigin\x3e' + contents + "\x3c/" + "script\x3e";
        doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
      } else {
        var script = '\x3cscript type\x3d"module" crossorigin src\x3d"' + src + '"\x3e\x3c/' + "script\x3e";
        doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
      }
    }
    function append(src, contents) {
      var scriptEl = doc.createElement("script");
      scriptEl.defer = true;
      scriptEl.async = false;
      scriptEl.type = "module";
      scriptEl.setAttribute("crossorigin", true);
      var nonce = goog.getScriptNonce();
      if (nonce) {
        scriptEl.setAttribute("nonce", nonce);
      }
      if (contents) {
        scriptEl.textContent = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScript(contents) : contents;
      } else {
        scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(src) : src;
      }
      doc.head.appendChild(scriptEl);
    }
    var create;
    if (goog.isDocumentLoading_()) {
      create = write;
      goog.Dependency.defer_ = true;
    } else {
      create = append;
    }
    var beforeKey = goog.Dependency.registerCallback_(function() {
      goog.Dependency.unregisterCallback_(beforeKey);
      controller.setModuleState(goog.ModuleType.ES6);
    });
    create(undefined, 'goog.Dependency.callback_("' + beforeKey + '")');
    create(this.path, undefined);
    var registerKey = goog.Dependency.registerCallback_(function(exports) {
      goog.Dependency.unregisterCallback_(registerKey);
      controller.registerEs6ModuleExports(dep.path, exports, goog.moduleLoaderState_.moduleName);
    });
    create(undefined, 'import * as m from "' + this.path + '"; goog.Dependency.callback_("' + registerKey + '", m)');
    var afterKey = goog.Dependency.registerCallback_(function() {
      goog.Dependency.unregisterCallback_(afterKey);
      controller.clearModuleState();
      controller.loaded();
    });
    create(undefined, 'goog.Dependency.callback_("' + afterKey + '")');
  };
  goog.TransformedDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.TransformedDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.contents_ = null;
    this.lazyFetch_ = !goog.inHtmlDocument_() || !("noModule" in goog.global.document.createElement("script"));
  };
  goog.inherits(goog.TransformedDependency, goog.Dependency);
  goog.TransformedDependency.prototype.load = function(controller) {
    var dep = this;
    function fetch() {
      dep.contents_ = goog.loadFileSync_(dep.path);
      if (dep.contents_) {
        dep.contents_ = dep.transform(dep.contents_);
        if (dep.contents_) {
          dep.contents_ += "\n//# sourceURL\x3d" + dep.path;
        }
      }
    }
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      fetch();
      if (this.contents_ && goog.global.CLOSURE_IMPORT_SCRIPT("", this.contents_)) {
        this.contents_ = null;
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    var isEs6 = this.loadFlags["module"] == goog.ModuleType.ES6;
    if (!this.lazyFetch_) {
      fetch();
    }
    function load() {
      if (dep.lazyFetch_) {
        fetch();
      }
      if (!dep.contents_) {
        return;
      }
      if (isEs6) {
        controller.setModuleState(goog.ModuleType.ES6);
      }
      var namespace;
      try {
        var contents = dep.contents_;
        dep.contents_ = null;
        goog.globalEval(contents);
        if (isEs6) {
          namespace = goog.moduleLoaderState_.moduleName;
        }
      } finally {
        if (isEs6) {
          controller.clearModuleState();
        }
      }
      if (isEs6) {
        goog.global["$jscomp"]["require"]["ensure"]([dep.getPathName()], function() {
          controller.registerEs6ModuleExports(dep.path, goog.global["$jscomp"]["require"](dep.getPathName()), namespace);
        });
      }
      controller.loaded();
    }
    function fetchInOwnScriptThenLoad() {
      var doc = goog.global.document;
      var key = goog.Dependency.registerCallback_(function() {
        goog.Dependency.unregisterCallback_(key);
        load();
      });
      var script = '\x3cscript type\x3d"text/javascript"\x3e' + goog.protectScriptTag_('goog.Dependency.callback_("' + key + '");') + "\x3c/" + "script\x3e";
      doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
    }
    var anythingElsePending = controller.pending().length > 1;
    var useOldIeWorkAround = anythingElsePending && goog.DebugLoader_.IS_OLD_IE_;
    var needsAsyncLoading = goog.Dependency.defer_ && (anythingElsePending || goog.isDocumentLoading_());
    if (useOldIeWorkAround || needsAsyncLoading) {
      controller.defer(function() {
        load();
      });
      return;
    }
    var doc = goog.global.document;
    var isInternetExplorer = goog.inHtmlDocument_() && "ActiveXObject" in goog.global;
    if (isEs6 && goog.inHtmlDocument_() && goog.isDocumentLoading_() && !isInternetExplorer) {
      goog.Dependency.defer_ = true;
      controller.pause();
      var oldCallback = doc.onreadystatechange;
      doc.onreadystatechange = function() {
        if (doc.readyState == "interactive") {
          doc.onreadystatechange = oldCallback;
          load();
          controller.resume();
        }
        if (goog.isFunction(oldCallback)) {
          oldCallback.apply(undefined, arguments);
        }
      };
    } else {
      if (goog.DebugLoader_.IS_OLD_IE_ || !goog.inHtmlDocument_() || !goog.isDocumentLoading_()) {
        load();
      } else {
        fetchInOwnScriptThenLoad();
      }
    }
  };
  goog.TransformedDependency.prototype.transform = function(contents) {
  };
  goog.TranspiledDependency = function(path, relativePath, provides, requires, loadFlags, transpiler) {
    goog.TranspiledDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.transpiler = transpiler;
  };
  goog.inherits(goog.TranspiledDependency, goog.TransformedDependency);
  goog.TranspiledDependency.prototype.transform = function(contents) {
    return this.transpiler.transpile(contents, this.getPathName());
  };
  goog.PreTranspiledEs6ModuleDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.PreTranspiledEs6ModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
  };
  goog.inherits(goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency);
  goog.PreTranspiledEs6ModuleDependency.prototype.transform = function(contents) {
    return contents;
  };
  goog.GoogModuleDependency = function(path, relativePath, provides, requires, loadFlags, needsTranspile, transpiler) {
    goog.GoogModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.needsTranspile_ = needsTranspile;
    this.transpiler_ = transpiler;
  };
  goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency);
  goog.GoogModuleDependency.prototype.transform = function(contents) {
    if (this.needsTranspile_) {
      contents = this.transpiler_.transpile(contents, this.getPathName());
    }
    if (!goog.LOAD_MODULE_USING_EVAL || goog.global.JSON === undefined) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + contents + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + this.path + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(contents + "\n//# sourceURL\x3d" + this.path + "\n") + ");";
    }
  };
  goog.DebugLoader_.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document["all"]);
  goog.DebugLoader_.prototype.addDependency = function(relPath, provides, requires, opt_loadFlags) {
    provides = provides || [];
    relPath = relPath.replace(/\\/g, "/");
    var path = goog.normalizePath_(goog.basePath + relPath);
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":goog.ModuleType.GOOG} : {};
    }
    var dep = this.factory_.createDependency(path, relPath, provides, requires, opt_loadFlags, goog.transpiler_.needsTranspile(opt_loadFlags["lang"] || "es3", opt_loadFlags["module"]));
    this.dependencies_[path] = dep;
    for (var i = 0; i < provides.length; i++) {
      this.idToPath_[provides[i]] = path;
    }
    this.idToPath_[relPath] = path;
  };
  goog.DependencyFactory = function(transpiler) {
    this.transpiler = transpiler;
  };
  goog.DependencyFactory.prototype.createDependency = function(path, relativePath, provides, requires, loadFlags, needsTranspile) {
    if (loadFlags["module"] == goog.ModuleType.GOOG) {
      return new goog.GoogModuleDependency(path, relativePath, provides, requires, loadFlags, needsTranspile, this.transpiler);
    } else {
      if (needsTranspile) {
        return new goog.TranspiledDependency(path, relativePath, provides, requires, loadFlags, this.transpiler);
      } else {
        if (loadFlags["module"] == goog.ModuleType.ES6) {
          if (goog.TRANSPILE == "never" && goog.ASSUME_ES_MODULES_TRANSPILED) {
            return new goog.PreTranspiledEs6ModuleDependency(path, relativePath, provides, requires, loadFlags);
          } else {
            return new goog.Es6ModuleDependency(path, relativePath, provides, requires, loadFlags);
          }
        } else {
          return new goog.Dependency(path, relativePath, provides, requires, loadFlags);
        }
      }
    }
  };
  goog.debugLoader_ = new goog.DebugLoader_;
  goog.loadClosureDeps = function() {
    goog.debugLoader_.loadClosureDeps();
  };
  goog.setDependencyFactory = function(factory) {
    goog.debugLoader_.setDependencyFactory(factory);
  };
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.debugLoader_.loadClosureDeps();
  }
  goog.bootstrap = function(namespaces, callback) {
    goog.debugLoader_.bootstrap(namespaces, callback);
  };
}
goog.TRUSTED_TYPES_POLICY_NAME = goog.define("goog.TRUSTED_TYPES_POLICY_NAME", "");
goog.identity_ = function(s) {
  return s;
};
goog.createTrustedTypesPolicy = function(name) {
  var policy = null;
  var policyFactory = goog.global.trustedTypes || goog.global.TrustedTypes;
  if (!policyFactory || !policyFactory.createPolicy) {
    return policy;
  }
  try {
    policy = policyFactory.createPolicy(name, {createHTML:goog.identity_, createScript:goog.identity_, createScriptURL:goog.identity_, createURL:goog.identity_});
  } catch (e) {
    goog.logToConsole_(e.message);
  }
  return policy;
};
goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#base") : null;
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    const stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.asserts.ENABLE_ASSERTS = goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  goog.debug.Error.call(this, goog.asserts.subs_(messagePattern, messageArgs));
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.subs_ = function(pattern, subs) {
  var splitParts = pattern.split("%s");
  var returnString = "";
  var subLast = splitParts.length - 1;
  for (var i = 0; i < subLast; i++) {
    var sub = i < subs.length ? subs[i] : "%s";
    returnString += splitParts[i] + sub;
  }
  return returnString + splitParts[subLast];
};
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.assertExists = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && value == null) {
    goog.asserts.doAssertFailure_("Expected to exist: %s.", [value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && typeof value !== "number") {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && typeof value !== "string") {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && typeof value !== "boolean") {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertFinite = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (typeof value != "number" || !isFinite(value))) {
    goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.", [value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.array.ASSUME_NATIVE_FUNCTIONS = goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", goog.FEATURESET_YEAR > 2012);
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (typeof arr === "string") {
    if (typeof obj !== "string" || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i < arr.length; i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (typeof arr === "string") {
    if (typeof obj !== "string" || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i >= 0; i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; --i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.asserts.assert(f != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : typeof arr === "string" ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : typeof arr === "string" ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1; i >= 0; i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0; i < length; i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1; i < arguments.length; i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0; j < len2; j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return Array.prototype.slice.call(arr, start);
  } else {
    return Array.prototype.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + (right - left >>> 1);
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : -left - 1;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  var compArr = new Array(arr.length);
  for (var i = 0; i < arr.length; i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(compArr, stableCompareFn);
  for (var i = 0; i < arr.length; i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1; i < arr.length; i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0; i < l; i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0; i < l; i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0; i < array.length; i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (key !== undefined) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start; i < end; i += step) {
      array.push(i);
    }
  } else {
    for (var i = start; i > end; i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0; i < n; i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0; i < arguments.length; i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0; c < element.length; c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0; r < recurseResult.length; r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      Array.prototype.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        Array.prototype.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1; i < arguments.length; i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0; i < minLen; i++) {
    var value = [];
    for (var j = 0; j < arguments.length; j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1; i > 0; i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.provide("goog.string.internal");
goog.string.internal.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.internal.endsWith = function(str, suffix) {
  const l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.internal.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.internal.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.internal.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.internal.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.internal.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.internal.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.internal.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(str)[1];
};
goog.string.internal.caseInsensitiveCompare = function(str1, str2) {
  const test1 = String(str1).toLowerCase();
  const test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.internal.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.internal.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.internal.AMP_RE_, "\x26amp;").replace(goog.string.internal.LT_RE_, "\x26lt;").replace(goog.string.internal.GT_RE_, "\x26gt;").replace(goog.string.internal.QUOT_RE_, "\x26quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.internal.NULL_RE_, "\x26#0;");
    return str;
  } else {
    if (!goog.string.internal.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.internal.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.internal.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.internal.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.internal.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.internal.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.internal.NULL_RE_, "\x26#0;");
    }
    return str;
  }
};
goog.string.internal.AMP_RE_ = /&/g;
goog.string.internal.LT_RE_ = /</g;
goog.string.internal.GT_RE_ = />/g;
goog.string.internal.QUOT_RE_ = /"/g;
goog.string.internal.SINGLE_QUOTE_RE_ = /'/g;
goog.string.internal.NULL_RE_ = /\x00/g;
goog.string.internal.ALL_RE_ = /[\x00&<>"']/;
goog.string.internal.whitespaceEscape = function(str, opt_xml) {
  return goog.string.internal.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.internal.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.internal.caseInsensitiveContains = function(str, subString) {
  return goog.string.internal.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.internal.compareVersions = function(version1, version2) {
  let order = 0;
  const v1Subs = goog.string.internal.trim(String(version1)).split(".");
  const v2Subs = goog.string.internal.trim(String(version2)).split(".");
  const subCount = Math.max(v1Subs.length, v2Subs.length);
  for (let subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {
    let v1Sub = v1Subs[subIdx] || "";
    let v2Sub = v2Subs[subIdx] || "";
    do {
      const v1Comp = /(\d*)(\D*)(.*)/.exec(v1Sub) || ["", "", "", ""];
      const v2Comp = /(\d*)(\D*)(.*)/.exec(v2Sub) || ["", "", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      const v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      const v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.internal.compareElements_(v1CompNum, v2CompNum) || goog.string.internal.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.internal.compareElements_(v1Comp[2], v2Comp[2]);
      v1Sub = v1Comp[3];
      v2Sub = v2Comp[3];
    } while (order == 0);
  }
  return order;
};
goog.string.internal.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string.internal");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.internal.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.internal.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.object");
goog.object.is = function(v, v2) {
  if (v === v2) {
    return v !== 0 || 1 / v === 1 / v2;
  }
  return v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (const key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  const res = {};
  for (const key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  const res = {};
  for (const key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (const key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (const key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  let rv = 0;
  for (const key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (const key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (const key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  const res = [];
  let i = 0;
  for (const key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  const res = [];
  let i = 0;
  for (const key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  const isArrayLike = goog.isArrayLike(var_args);
  const keys = isArrayLike ? var_args : arguments;
  for (let i = isArrayLike ? 0 : 1; i < keys.length; i++) {
    if (obj == null) {
      return undefined;
    }
    obj = obj[keys[i]];
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (const key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (const key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  const key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (const key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (const i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  let rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw new Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  const val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (const k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (const k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  const res = {};
  for (const key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  const type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    const clone = type == "array" ? [] : {};
    for (const key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  const transposed = {};
  for (const key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  let key;
  let source;
  for (let i = 1; i < arguments.length; i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (let j = 0; j < goog.object.PROTOTYPE_FIELDS_.length; j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  const argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw new Error("Uneven number of arguments");
  }
  const rv = {};
  for (let i = 0; i < argLength; i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  const argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  const rv = {};
  for (let i = 0; i < argLength; i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  let result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.object.getAllPropertyNames = function(obj, opt_includeObjectPrototype, opt_includeFunctionPrototype) {
  if (!obj) {
    return [];
  }
  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
    return goog.object.getKeys(obj);
  }
  const visitedSet = {};
  let proto = obj;
  while (proto && (proto !== Object.prototype || !!opt_includeObjectPrototype) && (proto !== Function.prototype || !!opt_includeFunctionPrototype)) {
    const names = Object.getOwnPropertyNames(proto);
    for (let i = 0; i < names.length; i++) {
      visitedSet[names[i]] = true;
    }
    proto = Object.getPrototypeOf(proto);
  }
  return goog.object.getKeys(visitedSet);
};
goog.object.getSuperClass = function(constructor) {
  var proto = Object.getPrototypeOf(constructor.prototype);
  return proto && proto.constructor;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string.internal");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdgeHtml_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchEdgeChromium_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edg/");
};
goog.labs.userAgent.browser.matchOperaChromium_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox") || goog.labs.userAgent.util.matchUserAgent("FxiOS");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdgeHtml_() || goog.labs.userAgent.browser.matchEdgeChromium_() || goog.labs.userAgent.browser.matchOperaChromium_() || goog.labs.userAgent.browser.matchFirefox_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && !goog.labs.userAgent.browser.matchFirefox_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdgeHtml_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdgeHtml_;
goog.labs.userAgent.browser.isEdgeChromium = goog.labs.userAgent.browser.matchEdgeChromium_;
goog.labs.userAgent.browser.isOperaChromium = goog.labs.userAgent.browser.matchOperaChromium_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isEdgeChromium()) {
    return lookUpValueWithKeys(["Edg"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.dom.asserts");
goog.require("goog.asserts");
goog.dom.asserts.assertIsLocation = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (win) {
      if (!o || !(o instanceof win.Location) && o instanceof win.Element) {
        goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
      }
    }
  }
  return o;
};
goog.dom.asserts.assertIsElementType_ = function(o, typename) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (win && typeof win[typename] != "undefined") {
      if (!o || !(o instanceof win[typename]) && (o instanceof win.Location || o instanceof win.Element)) {
        goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); " + "got: %s", typename, goog.dom.asserts.debugStringForType_(o));
      }
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLAnchorElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLAnchorElement");
};
goog.dom.asserts.assertIsHTMLButtonElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLButtonElement");
};
goog.dom.asserts.assertIsHTMLLinkElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLLinkElement");
};
goog.dom.asserts.assertIsHTMLImageElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLImageElement");
};
goog.dom.asserts.assertIsHTMLAudioElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLAudioElement");
};
goog.dom.asserts.assertIsHTMLVideoElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLVideoElement");
};
goog.dom.asserts.assertIsHTMLInputElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLInputElement");
};
goog.dom.asserts.assertIsHTMLTextAreaElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLTextAreaElement");
};
goog.dom.asserts.assertIsHTMLCanvasElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLCanvasElement");
};
goog.dom.asserts.assertIsHTMLEmbedElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLEmbedElement");
};
goog.dom.asserts.assertIsHTMLFormElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLFormElement");
};
goog.dom.asserts.assertIsHTMLFrameElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLFrameElement");
};
goog.dom.asserts.assertIsHTMLIFrameElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLIFrameElement");
};
goog.dom.asserts.assertIsHTMLObjectElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLObjectElement");
};
goog.dom.asserts.assertIsHTMLScriptElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLScriptElement");
};
goog.dom.asserts.debugStringForType_ = function(value) {
  if (goog.isObject(value)) {
    try {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } catch (e) {
      return "\x3cobject could not be stringified\x3e";
    }
  } else {
    return value === undefined ? "undefined" : value === null ? "null" : typeof value;
  }
};
goog.dom.asserts.getWindow_ = function(o) {
  try {
    var doc = o && o.ownerDocument;
    var win = doc && (doc.defaultView || doc.parentWindow);
    win = win || goog.global;
    if (win.Element && win.Location) {
      return win;
    }
  } catch (ex) {
  }
  return null;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = function() {
  return false;
};
goog.functions.TRUE = function() {
  return true;
};
goog.functions.NULL = function() {
  return null;
};
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw new Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    const self = this;
    return f.apply(self, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.partialRight = function(fn, var_args) {
  const rightArgs = Array.prototype.slice.call(arguments, 1);
  return function() {
    const self = this;
    const newArgs = Array.prototype.slice.call(arguments);
    newArgs.push.apply(newArgs, rightArgs);
    return fn.apply(self, newArgs);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  const functions = arguments;
  const length = functions.length;
  return function() {
    const self = this;
    let result;
    if (length) {
      result = functions[length - 1].apply(self, arguments);
    }
    for (let i = length - 2; i >= 0; i--) {
      result = functions[i].call(self, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  const functions = arguments;
  const length = functions.length;
  return function() {
    const self = this;
    let result;
    for (let i = 0; i < length; i++) {
      result = functions[i].apply(self, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  const functions = arguments;
  const length = functions.length;
  return function() {
    const self = this;
    for (let i = 0; i < length; i++) {
      if (!functions[i].apply(self, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  const functions = arguments;
  const length = functions.length;
  return function() {
    const self = this;
    for (let i = 0; i < length; i++) {
      if (functions[i].apply(self, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    const self = this;
    return !f.apply(self, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  const temp = function() {
  };
  temp.prototype = constructor.prototype;
  const obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.functions.CACHE_RETURN_VALUE = goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  let called = false;
  let value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  let inner = f;
  return function() {
    if (inner) {
      const tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  let timeout = 0;
  return function(var_args) {
    goog.global.clearTimeout(timeout);
    const args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(opt_scope, args);
    }, interval);
  };
};
goog.functions.throttle = function(f, interval, opt_scope) {
  let timeout = 0;
  let shouldFire = false;
  let args = [];
  const handleTimeout = function() {
    timeout = 0;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  const fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(opt_scope, args);
  };
  return function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  };
};
goog.functions.rateLimit = function(f, interval, opt_scope) {
  let timeout = 0;
  const handleTimeout = function() {
    timeout = 0;
  };
  return function(var_args) {
    if (!timeout) {
      timeout = goog.global.setTimeout(handleTimeout, interval);
      f.apply(opt_scope, arguments);
    }
  };
};
goog.provide("goog.dom.HtmlElement");
goog.dom.HtmlElement = function() {
};
goog.provide("goog.dom.TagName");
goog.require("goog.dom.HtmlElement");
goog.dom.TagName = function(tagName) {
  this.tagName_ = tagName;
};
goog.dom.TagName.prototype.toString = function() {
  return this.tagName_;
};
goog.dom.TagName.A = new goog.dom.TagName("A");
goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR");
goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM");
goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS");
goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET");
goog.dom.TagName.AREA = new goog.dom.TagName("AREA");
goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE");
goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE");
goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO");
goog.dom.TagName.B = new goog.dom.TagName("B");
goog.dom.TagName.BASE = new goog.dom.TagName("BASE");
goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT");
goog.dom.TagName.BDI = new goog.dom.TagName("BDI");
goog.dom.TagName.BDO = new goog.dom.TagName("BDO");
goog.dom.TagName.BIG = new goog.dom.TagName("BIG");
goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE");
goog.dom.TagName.BODY = new goog.dom.TagName("BODY");
goog.dom.TagName.BR = new goog.dom.TagName("BR");
goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON");
goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS");
goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION");
goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER");
goog.dom.TagName.CITE = new goog.dom.TagName("CITE");
goog.dom.TagName.CODE = new goog.dom.TagName("CODE");
goog.dom.TagName.COL = new goog.dom.TagName("COL");
goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND");
goog.dom.TagName.DATA = new goog.dom.TagName("DATA");
goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST");
goog.dom.TagName.DD = new goog.dom.TagName("DD");
goog.dom.TagName.DEL = new goog.dom.TagName("DEL");
goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS");
goog.dom.TagName.DFN = new goog.dom.TagName("DFN");
goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG");
goog.dom.TagName.DIR = new goog.dom.TagName("DIR");
goog.dom.TagName.DIV = new goog.dom.TagName("DIV");
goog.dom.TagName.DL = new goog.dom.TagName("DL");
goog.dom.TagName.DT = new goog.dom.TagName("DT");
goog.dom.TagName.EM = new goog.dom.TagName("EM");
goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED");
goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET");
goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION");
goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE");
goog.dom.TagName.FONT = new goog.dom.TagName("FONT");
goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER");
goog.dom.TagName.FORM = new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME");
goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET");
goog.dom.TagName.H1 = new goog.dom.TagName("H1");
goog.dom.TagName.H2 = new goog.dom.TagName("H2");
goog.dom.TagName.H3 = new goog.dom.TagName("H3");
goog.dom.TagName.H4 = new goog.dom.TagName("H4");
goog.dom.TagName.H5 = new goog.dom.TagName("H5");
goog.dom.TagName.H6 = new goog.dom.TagName("H6");
goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD");
goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP");
goog.dom.TagName.HR = new goog.dom.TagName("HR");
goog.dom.TagName.HTML = new goog.dom.TagName("HTML");
goog.dom.TagName.I = new goog.dom.TagName("I");
goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME");
goog.dom.TagName.IMG = new goog.dom.TagName("IMG");
goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT");
goog.dom.TagName.INS = new goog.dom.TagName("INS");
goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX");
goog.dom.TagName.KBD = new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN");
goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL");
goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND");
goog.dom.TagName.LI = new goog.dom.TagName("LI");
goog.dom.TagName.LINK = new goog.dom.TagName("LINK");
goog.dom.TagName.MAIN = new goog.dom.TagName("MAIN");
goog.dom.TagName.MAP = new goog.dom.TagName("MAP");
goog.dom.TagName.MARK = new goog.dom.TagName("MARK");
goog.dom.TagName.MATH = new goog.dom.TagName("MATH");
goog.dom.TagName.MENU = new goog.dom.TagName("MENU");
goog.dom.TagName.MENUITEM = new goog.dom.TagName("MENUITEM");
goog.dom.TagName.META = new goog.dom.TagName("META");
goog.dom.TagName.METER = new goog.dom.TagName("METER");
goog.dom.TagName.NAV = new goog.dom.TagName("NAV");
goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES");
goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT");
goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT");
goog.dom.TagName.OL = new goog.dom.TagName("OL");
goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP");
goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION");
goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT");
goog.dom.TagName.P = new goog.dom.TagName("P");
goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM");
goog.dom.TagName.PICTURE = new goog.dom.TagName("PICTURE");
goog.dom.TagName.PRE = new goog.dom.TagName("PRE");
goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS");
goog.dom.TagName.Q = new goog.dom.TagName("Q");
goog.dom.TagName.RP = new goog.dom.TagName("RP");
goog.dom.TagName.RT = new goog.dom.TagName("RT");
goog.dom.TagName.RTC = new goog.dom.TagName("RTC");
goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY");
goog.dom.TagName.S = new goog.dom.TagName("S");
goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP");
goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT");
goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION");
goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT");
goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL");
goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE");
goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN");
goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE");
goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG");
goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE");
goog.dom.TagName.SUB = new goog.dom.TagName("SUB");
goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY");
goog.dom.TagName.SUP = new goog.dom.TagName("SUP");
goog.dom.TagName.SVG = new goog.dom.TagName("SVG");
goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE");
goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY");
goog.dom.TagName.TD = new goog.dom.TagName("TD");
goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE");
goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA");
goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT");
goog.dom.TagName.TH = new goog.dom.TagName("TH");
goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD");
goog.dom.TagName.TIME = new goog.dom.TagName("TIME");
goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE");
goog.dom.TagName.TR = new goog.dom.TagName("TR");
goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK");
goog.dom.TagName.TT = new goog.dom.TagName("TT");
goog.dom.TagName.U = new goog.dom.TagName("U");
goog.dom.TagName.UL = new goog.dom.TagName("UL");
goog.dom.TagName.VAR = new goog.dom.TagName("VAR");
goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO");
goog.dom.TagName.WBR = new goog.dom.TagName("WBR");
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet("area", "base", "br", "col", "command", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr");
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.html.trustedtypes");
goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#html") : null;
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function(opt_token, opt_content) {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = opt_token === goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ && opt_content || "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
if (goog.DEBUG) {
  goog.string.Const.prototype.toString = function() {
    return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
  };
}
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.string.Const.EMPTY = goog.string.Const.from("");
goog.provide("goog.html.SafeScript");
goog.require("goog.asserts");
goog.require("goog.html.trustedtypes");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeScript = function() {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeScript.prototype.implementsGoogStringTypedString = true;
goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeScript.fromConstant = function(script) {
  var scriptString = goog.string.Const.unwrap(script);
  if (scriptString.length === 0) {
    return goog.html.SafeScript.EMPTY;
  }
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString);
};
goog.html.SafeScript.fromConstantAndArgs = function(code, var_args) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) {
    args.push(goog.html.SafeScript.stringify_(arguments[i]));
  }
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("(" + goog.string.Const.unwrap(code) + ")(" + args.join(", ") + ");");
};
goog.html.SafeScript.fromJson = function(val) {
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(goog.html.SafeScript.stringify_(val));
};
goog.html.SafeScript.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();
};
if (goog.DEBUG) {
  goog.html.SafeScript.prototype.toString = function() {
    return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
  };
}
goog.html.SafeScript.unwrap = function(safeScript) {
  return goog.html.SafeScript.unwrapTrustedScript(safeScript).toString();
};
goog.html.SafeScript.unwrapTrustedScript = function(safeScript) {
  if (safeScript instanceof goog.html.SafeScript && safeScript.constructor === goog.html.SafeScript && safeScript.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeScript, got '" + safeScript + "' of type " + goog.typeOf(safeScript));
    return "type_error:SafeScript";
  }
};
goog.html.SafeScript.stringify_ = function(val) {
  var json = JSON.stringify(val);
  return json.replace(/</g, "\\x3c");
};
goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(script) {
  return (new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(script);
};
goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(script) {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScript(script) : script;
  return this;
};
goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.fs.url");
goog.fs.url.createObjectUrl = function(blob) {
  return goog.fs.url.getUrlObject_().createObjectURL(blob);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.UrlObject_;
goog.fs.url.getUrlObject_ = function() {
  const urlObject = goog.fs.url.findUrlObject_();
  if (urlObject != null) {
    return urlObject;
  } else {
    throw new Error("This browser doesn't seem to support blob URLs");
  }
};
goog.fs.url.findUrlObject_ = function() {
  if (goog.global.URL !== undefined && goog.global.URL.createObjectURL !== undefined) {
    return goog.global.URL;
  } else {
    if (goog.global.webkitURL !== undefined && goog.global.webkitURL.createObjectURL !== undefined) {
      return goog.global.webkitURL;
    } else {
      if (goog.global.createObjectURL !== undefined) {
        return goog.global;
      } else {
        return null;
      }
    }
  }
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return goog.fs.url.findUrlObject_() != null;
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.i18n.bidi.FORCE_RTL = goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_") || goog.LOCALE.length >= 7 && ((goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") && (goog.LOCALE.substring(3, 7).toLowerCase() == "adlm" || goog.LOCALE.substring(3, 
7).toLowerCase() == "arab" || goog.LOCALE.substring(3, 7).toLowerCase() == "hebr" || goog.LOCALE.substring(3, 7).toLowerCase() == "nkoo" || goog.LOCALE.substring(3, 7).toLowerCase() == "rohg" || goog.LOCALE.substring(3, 7).toLowerCase() == "thaa")) || goog.LOCALE.length >= 8 && ((goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_") && (goog.LOCALE.substring(4, 8).toLowerCase() == "adlm" || goog.LOCALE.substring(4, 8).toLowerCase() == "arab" || goog.LOCALE.substring(4, 8).toLowerCase() == 
"hebr" || goog.LOCALE.substring(4, 8).toLowerCase() == "nkoo" || goog.LOCALE.substring(4, 8).toLowerCase() == "rohg" || goog.LOCALE.substring(4, 8).toLowerCase() == "thaa"));
goog.i18n.bidi.Format = {LRE:"‪", RLE:"‫", PDF:"‬", LRM:"‎", RLM:"‏"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-zÀ-ÖØ-öø-ʸ̀-֐ऀ-῿" + "‎Ⰰ-\ud801\ud804-\ud839\ud83c-\udbff" + "豈-﬜︀-﹯﻽-￿";
goog.i18n.bidi.rtlChars_ = "֑-ۯۺ-ࣿ‏\ud802-\ud803\ud83a-\ud83b" + "יִ-﷿ﹰ-ﻼ";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]" + "[^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]" + "[^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  const useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  const mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1״").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1׳");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = 0.40;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  let rtlCount = 0;
  let totalCount = 0;
  let hasWeaklyLtr = false;
  const tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (let i = 0; i < tokens.length; i++) {
    const token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    const htmlElement = element;
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      htmlElement.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      htmlElement.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  const htmlElement = element;
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      htmlElement.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      htmlElement.dir = "rtl";
      break;
    default:
      htmlElement.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.TrustedResourceUrl");
goog.require("goog.asserts");
goog.require("goog.html.trustedtypes");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.TrustedResourceUrl = function(opt_token, opt_content) {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = opt_token === goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ && opt_content || "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString();
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
goog.html.TrustedResourceUrl.prototype.cloneWithParams = function(searchParams, opt_hashParams) {
  var url = goog.html.TrustedResourceUrl.unwrap(this);
  var parts = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(url);
  var urlBase = parts[1];
  var urlSearch = parts[2] || "";
  var urlHash = parts[3] || "";
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(urlBase + goog.html.TrustedResourceUrl.stringifyParams_("?", urlSearch, searchParams) + goog.html.TrustedResourceUrl.stringifyParams_("#", urlHash, opt_hashParams));
};
if (goog.DEBUG) {
  goog.html.TrustedResourceUrl.prototype.toString = function() {
    return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
  };
}
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(trustedResourceUrl).toString();
};
goog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl && trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "' of type " + goog.typeOf(trustedResourceUrl));
    return "type_error:TrustedResourceUrl";
  }
};
goog.html.TrustedResourceUrl.format = function(format, args) {
  var formatStr = goog.string.Const.unwrap(format);
  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {
    throw new Error("Invalid TrustedResourceUrl format: " + formatStr);
  }
  var result = formatStr.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {
    if (!Object.prototype.hasOwnProperty.call(args, id)) {
      throw new Error('Found marker, "' + id + '", in format string, "' + formatStr + '", but no valid label mapping found ' + "in args: " + JSON.stringify(args));
    }
    var arg = args[id];
    if (arg instanceof goog.string.Const) {
      return goog.string.Const.unwrap(arg);
    } else {
      return encodeURIComponent(String(arg));
    }
  });
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g;
goog.html.TrustedResourceUrl.BASE_URL_ = new RegExp("^((https:)?//[0-9a-z.:[\\]-]+/" + "|/[^/\\\\]" + "|[^:/\\\\%]+/" + "|[^:/\\\\%]*[?#]" + "|about:blank#" + ")", "i");
goog.html.TrustedResourceUrl.URL_PARAM_PARSER_ = /^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;
goog.html.TrustedResourceUrl.formatWithParams = function(format, args, searchParams, opt_hashParams) {
  var url = goog.html.TrustedResourceUrl.format(format, args);
  return url.cloneWithParams(searchParams, opt_hashParams);
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.fromConstants = function(parts) {
  var unwrapped = "";
  for (var i = 0; i < parts.length; i++) {
    unwrapped += goog.string.Const.unwrap(parts[i]);
  }
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var value = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScriptURL(url) : url;
  return new goog.html.TrustedResourceUrl(goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_, value);
};
goog.html.TrustedResourceUrl.stringifyParams_ = function(prefix, currentString, params) {
  if (params == null) {
    return currentString;
  }
  if (typeof params === "string") {
    return params ? prefix + encodeURIComponent(params) : "";
  }
  for (var key in params) {
    var value = params[key];
    var outputValues = goog.isArray(value) ? value : [value];
    for (var i = 0; i < outputValues.length; i++) {
      var outputValue = outputValues[i];
      if (outputValue != null) {
        if (!currentString) {
          currentString = prefix;
        }
        currentString += (currentString.length > prefix.length ? "\x26" : "") + encodeURIComponent(key) + "\x3d" + encodeURIComponent(String(outputValue));
      }
    }
  }
  return currentString;
};
goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.fs.url");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.require("goog.string.internal");
goog.html.SafeUrl = function(opt_token, opt_content) {
  this.privateDoNotAccessOrElseSafeUrlWrappedValue_ = opt_token === goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ && opt_content || "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeUrlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "' of type " + goog.typeOf(safeUrl));
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = new RegExp("^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-wav|wav|webm)|" + "image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|" + "text/csv|" + "video/(?:mpeg|mp4|ogg|webm|quicktime))" + '(?:;\\w+\x3d(?:\\w+|"[\\w;\x3d]+"))*$', "i");
goog.html.SafeUrl.isSafeMimeType = function(mimeType) {
  return goog.html.SAFE_MIME_TYPE_PATTERN_.test(mimeType);
};
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.DATA_URL_PATTERN_ = /^data:([^,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl = function(dataUrl) {
  var filteredDataUrl = dataUrl.replace(/(%0A|%0D)/g, "");
  var match = filteredDataUrl.match(goog.html.DATA_URL_PATTERN_);
  var valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(valid ? filteredDataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);
};
goog.html.SafeUrl.fromTelUrl = function(telUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(telUrl, "tel:")) {
    telUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(telUrl);
};
goog.html.SIP_URL_PATTERN_ = new RegExp("^sip[s]?:[+a-z0-9_.!$%\x26'*\\/\x3d^`{|}~-]+@([a-z0-9-]+\\.)+[a-z0-9]{2,63}$", "i");
goog.html.SafeUrl.fromSipUrl = function(sipUrl) {
  if (!goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(sipUrl))) {
    sipUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sipUrl);
};
goog.html.SafeUrl.fromFacebookMessengerUrl = function(facebookMessengerUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(facebookMessengerUrl, "fb-messenger://share")) {
    facebookMessengerUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(facebookMessengerUrl);
};
goog.html.SafeUrl.fromWhatsAppUrl = function(whatsAppUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(whatsAppUrl, "whatsapp://send")) {
    whatsAppUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(whatsAppUrl);
};
goog.html.SafeUrl.fromSmsUrl = function(smsUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(smsUrl, "sms:") || !goog.html.SafeUrl.isSmsUrlBodyValid_(smsUrl)) {
    smsUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(smsUrl);
};
goog.html.SafeUrl.isSmsUrlBodyValid_ = function(smsUrl) {
  var hash = smsUrl.indexOf("#");
  if (hash > 0) {
    smsUrl = smsUrl.substring(0, hash);
  }
  var bodyParams = smsUrl.match(/[?&]body=/gi);
  if (!bodyParams) {
    return true;
  }
  if (bodyParams.length > 1) {
    return false;
  }
  var bodyValue = smsUrl.match(/[?&]body=([^&]*)/)[1];
  if (!bodyValue) {
    return true;
  }
  try {
    decodeURIComponent(bodyValue);
  } catch (error) {
    return false;
  }
  return /^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(bodyValue);
};
goog.html.SafeUrl.fromSshUrl = function(sshUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(sshUrl, "ssh://")) {
    sshUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sshUrl);
};
goog.html.SafeUrl.sanitizeChromeExtensionUrl = function(url, extensionId) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//, url, extensionId);
};
goog.html.SafeUrl.sanitizeFirefoxExtensionUrl = function(url, extensionId) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//, url, extensionId);
};
goog.html.SafeUrl.sanitizeEdgeExtensionUrl = function(url, extensionId) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//, url, extensionId);
};
goog.html.SafeUrl.sanitizeExtensionUrl_ = function(scheme, url, extensionId) {
  var matches = scheme.exec(url);
  if (!matches) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  } else {
    var extractedExtensionId = matches[1];
    var acceptedExtensionIds;
    if (extensionId instanceof goog.string.Const) {
      acceptedExtensionIds = [goog.string.Const.unwrap(extensionId)];
    } else {
      acceptedExtensionIds = extensionId.map(function unwrap(x) {
        return goog.string.Const.unwrap(x);
      });
    }
    if (acceptedExtensionIds.indexOf(extractedExtensionId) == -1) {
      url = goog.html.SafeUrl.INNOCUOUS_STRING;
    }
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.fromTrustedResourceUrl = function(trustedResourceUrl) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(trustedResourceUrl));
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.SAFE_URL_PATTERN = goog.html.SAFE_URL_PATTERN_;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (typeof url == "object" && url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.sanitizeAssertUnchanged = function(url, opt_allowDataUrl) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (typeof url == "object" && url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (opt_allowDataUrl && /^data:/i.test(url)) {
    var safeUrl = goog.html.SafeUrl.fromDataUrl(url);
    if (safeUrl.getTypedStringValue() == url) {
      return safeUrl;
    }
  }
  if (!goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(url), "%s does not match the safe URL pattern", url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  return new goog.html.SafeUrl(goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_, url);
};
goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.html.SafeUrl");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.require("goog.string.internal");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.asserts.assert(goog.string.internal.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.internal.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "' of type " + goog.typeOf(safeStyle));
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(style) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyValue;
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw new Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (goog.isArray(value)) {
      value = goog.array.map(value, goog.html.SafeStyle.sanitizePropertyValue_).join(" ");
    } else {
      value = goog.html.SafeStyle.sanitizePropertyValue_(value);
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.sanitizePropertyValue_ = function(value) {
  if (value instanceof goog.html.SafeUrl) {
    var url = goog.html.SafeUrl.unwrap(value);
    return 'url("' + url.replace(/</g, "%3c").replace(/[\\"]/g, "\\$\x26") + '")';
  }
  var result = value instanceof goog.string.Const ? goog.string.Const.unwrap(value) : goog.html.SafeStyle.sanitizePropertyValueString_(String(value));
  if (/[{;}]/.test(result)) {
    throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.", [result]);
  }
  return result;
};
goog.html.SafeStyle.sanitizePropertyValueString_ = function(value) {
  var valueWithoutFunctions = value.replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.URL_RE_, "url");
  if (!goog.html.SafeStyle.VALUE_RE_.test(valueWithoutFunctions)) {
    goog.asserts.fail("String value allows only " + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + " and simple functions, got: " + value);
    return goog.html.SafeStyle.INNOCUOUS_STRING;
  } else {
    if (goog.html.SafeStyle.COMMENT_RE_.test(value)) {
      goog.asserts.fail("String value disallows comments, got: " + value);
      return goog.html.SafeStyle.INNOCUOUS_STRING;
    } else {
      if (!goog.html.SafeStyle.hasBalancedQuotes_(value)) {
        goog.asserts.fail("String value requires balanced quotes, got: " + value);
        return goog.html.SafeStyle.INNOCUOUS_STRING;
      } else {
        if (!goog.html.SafeStyle.hasBalancedSquareBrackets_(value)) {
          goog.asserts.fail("String value requires balanced square brackets and one" + " identifier per pair of brackets, got: " + value);
          return goog.html.SafeStyle.INNOCUOUS_STRING;
        }
      }
    }
  }
  return goog.html.SafeStyle.sanitizeUrl_(value);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(value) {
  var outsideSingle = true;
  var outsideDouble = true;
  for (var i = 0; i < value.length; i++) {
    var c = value.charAt(i);
    if (c == "'" && outsideDouble) {
      outsideSingle = !outsideSingle;
    } else {
      if (c == '"' && outsideSingle) {
        outsideDouble = !outsideDouble;
      }
    }
  }
  return outsideSingle && outsideDouble;
};
goog.html.SafeStyle.hasBalancedSquareBrackets_ = function(value) {
  var outside = true;
  var tokenRe = /^[-_a-zA-Z0-9]$/;
  for (var i = 0; i < value.length; i++) {
    var c = value.charAt(i);
    if (c == "]") {
      if (outside) {
        return false;
      }
      outside = true;
    } else {
      if (c == "[") {
        if (!outside) {
          return false;
        }
        outside = false;
      } else {
        if (!outside && !tokenRe.test(c)) {
          return false;
        }
      }
    }
  }
  return outside;
};
goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ = "[-,.\"'%_!# a-zA-Z0-9\\[\\]]";
goog.html.SafeStyle.VALUE_RE_ = new RegExp("^" + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + "+$");
goog.html.SafeStyle.URL_RE_ = new RegExp("\\b(url\\([ \t\n]*)(" + "'[ -\x26(-\\[\\]-~]*'" + '|"[ !#-\\[\\]-~]*"' + "|[!#-\x26*-\\[\\]-~]*" + ")([ \t\n]*\\))", "g");
goog.html.SafeStyle.ALLOWED_FUNCTIONS_ = ["calc", "cubic-bezier", "fit-content", "hsl", "hsla", "matrix", "minmax", "repeat", "rgb", "rgba", "(rotate|scale|translate)(X|Y|Z|3d)?"];
goog.html.SafeStyle.FUNCTIONS_RE_ = new RegExp("\\b(" + goog.html.SafeStyle.ALLOWED_FUNCTIONS_.join("|") + ")" + "\\([-+*/0-9a-z.%\\[\\], ]+\\)", "g");
goog.html.SafeStyle.COMMENT_RE_ = /\/\*/;
goog.html.SafeStyle.sanitizeUrl_ = function(value) {
  return value.replace(goog.html.SafeStyle.URL_RE_, function(match, before, url, after) {
    var quote = "";
    url = url.replace(/^(['"])(.*)\1$/, function(match, start, inside) {
      quote = start;
      return inside;
    });
    var sanitized = goog.html.SafeUrl.sanitize(url).getTypedStringValue();
    return before + quote + sanitized + quote + after;
  });
};
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.html.SafeStyleSheet");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.html.SafeStyle");
goog.require("goog.object");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.require("goog.string.internal");
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.createRule = function(selector, style) {
  if (goog.string.internal.contains(selector, "\x3c")) {
    throw new Error("Selector does not allow '\x3c', got: " + selector);
  }
  var selectorToCheck = selector.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");
  if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(selectorToCheck)) {
    throw new Error("Selector allows only [-_a-zA-Z0-9#.:* ,\x3e+~[\\]()\x3d^$|] and " + "strings, got: " + selector);
  }
  if (!goog.html.SafeStyleSheet.hasBalancedBrackets_(selectorToCheck)) {
    throw new Error("() and [] in selector must be balanced, got: " + selector);
  }
  if (!(style instanceof goog.html.SafeStyle)) {
    style = goog.html.SafeStyle.create(style);
  }
  var styleSheet = selector + "{" + goog.html.SafeStyle.unwrap(style).replace(/</g, "\\3C ") + "}";
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.SafeStyleSheet.hasBalancedBrackets_ = function(s) {
  var brackets = {"(":")", "[":"]"};
  var expectedBrackets = [];
  for (var i = 0; i < s.length; i++) {
    var ch = s[i];
    if (brackets[ch]) {
      expectedBrackets.push(brackets[ch]);
    } else {
      if (goog.object.contains(brackets, ch)) {
        if (expectedBrackets.pop() != ch) {
          return false;
        }
      }
    }
  }
  return expectedBrackets.length == 0;
};
goog.html.SafeStyleSheet.concat = function(var_args) {
  var result = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      result += goog.html.SafeStyleSheet.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.SafeStyleSheet.fromConstant = function(styleSheet) {
  var styleSheetString = goog.string.Const.unwrap(styleSheet);
  if (styleSheetString.length === 0) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.internal.contains(styleSheetString, "\x3c"), "Forbidden '\x3c' character in style sheet string: " + styleSheetString);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyleSheet.prototype.toString = function() {
    return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
  };
}
goog.html.SafeStyleSheet.unwrap = function(safeStyleSheet) {
  if (safeStyleSheet instanceof goog.html.SafeStyleSheet && safeStyleSheet.constructor === goog.html.SafeStyleSheet && safeStyleSheet.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "' of type " + goog.typeOf(safeStyleSheet));
    return "type_error:SafeStyleSheet";
  }
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(styleSheet) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = styleSheet;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.TagName");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.html.trustedtypes");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.object");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.require("goog.string.internal");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.ENABLE_ERROR_MESSAGES = goog.define("goog.html.SafeHtml.ENABLE_ERROR_MESSAGES", goog.DEBUG);
goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE = goog.define("goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE", true);
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  return goog.html.SafeHtml.unwrapTrustedHTML(safeHtml).toString();
};
goog.html.SafeHtml.unwrapTrustedHTML = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "' of type " + goog.typeOf(safeHtml));
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var textIsObject = typeof textOrHtml == "object";
  var dir = null;
  if (textIsObject && textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textIsObject && textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH, goog.dom.TagName.META, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);
goog.html.SafeHtml.AttributeValue;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  goog.html.SafeHtml.verifyTagName(String(tagName));
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(tagName), opt_attributes, opt_content);
};
goog.html.SafeHtml.verifyTagName = function(tagName) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "Invalid tag name \x3c" + tagName + "\x3e." : "");
  }
  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml." : "");
  }
};
goog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (opt_src) {
    goog.html.TrustedResourceUrl.unwrap(opt_src);
  }
  var fixedAttributes = {};
  fixedAttributes["src"] = opt_src || null;
  fixedAttributes["srcdoc"] = opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);
  var defaultAttributes = {"sandbox":""};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.createSandboxIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.canUseSandboxIframe()) {
    throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "The browser does not support sandboxed iframes." : "");
  }
  var fixedAttributes = {};
  if (opt_src) {
    fixedAttributes["src"] = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src));
  } else {
    fixedAttributes["src"] = null;
  }
  fixedAttributes["srcdoc"] = opt_srcdoc || null;
  fixedAttributes["sandbox"] = "";
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.canUseSandboxIframe = function() {
  return goog.global["HTMLIFrameElement"] && "sandbox" in goog.global["HTMLIFrameElement"].prototype;
};
goog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {
  goog.html.TrustedResourceUrl.unwrap(src);
  var fixedAttributes = {"src":src};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", attributes);
};
goog.html.SafeHtml.createScript = function(script, opt_attributes) {
  for (var attr in opt_attributes) {
    var attrLower = attr.toLowerCase();
    if (attrLower == "language" || attrLower == "src" || attrLower == "text" || attrLower == "type") {
      throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot set "' + attrLower + '" attribute' : "");
    }
  }
  var content = "";
  script = goog.array.concat(script);
  for (var i = 0; i < script.length; i++) {
    content += goog.html.SafeScript.unwrap(script[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", opt_attributes, htmlContent);
};
goog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {
  var fixedAttributes = {"type":"text/css"};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  var content = "";
  styleSheet = goog.array.concat(styleSheet);
  for (var i = 0; i < styleSheet.length; i++) {
    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", attributes, htmlContent);
};
goog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {
  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));
  if (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) {
    if (goog.string.internal.contains(unwrappedUrl, ";")) {
      unwrappedUrl = "'" + unwrappedUrl.replace(/'/g, "%27") + "'";
    }
  }
  var attributes = {"http-equiv":"refresh", "content":(opt_secs || 0) + "; url\x3d" + unwrappedUrl};
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", attributes);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {
  if (value instanceof goog.string.Const) {
    value = goog.string.Const.unwrap(value);
  } else {
    if (name.toLowerCase() == "style") {
      if (goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {
        value = goog.html.SafeHtml.getStyleValue_(value);
      } else {
        throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "style" not supported.' : "");
      }
    } else {
      if (/^on/i.test(name)) {
        throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.' : "");
      } else {
        if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
          if (value instanceof goog.html.TrustedResourceUrl) {
            value = goog.html.TrustedResourceUrl.unwrap(value);
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (typeof value === "string") {
                value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
              } else {
                throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + name + '" on tag "' + tagName + '" requires goog.html.SafeUrl, goog.string.Const, or' + ' string, value "' + value + '" given.' : "");
              }
            }
          }
        }
      }
    }
  }
  if (value.implementsGoogStringTypedString) {
    value = value.getTypedStringValue();
  }
  goog.asserts.assert(typeof value === "string" || typeof value === "number", "String or number value expected, got " + typeof value + " with value: " + value);
  return name + '\x3d"' + goog.string.internal.htmlEscape(String(value)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value : "");
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.join = function(separator, parts) {
  var separatorHtml = goog.html.SafeHtml.htmlEscape(separator);
  var dir = separatorHtml.getDirection();
  var content = [];
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content.push(goog.html.SafeHtml.unwrap(html));
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(parts, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content.join(goog.html.SafeHtml.unwrap(separatorHtml)), dir);
};
goog.html.SafeHtml.concat = function(var_args) {
  return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY, Array.prototype.slice.call(arguments));
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html, dir);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(html, dir) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(html) : html;
  this.dir_ = dir;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {
  var dir = null;
  var result = "\x3c" + tagName;
  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);
  var content = opt_content;
  if (content == null) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {
  var result = "";
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Invalid attribute name "' + name + '".' : "");
      }
      var value = opt_attributes[name];
      if (value == null) {
        continue;
      }
      result += " " + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);
    }
  }
  return result;
};
goog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {
  var combinedAttributes = {};
  var name;
  for (name in fixedAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = fixedAttributes[name];
  }
  for (name in defaultAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = defaultAttributes[name];
  }
  if (opt_attributes) {
    for (name in opt_attributes) {
      var nameLower = name.toLowerCase();
      if (nameLower in fixedAttributes) {
        throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot override "' + nameLower + '" attribute, got "' + name + '" with value "' + opt_attributes[name] + '"' : "");
      }
      if (nameLower in defaultAttributes) {
        delete combinedAttributes[nameLower];
      }
      combinedAttributes[name] = opt_attributes[name];
    }
  }
  return combinedAttributes;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.BR = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3cbr\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.html.uncheckedconversions");
goog.require("goog.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string.Const");
goog.require("goog.string.internal");
goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(justification, html, opt_dir) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, opt_dir || null);
};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(justification, script) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);
};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(justification, style) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(justification, styleSheet) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.provide("goog.dom.safe");
goog.provide("goog.dom.safe.InsertAdjacentHtmlPosition");
goog.require("goog.asserts");
goog.require("goog.dom.asserts");
goog.require("goog.functions");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.html.uncheckedconversions");
goog.require("goog.string.Const");
goog.require("goog.string.internal");
goog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:"afterbegin", AFTEREND:"afterend", BEFOREBEGIN:"beforebegin", BEFOREEND:"beforeend"};
goog.dom.safe.insertAdjacentHtml = function(node, position, html) {
  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrapTrustedHTML(html));
};
goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = {"MATH":true, "SCRIPT":true, "STYLE":true, "SVG":true, "TEMPLATE":true};
goog.dom.safe.isInnerHtmlCleanupRecursive_ = goog.functions.cacheReturnValue(function() {
  if (goog.DEBUG && typeof document === "undefined") {
    return false;
  }
  var div = document.createElement("div");
  var childDiv = document.createElement("div");
  childDiv.appendChild(document.createElement("div"));
  div.appendChild(childDiv);
  if (goog.DEBUG && !div.firstChild) {
    return false;
  }
  var innerChild = div.firstChild.firstChild;
  div.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY);
  return !innerChild.parentElement;
});
goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse = function(elem, html) {
  if (goog.dom.safe.isInnerHtmlCleanupRecursive_()) {
    while (elem.lastChild) {
      elem.removeChild(elem.lastChild);
    }
  }
  elem.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(html);
};
goog.dom.safe.setInnerHtml = function(elem, html) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var tagName = elem.tagName.toUpperCase();
    if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[tagName]) {
      throw new Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + elem.tagName + ".");
    }
  }
  goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(elem, html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrapTrustedHTML(html);
};
goog.dom.safe.setFormElementAction = function(form, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  goog.dom.asserts.assertIsHTMLFormElement(form).action = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setButtonFormAction = function(button, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  goog.dom.asserts.assertIsHTMLButtonElement(button).formAction = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setInputFormAction = function(input, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  goog.dom.asserts.assertIsHTMLInputElement(input).formAction = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setStyle = function(elem, style) {
  elem.style.cssText = goog.html.SafeStyle.unwrap(style);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrapTrustedHTML(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  goog.dom.asserts.assertIsHTMLAnchorElement(anchor);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setImageSrc = function(imageElement, url) {
  goog.dom.asserts.assertIsHTMLImageElement(imageElement);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    var allowDataUrl = /^data:image\//i.test(url);
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);
  }
  imageElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setAudioSrc = function(audioElement, url) {
  goog.dom.asserts.assertIsHTMLAudioElement(audioElement);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    var allowDataUrl = /^data:audio\//i.test(url);
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);
  }
  audioElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setVideoSrc = function(videoElement, url) {
  goog.dom.asserts.assertIsHTMLVideoElement(videoElement);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    var allowDataUrl = /^data:video\//i.test(url);
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);
  }
  videoElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setEmbedSrc = function(embed, url) {
  goog.dom.asserts.assertIsHTMLEmbedElement(embed);
  embed.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);
};
goog.dom.safe.setFrameSrc = function(frame, url) {
  goog.dom.asserts.assertIsHTMLFrameElement(frame);
  frame.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrc = function(iframe, url) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrcdoc = function(iframe, html) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.srcdoc = goog.html.SafeHtml.unwrapTrustedHTML(html);
};
goog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {
  goog.dom.asserts.assertIsHTMLLinkElement(link);
  link.rel = rel;
  if (goog.string.internal.caseInsensitiveContains(rel, "stylesheet")) {
    goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"');
    link.href = goog.html.TrustedResourceUrl.unwrap(url);
  } else {
    if (url instanceof goog.html.TrustedResourceUrl) {
      link.href = goog.html.TrustedResourceUrl.unwrap(url);
    } else {
      if (url instanceof goog.html.SafeUrl) {
        link.href = goog.html.SafeUrl.unwrap(url);
      } else {
        link.href = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(url));
      }
    }
  }
};
goog.dom.safe.setObjectData = function(object, url) {
  goog.dom.asserts.assertIsHTMLObjectElement(object);
  object.data = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);
};
goog.dom.safe.setScriptSrc = function(script, url) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);
  var nonce = goog.getScriptNonce();
  if (nonce) {
    script.setAttribute("nonce", nonce);
  }
};
goog.dom.safe.setScriptContent = function(script, content) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.text = goog.html.SafeScript.unwrapTrustedScript(content);
  var nonce = goog.getScriptNonce();
  if (nonce) {
    script.setAttribute("nonce", nonce);
  }
};
goog.dom.safe.setLocationHref = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.assignLocation = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  loc.assign(goog.html.SafeUrl.unwrap(safeUrl));
};
goog.dom.safe.replaceLocation = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  loc.replace(goog.html.SafeUrl.unwrap(safeUrl));
};
goog.dom.safe.openInWindow = function(url, opt_openerWin, opt_name, opt_specs, opt_replace) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  var win = opt_openerWin || goog.global;
  return win.open(goog.html.SafeUrl.unwrap(safeUrl), opt_name ? goog.string.Const.unwrap(opt_name) : "", opt_specs, opt_replace);
};
goog.dom.safe.parseFromStringHtml = function(parser, html) {
  return goog.dom.safe.parseFromString(parser, html, "text/html");
};
goog.dom.safe.parseFromString = function(parser, content, type) {
  return parser.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(content), type);
};
goog.dom.safe.createImageFromBlob = function(blob) {
  if (!/^image\/.*/g.test(blob.type)) {
    throw new Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");
  }
  var objectUrl = goog.global.URL.createObjectURL(blob);
  var image = new goog.global.Image;
  image.onload = function() {
    goog.global.URL.revokeObjectURL(objectUrl);
  };
  goog.dom.safe.setImageSrc(image, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."), objectUrl));
  return image;
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.require("goog.dom.safe");
goog.require("goog.html.uncheckedconversions");
goog.require("goog.string.Const");
goog.require("goog.string.internal");
goog.string.DETECT_DOUBLE_ESCAPING = goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.FORCE_NON_DOM_HTML_UNESCAPING = goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = goog.string.internal.startsWith;
goog.string.endsWith = goog.string.internal.endsWith;
goog.string.caseInsensitiveStartsWith = goog.string.internal.caseInsensitiveStartsWith;
goog.string.caseInsensitiveEndsWith = goog.string.internal.caseInsensitiveEndsWith;
goog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.string.internal.trim;
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = goog.string.internal.caseInsensitiveCompare;
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0; i < count; i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = goog.string.internal.newLineToBr;
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  str = goog.string.internal.htmlEscape(str, opt_isLikelyToContainHtmlChars);
  if (goog.string.DETECT_DOUBLE_ESCAPING) {
    str = str.replace(goog.string.E_RE_, "\x26#101;");
  }
  return str;
};
goog.string.E_RE_ = /e/g;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      goog.dom.safe.setInnerHtml(div, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."), s + " "));
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0; i < length; i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\\u003C"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0; i < s.length; i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0; i < str.length; i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = goog.string.internal.contains;
goog.string.caseInsensitiveContains = goog.string.internal.caseInsensitiveContains;
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(str, substr) {
  return str.replace(substr, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.replaceAll = function(s, ss, replacement) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, replacement.replace(/\$/g, "$$$$"));
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = opt_precision !== undefined ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = goog.string.internal.compareVersions;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0; i < str.length; ++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = typeof opt_delimiters === "string" ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (typeof value === "string") {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (!separators) {
    return str;
  } else {
    if (typeof separators == "string") {
      separators = [separators];
    }
  }
  var lastSeparatorIndex = -1;
  for (var i = 0; i < separators.length; i++) {
    if (separators[i] == "") {
      continue;
    }
    var currentSeparatorIndex = str.lastIndexOf(separators[i]);
    if (currentSeparatorIndex > lastSeparatorIndex) {
      lastSeparatorIndex = currentSeparatorIndex;
    }
  }
  if (lastSeparatorIndex == -1) {
    return str;
  }
  return str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0; i < b.length + 1; i++) {
    v0[i] = i;
  }
  for (var i = 0; i < a.length; i++) {
    v1[0] = i + 1;
    for (var j = 0; j < b.length; j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0; j < v0.length; j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0; i < tuples.length; i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.isChromecast = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrKey");
};
goog.labs.userAgent.platform.isKaiOS = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("KaiOS");
};
goog.labs.userAgent.platform.isGo2Phone = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("GAFP");
};
goog.labs.userAgent.platform.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  var version = "", re;
  if (goog.labs.userAgent.platform.isWindows()) {
    re = /Windows (?:NT|Phone) ([0-9.]+)/;
    var match = re.exec(userAgentString);
    if (match) {
      version = match[1];
    } else {
      version = "0.0";
    }
  } else {
    if (goog.labs.userAgent.platform.isIos()) {
      re = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/;
      var match = re.exec(userAgentString);
      version = match && match[1].replace(/_/g, ".");
    } else {
      if (goog.labs.userAgent.platform.isMacintosh()) {
        re = /Mac OS X ([0-9_.]+)/;
        var match = re.exec(userAgentString);
        version = match ? match[1].replace(/_/g, ".") : "10";
      } else {
        if (goog.labs.userAgent.platform.isKaiOS()) {
          re = /(?:KaiOS)\/(\S+)/i;
          var match = re.exec(userAgentString);
          version = match && match[1];
        } else {
          if (goog.labs.userAgent.platform.isAndroid()) {
            re = /Android\s+([^\);]+)(\)|;)/;
            var match = re.exec(userAgentString);
            version = match && match[1];
          } else {
            if (goog.labs.userAgent.platform.isChromeOS()) {
              re = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/;
              var match = re.exec(userAgentString);
              version = match && match[1];
            }
          }
        }
      }
    }
  }
  return version || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), version) >= 0;
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop, object) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  const storedKey = opt_keyFn ? opt_keyFn(key) : key;
  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {
    return cacheObj[storedKey];
  }
  return cacheObj[storedKey] = valueFn(key);
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.reflect");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = goog.define("goog.userAgent.ASSUME_IE", false);
goog.userAgent.ASSUME_EDGE = goog.define("goog.userAgent.ASSUME_EDGE", false);
goog.userAgent.ASSUME_GECKO = goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.userAgent.ASSUME_WEBKIT = goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.userAgent.ASSUME_MOBILE_WEBKIT = goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.userAgent.ASSUME_OPERA = goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.userAgent.ASSUME_ANY_VERSION = goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigatorTyped = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.getNavigator = function() {
  return goog.userAgent.getNavigatorTyped();
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigatorTyped();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = goog.define("goog.userAgent.ASSUME_MAC", false);
goog.userAgent.ASSUME_WINDOWS = goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.userAgent.ASSUME_LINUX = goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.userAgent.ASSUME_X11 = goog.define("goog.userAgent.ASSUME_X11", false);
goog.userAgent.ASSUME_ANDROID = goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.userAgent.ASSUME_IPHONE = goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.userAgent.ASSUME_IPAD = goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.ASSUME_IPOD = goog.define("goog.userAgent.ASSUME_IPOD", false);
goog.userAgent.ASSUME_KAIOS = goog.define("goog.userAgent.ASSUME_KAIOS", false);
goog.userAgent.ASSUME_GO2PHONE = goog.define("goog.userAgent.ASSUME_GO2PHONE", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var navigator = goog.userAgent.getNavigatorTyped();
  return !!navigator && goog.string.contains(navigator["appVersion"] || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod();
goog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIos();
goog.userAgent.KAIOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_KAIOS : goog.labs.userAgent.platform.isKaiOS();
goog.userAgent.GO2PHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_GO2PHONE : goog.labs.userAgent.platform.isGo2Phone();
goog.userAgent.determineVersion_ = function() {
  var version = "";
  var arr = goog.userAgent.getVersionRegexResult_();
  if (arr) {
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode != null && docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var userAgent = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv:([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(userAgent);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(userAgent);
  }
  if (goog.userAgent.OPERA) {
    return /(?:Version)[ \/]?(\S+)/.exec(userAgent);
  }
  return undefined;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, version, function() {
    return goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0;
  });
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return Number(goog.userAgent.DOCUMENT_MODE) >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  return goog.userAgent.getDocumentMode_();
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature.ASSUME_NO_OFFSCREEN_CANVAS = goog.define("goog.dom.ASSUME_NO_OFFSCREEN_CANVAS", false);
goog.dom.BrowserFeature.ASSUME_OFFSCREEN_CANVAS = goog.define("goog.dom.ASSUME_OFFSCREEN_CANVAS", false);
goog.dom.BrowserFeature.detectOffscreenCanvas_ = function(contextName) {
  try {
    return Boolean((new self.OffscreenCanvas(0, 0)).getContext(contextName));
  } catch (ex) {
  }
  return false;
};
goog.dom.BrowserFeature.OFFSCREEN_CANVAS_2D = !goog.dom.BrowserFeature.ASSUME_NO_OFFSCREEN_CANVAS && (goog.dom.BrowserFeature.ASSUME_OFFSCREEN_CANVAS || goog.dom.BrowserFeature.detectOffscreenCanvas_("2d"));
goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES = !goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9);
goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE = !goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1");
goog.dom.BrowserFeature.CAN_USE_INNER_TEXT = goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9");
goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY = goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT;
goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT = goog.userAgent.IE;
goog.dom.BrowserFeature.LEGACY_IE_RANGES = goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9);
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 0.000001);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0; i < length1 + 1; i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0; j < length2 + 1; j++) {
    arr[0][j] = 0;
  }
  for (i = 1; i <= length1; i++) {
    for (j = 1; j <= length2; j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0);
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(opt_epsilon === undefined || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2e-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(opt_epsilon === undefined || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2e-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = opt_x !== undefined ? opt_x : 0;
  this.y = opt_y !== undefined ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.prototype.equals = function(other) {
  return other instanceof goog.math.Coordinate && goog.math.Coordinate.equals(this, other);
};
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += Number(tx);
    if (typeof opt_ty === "number") {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = typeof opt_sy === "number" ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return (this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return !this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  const sy = typeof opt_sy === "number" ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToCover = function(target) {
  const s = this.aspectRatio() <= target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.math.Size.prototype.scaleToFit = function(target) {
  const s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.uncheckedconversions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Unicode");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.dom.ASSUME_STANDARDS_MODE = goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return typeof element === "string" ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagName = function(tagName, opt_parent) {
  var parent = opt_parent || document;
  return parent.getElementsByTagName(String(tagName));
};
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (parent.getElementsByClassName) {
    retVal = parent.getElementsByClassName(className)[0];
  } else {
    retVal = goog.dom.getElementByTagNameAndClass_(document, "*", className, opt_el);
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return !!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? String(opt_tag).toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el; el = els[i]; i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el; el = els[i]; i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.getElementByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tag = opt_tag && opt_tag != "*" ? String(opt_tag).toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tag || opt_class)) {
    return parent.querySelector(tag + (opt_class ? "." + opt_class : ""));
  }
  var elements = goog.dom.getElementsByTagNameAndClass_(doc, opt_tag, opt_class, opt_el);
  return elements[0] || null;
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (val && typeof val == "object" && val.implementsGoogStringTypedString) {
      val = val.getTypedStringValue();
    }
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key)) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "nonce":"nonce", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeightForWindow = function(win) {
  return goog.dom.getDocumentHeight_(win);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!(docEl && body)) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (doc.scrollingElement) {
    return doc.scrollingElement;
  }
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = String(args[0]);
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = goog.dom.createElement_(doc, tagName);
  if (attributes) {
    if (typeof attributes === "string") {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(typeof child === "string" ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex; i < args.length; i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return goog.dom.createElement_(document, name);
};
goog.dom.createElement_ = function(doc, name) {
  name = String(name);
  if (doc.contentType === "application/xhtml+xml") {
    name = name.toLowerCase();
  }
  return doc.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var table = goog.dom.createElement_(doc, goog.dom.TagName.TABLE);
  var tbody = table.appendChild(goog.dom.createElement_(doc, goog.dom.TagName.TBODY));
  for (var i = 0; i < rows; i++) {
    var tr = goog.dom.createElement_(doc, goog.dom.TagName.TR);
    for (var j = 0; j < columns; j++) {
      var td = goog.dom.createElement_(doc, goog.dom.TagName.TD);
      if (fillWithNbsp) {
        goog.dom.setTextContent(td, goog.string.Unicode.NBSP);
      }
      tr.appendChild(td);
    }
    tbody.appendChild(tr);
  }
  return table;
};
goog.dom.constHtmlToNode = function(var_args) {
  var stringArray = goog.array.map(arguments, goog.string.Const.unwrap);
  var safeHtml = goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML string, that gets turned into a " + "Node later, so it will be automatically balanced."), stringArray.join(""));
  return goog.dom.safeHtmlToNode(safeHtml);
};
goog.dom.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(document, html);
};
goog.dom.safeHtmlToNode_ = function(doc, html) {
  var tempDiv = goog.dom.createElement_(doc, goog.dom.TagName.DIV);
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    goog.dom.safe.setInnerHtml(tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.BR, html));
    tempDiv.removeChild(goog.asserts.assert(tempDiv.firstChild));
  } else {
    goog.dom.safe.setInnerHtml(tempDiv, html);
  }
  return goog.dom.childrenToNode_(doc, tempDiv);
};
goog.dom.childrenToNode_ = function(doc, tempDiv) {
  if (tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(goog.asserts.assert(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case String(goog.dom.TagName.APPLET):
    case String(goog.dom.TagName.AREA):
    case String(goog.dom.TagName.BASE):
    case String(goog.dom.TagName.BR):
    case String(goog.dom.TagName.COL):
    case String(goog.dom.TagName.COMMAND):
    case String(goog.dom.TagName.EMBED):
    case String(goog.dom.TagName.FRAME):
    case String(goog.dom.TagName.HR):
    case String(goog.dom.TagName.IMG):
    case String(goog.dom.TagName.INPUT):
    case String(goog.dom.TagName.IFRAME):
    case String(goog.dom.TagName.ISINDEX):
    case String(goog.dom.TagName.KEYGEN):
    case String(goog.dom.TagName.LINK):
    case String(goog.dom.TagName.NOFRAMES):
    case String(goog.dom.TagName.NOSCRIPT):
    case String(goog.dom.TagName.META):
    case String(goog.dom.TagName.OBJECT):
    case String(goog.dom.TagName.PARAM):
    case String(goog.dom.TagName.SCRIPT):
    case String(goog.dom.TagName.SOURCE):
    case String(goog.dom.TagName.STYLE):
    case String(goog.dom.TagName.TRACK):
    case String(goog.dom.TagName.WBR):
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  goog.asserts.assert(parent != null && child != null, "goog.dom.appendChild expects non-null arguments");
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  goog.asserts.assert(newNode != null && refNode != null, "goog.dom.insertSiblingBefore expects non-null arguments");
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  goog.asserts.assert(newNode != null && refNode != null, "goog.dom.insertSiblingAfter expects non-null arguments");
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  goog.asserts.assert(parent != null, "goog.dom.insertChildAt expects a non-null parent");
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  goog.asserts.assert(newNode != null && oldNode != null, "goog.dom.replaceNode expects non-null arguments");
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return element.removeNode(false);
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return goog.dom.removeNode(element);
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild !== undefined) {
    return node.firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild !== undefined) {
    return node.lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling !== undefined) {
    return node.nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling !== undefined) {
    return node.previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return node;
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? parent : null;
};
goog.dom.contains = function(parent, descendant) {
  if (!parent || !descendant) {
    return false;
  }
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return -1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return (isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return -1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return -1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0; i < count; i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0; i < minLength; i++) {
    var first = paths[0][i];
    for (var j = 1; j < count; j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.isInDocument = function(node) {
  return (node.ownerDocument.compareDocumentPosition(node) & 16) == 16;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document;
};
goog.dom.getFrameContentDocument = function(frame) {
  return frame.contentDocument || frame.contentWindow.document;
};
goog.dom.getFrameContentWindow = function(frame) {
  try {
    return frame.contentWindow || (frame.contentDocument ? goog.dom.getWindow(frame.contentDocument) : null);
  } catch (e) {
  }
  return null;
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = String(text);
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(goog.asserts.assert(node.lastChild));
        }
        node.firstChild.data = String(text);
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  goog.asserts.assert(element !== null, "goog.dom.getOuterHtml expects a non-null value for element");
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = goog.dom.createElement_(doc, goog.dom.TagName.DIV);
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.findElement = function(root, pred) {
  var stack = goog.dom.getChildrenReverse_(root);
  while (stack.length > 0) {
    var next = stack.pop();
    if (pred(next)) {
      return next;
    }
    for (var c = next.lastElementChild; c; c = c.previousElementSibling) {
      stack.push(c);
    }
  }
  return null;
};
goog.dom.findElements = function(root, pred) {
  var result = [], stack = goog.dom.getChildrenReverse_(root);
  while (stack.length > 0) {
    var next = stack.pop();
    if (pred(next)) {
      result.push(next);
    }
    for (var c = next.lastElementChild; c; c = c.previousElementSibling) {
      stack.push(c);
    }
  }
  return result;
};
goog.dom.getChildrenReverse_ = function(node) {
  if (node.nodeType == goog.dom.NodeType.DOCUMENT) {
    return [node.documentElement];
  } else {
    var children = [];
    for (var c = node.lastElementChild; c; c = c.previousElementSibling) {
      children.push(c);
    }
    return children;
  }
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9")) {
    var attrNode = element.getAttributeNode("tabindex");
    return attrNode != null && attrNode.specified;
  } else {
    return element.hasAttribute("tabindex");
  }
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return typeof index === "number" && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A && element.hasAttribute("href") || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect;
  if (!goog.isFunction(element["getBoundingClientRect"]) || goog.userAgent.IE && element.parentElement == null) {
    rect = {"height":element.offsetHeight, "width":element.offsetWidth};
  } else {
    rect = element.getBoundingClientRect();
  }
  return rect != null && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && node !== null && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1; i >= 0; i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class, opt_maxSearchSteps) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? String(opt_tag).toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return (!tagName || node.nodeName == tagName) && (!opt_class || typeof node.className === "string" && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true, opt_maxSearchSteps);
};
goog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className, opt_maxSearchSteps);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (element && !opt_includeNode) {
    element = element.parentNode;
  }
  var steps = 0;
  while (element && (opt_maxSearchSteps == null || steps <= opt_maxSearchSteps)) {
    goog.asserts.assert(element.name != "parentNode");
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    var activeElement = doc && doc.activeElement;
    return activeElement && activeElement.nodeName ? activeElement : null;
  } catch (e) {
    return null;
  }
};
goog.dom.getPixelRatio = function() {
  var win = goog.dom.getWindow();
  if (win.devicePixelRatio !== undefined) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(3) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(1) || .75;
    }
  }
  return 1;
};
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var dpiPerDppx = 96;
  var query = "(min-resolution: " + pixelRatio + "dppx)," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio * dpiPerDppx + "dpi)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.getCanvasContext2D = function(canvas) {
  return canvas.getContext("2d");
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagName = function(tagName, opt_parent) {
  var parent = opt_parent || this.document_;
  return parent.getElementsByTagName(String(tagName));
};
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return goog.dom.createElement_(this.document_, name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(this.document_, html);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.dom.DomHelper.prototype.getCanvasContext2D = goog.dom.getCanvasContext2D;
goog.provide("goog.userAgent.product");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.userAgent");
goog.userAgent.product.ASSUME_FIREFOX = goog.define("goog.userAgent.product.ASSUME_FIREFOX", false);
goog.userAgent.product.ASSUME_IPHONE = goog.define("goog.userAgent.product.ASSUME_IPHONE", false);
goog.userAgent.product.ASSUME_IPAD = goog.define("goog.userAgent.product.ASSUME_IPAD", false);
goog.userAgent.product.ASSUME_ANDROID = goog.define("goog.userAgent.product.ASSUME_ANDROID", false);
goog.userAgent.product.ASSUME_CHROME = goog.define("goog.userAgent.product.ASSUME_CHROME", false);
goog.userAgent.product.ASSUME_SAFARI = goog.define("goog.userAgent.product.ASSUME_SAFARI", false);
goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
goog.userAgent.product.OPERA = goog.userAgent.OPERA;
goog.userAgent.product.IE = goog.userAgent.IE;
goog.userAgent.product.EDGE = goog.userAgent.EDGE;
goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox();
goog.userAgent.product.isIphoneOrIpod_ = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();
};
goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser();
goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_ = function() {
  return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();
};
goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.json.USE_NATIVE_JSON = goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.TRY_NATIVE_JSON = goog.define("goog.json.TRY_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  const backslashesRe = /\\["\\\/bfnrtu]/g;
  const simpleValuesRe = /(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g;
  const openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  const remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.errorLogger_ = goog.nullFunction;
goog.json.setErrorLogger = function(errorLogger) {
  goog.json.errorLogger_ = errorLogger;
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["parse"] : function(s) {
  let error;
  if (goog.json.TRY_NATIVE_JSON) {
    try {
      return goog.global["JSON"]["parse"](s);
    } catch (ex) {
      error = ex;
    }
  }
  const o = String(s);
  if (goog.json.isValid(o)) {
    try {
      const result = eval("(" + o + ")");
      if (error) {
        goog.json.errorLogger_("Invalid JSON: " + o, error);
      }
      return result;
    } catch (ex) {
    }
  }
  throw new Error("Invalid JSON string: " + o);
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["stringify"] : function(object, opt_replacer) {
  return (new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  const sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  if (object == null) {
    sb.push("null");
    return;
  }
  if (typeof object == "object") {
    if (goog.isArray(object)) {
      this.serializeArray(object, sb);
      return;
    } else {
      if (object instanceof String || object instanceof Number || object instanceof Boolean) {
        object = object.valueOf();
      } else {
        this.serializeObject_(object, sb);
        return;
      }
    }
  }
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(String(object));
      break;
    case "function":
      sb.push("null");
      break;
    default:
      throw new Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("￿") ? /[\\"\x00-\x1f\x7f-\uffff]/g : /[\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    let rv = goog.json.Serializer.charToJsonCharCache_[c];
    if (!rv) {
      rv = "\\u" + (c.charCodeAt(0) | 65536).toString(16).substr(1);
      goog.json.Serializer.charToJsonCharCache_[c] = rv;
    }
    return rv;
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? String(n) : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  const l = arr.length;
  sb.push("[");
  let sep = "";
  for (let i = 0; i < l; i++) {
    sb.push(sep);
    const value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  let sep = "";
  for (const key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      const value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (col.getCount && typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (col.getValues && typeof col.getValues == "function") {
    return col.getValues();
  }
  if (typeof col === "string") {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (col.getKeys && typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (col.getValues && typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (col.contains && typeof col.contains == "function") {
    return col.contains(val);
  }
  if (col.containsValue && typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return goog.array.contains(col, val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (col.isEmpty && typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return goog.array.isEmpty(col);
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (col.clear && typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear(col);
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (col.forEach && typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || typeof col === "string") {
      goog.array.forEach(col, f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0; i < l; i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return goog.array.filter(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return goog.array.map(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return goog.array.some(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return goog.array.every(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global["StopIteration"] : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var like = iterable;
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= like.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in like)) {
          i++;
          continue;
        }
        return like[i++];
      }
    };
    return newIter;
  }
  throw new Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = +opt_stop;
  }
  if (step == 0) {
    throw new Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var val = iterator.next();
    if (f.call(opt_obj, val, undefined, iterator)) {
      return val;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable);
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2, opt_equalsFn) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  return goog.iter.every(pairs, function(pair) {
    return equalsFn(pair[0], pair[1]);
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return !arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1; i >= 0; i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = opt_step !== undefined ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return !!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = typeof opt_num === "number" ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return [];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (typeof opt_end === "number") {
    goog.asserts.assert(goog.math.isInt(opt_end) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = typeof opt_length === "number" ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return !goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw new Error("Uneven number of arguments");
    }
    for (var i = 0; i < argLength; i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll(opt_map);
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat();
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0; key = this.keys_[i]; i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  if (map instanceof goog.structs.Map) {
    var keys = map.getKeys();
    for (var i = 0; i < keys.length; i++) {
      this.set(keys[i], map.get(keys[i]));
    }
  } else {
    for (var key in map) {
      this.set(key, map[key]);
    }
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (version != selfObj.version_) {
      throw new Error("The map has changed since the iterator was created");
    }
    if (i >= selfObj.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var key = selfObj.keys_[i++];
    return opt_keys ? key : selfObj.map_[key];
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#([\\s\\S]*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_);
};
goog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {
  if (!uri) {
    return uri;
  }
  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && goog.global.self && goog.global.self.location) {
    var protocol = goog.global.self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getOrigin = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], null, pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  goog.asserts.assert(uri.indexOf("#") < 0 && uri.indexOf("?") < 0, "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", uri);
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData = function(encodedQuery, callback) {
  if (!encodedQuery) {
    return;
  }
  var pairs = encodedQuery.split("\x26");
  for (var i = 0; i < pairs.length; i++) {
    var indexOfEquals = pairs[i].indexOf("\x3d");
    var name = null;
    var value = null;
    if (indexOfEquals >= 0) {
      name = pairs[i].substring(0, indexOfEquals);
      value = pairs[i].substring(indexOfEquals + 1);
    } else {
      name = pairs[i];
    }
    callback(name, value ? goog.string.urlDecode(value) : "");
  }
};
goog.uri.utils.splitQueryData_ = function(uri) {
  var hashIndex = uri.indexOf("#");
  if (hashIndex < 0) {
    hashIndex = uri.length;
  }
  var questionIndex = uri.indexOf("?");
  var queryData;
  if (questionIndex < 0 || questionIndex > hashIndex) {
    questionIndex = hashIndex;
    queryData = "";
  } else {
    queryData = uri.substring(questionIndex + 1, hashIndex);
  }
  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];
};
goog.uri.utils.joinQueryData_ = function(parts) {
  return parts[0] + (parts[1] ? "?" + parts[1] : "") + parts[2];
};
goog.uri.utils.appendQueryData_ = function(queryData, newData) {
  if (!newData) {
    return queryData;
  }
  return queryData ? queryData + "\x26" + newData : newData;
};
goog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {
  if (!queryData) {
    return uri;
  }
  var parts = goog.uri.utils.splitQueryData_(uri);
  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  goog.asserts.assertString(key);
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0; j < value.length; j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push(key + (value === "" ? "" : "\x3d" + goog.string.urlEncode(value)));
    }
  }
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  var params = [];
  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {
    var key = keysAndValues[i];
    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);
  }
  return params.join("\x26");
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var params = [];
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);
  }
  return params.join("\x26");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  var queryData = arguments.length == 2 ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  var queryData = goog.uri.utils.buildQueryDataFromMap(map);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var value = opt_value != null ? "\x3d" + goog.string.urlEncode(opt_value) : "";
  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.setParamsFromMap = function(uri, params) {
  var parts = goog.uri.utils.splitQueryData_(uri);
  var queryData = parts[1];
  var buffer = [];
  if (queryData) {
    goog.array.forEach(queryData.split("\x26"), function(pair) {
      var indexOfEquals = pair.indexOf("\x3d");
      var name = indexOfEquals >= 0 ? pair.substr(0, indexOfEquals) : pair;
      if (!params.hasOwnProperty(name)) {
        buffer.push(pair);
      }
    });
  }
  parts[1] = goog.uri.utils.appendQueryData_(buffer.join("\x26"), goog.uri.utils.buildQueryDataFromMap(params));
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  this.scheme_ = "";
  this.userInfo_ = "";
  this.domain_ = "";
  this.port_ = null;
  this.path_ = "";
  this.fragment_ = "";
  this.isReadOnly_ = false;
  this.ignoreCase_ = false;
  this.queryData_;
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = opt_ignoreCase !== undefined ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ":");
  }
  var domain = this.getDomain();
  if (domain || scheme == "file") {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), "@");
    }
    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getQueryData().clone());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw new Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, values);
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName);
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return (!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw new Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0; pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {
  if (!val) {
    return "";
  }
  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, "%2525")) : decodeURIComponent(val);
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {
  if (typeof unescapedPart === "string") {
    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
    if (opt_removeDoubleEncoding) {
      encoded = goog.Uri.removeDoubleEncoding_(encoded);
    }
    return encoded;
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {
  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.keyMap_ = null;
  this.count_ = null;
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var self = this;
      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {
        self.add(goog.string.urlDecode(name), value);
      });
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw new Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw new Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0; i < keys.length; i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(values, key) {
    goog.array.forEach(values, function(value) {
      f.call(opt_scope, value, key, this);
    }, this);
  }, this);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0; i < keys.length; i++) {
    var val = vals[i];
    for (var j = 0; j < val.length; j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (typeof opt_key === "string") {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = this.keyMap_.getValues();
    for (var i = 0; i < values.length; i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  if (!key) {
    return opt_default;
  }
  var values = this.getValues(key);
  return values.length > 0 ? String(values[0]) : opt_default;
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0; j < val.length; j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0; i < arguments.length; i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.math.Integer");
goog.require("goog.reflect");
goog.math.Integer = function(bits, sign) {
  this.sign_ = sign;
  var localBits = [];
  var top = true;
  for (var i = bits.length - 1; i >= 0; i--) {
    var val = bits[i] | 0;
    if (!top || val != sign) {
      localBits[i] = val;
      top = false;
    }
  }
  this.bits_ = localBits;
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    return goog.reflect.cache(goog.math.Integer.IntCache_, value, function(val) {
      return new goog.math.Integer([val | 0], val < 0 ? -1 : 0);
    });
  }
  return new goog.math.Integer([value | 0], value < 0 ? -1 : 0);
};
goog.math.Integer.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Integer.ZERO;
  } else {
    if (value < 0) {
      return goog.math.Integer.fromNumber(-value).negate();
    } else {
      var bits = [];
      var pow = 1;
      for (var i = 0; value >= pow; i++) {
        bits[i] = value / pow | 0;
        pow *= goog.math.Integer.TWO_PWR_32_DBL_;
      }
      return new goog.math.Integer(bits, 0);
    }
  }
};
goog.math.Integer.fromBits = function(bits) {
  var high = bits[bits.length - 1];
  return new goog.math.Integer(bits, high & 1 << 31 ? -1 : 0);
};
goog.math.Integer.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw new Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw new Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Integer.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw new Error('number format error: interior "-" character');
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Integer.ZERO;
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Integer.fromNumber(value));
    }
  }
  return result;
};
goog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);
goog.math.Integer.prototype.toInt = function() {
  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  } else {
    var val = 0;
    var pow = 1;
    for (var i = 0; i < this.bits_.length; i++) {
      val += this.getBitsUnsigned(i) * pow;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return val;
  }
};
goog.math.Integer.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw new Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  } else {
    if (this.isNegative()) {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.divide(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Integer.prototype.getBits = function(index) {
  if (index < 0) {
    return 0;
  } else {
    if (index < this.bits_.length) {
      return this.bits_[index];
    } else {
      return this.sign_;
    }
  }
};
goog.math.Integer.prototype.getBitsUnsigned = function(index) {
  var val = this.getBits(index);
  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (this.sign_ != 0) {
    return false;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    if (this.bits_[i] != 0) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.isNegative = function() {
  return this.sign_ == -1;
};
goog.math.Integer.prototype.isOdd = function() {
  return this.bits_.length == 0 && this.sign_ == -1 || this.bits_.length > 0 && (this.bits_[0] & 1) != 0;
};
goog.math.Integer.prototype.equals = function(other) {
  if (this.sign_ != other.sign_) {
    return false;
  }
  var len = Math.max(this.bits_.length, other.bits_.length);
  for (var i = 0; i < len; i++) {
    if (this.getBits(i) != other.getBits(i)) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.notEquals = function(other) {
  return !this.equals(other);
};
goog.math.Integer.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Integer.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Integer.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Integer.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Integer.prototype.compare = function(other) {
  var diff = this.subtract(other);
  if (diff.isNegative()) {
    return -1;
  } else {
    if (diff.isZero()) {
      return 0;
    } else {
      return +1;
    }
  }
};
goog.math.Integer.prototype.shorten = function(numBits) {
  var arr_index = numBits - 1 >> 5;
  var bit_index = (numBits - 1) % 32;
  var bits = [];
  for (var i = 0; i < arr_index; i++) {
    bits[i] = this.getBits(i);
  }
  var sigBits = bit_index == 31 ? 4294967295 : (1 << bit_index + 1) - 1;
  var val = this.getBits(arr_index) & sigBits;
  if (val & 1 << bit_index) {
    val |= 4294967295 - sigBits;
    bits[arr_index] = val;
    return new goog.math.Integer(bits, -1);
  } else {
    bits[arr_index] = val;
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.abs = function() {
  return this.isNegative() ? this.negate() : this;
};
goog.math.Integer.prototype.add = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  var carry = 0;
  for (var i = 0; i <= len; i++) {
    var a1 = this.getBits(i) >>> 16;
    var a0 = this.getBits(i) & 65535;
    var b1 = other.getBits(i) >>> 16;
    var b0 = other.getBits(i) & 65535;
    var c0 = carry + a0 + b0;
    var c1 = (c0 >>> 16) + a1 + b1;
    carry = c1 >>> 16;
    c0 &= 65535;
    c1 &= 65535;
    arr[i] = c1 << 16 | c0;
  }
  return goog.math.Integer.fromBits(arr);
};
goog.math.Integer.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Integer.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && other.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());
  }
  var len = this.bits_.length + other.bits_.length;
  var arr = [];
  for (var i = 0; i < 2 * len; i++) {
    arr[i] = 0;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    for (var j = 0; j < other.bits_.length; j++) {
      var a1 = this.getBits(i) >>> 16;
      var a0 = this.getBits(i) & 65535;
      var b1 = other.getBits(j) >>> 16;
      var b0 = other.getBits(j) & 65535;
      arr[2 * i + 2 * j] += a0 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);
      arr[2 * i + 2 * j + 1] += a1 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 1] += a0 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 2] += a1 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);
    }
  }
  for (var i = 0; i < len; i++) {
    arr[i] = arr[2 * i + 1] << 16 | arr[2 * i];
  }
  for (var i = len; i < 2 * len; i++) {
    arr[i] = 0;
  }
  return new goog.math.Integer(arr, 0);
};
goog.math.Integer.carry16_ = function(bits, index) {
  while ((bits[index] & 65535) != bits[index]) {
    bits[index + 1] += bits[index] >>> 16;
    bits[index] &= 65535;
    index++;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(other) {
  if (this.isNegative() || other.isNegative()) {
    throw new Error("slowDivide_ only works with positive integers.");
  }
  var twoPower = goog.math.Integer.ONE;
  var multiple = other;
  while (multiple.lessThanOrEqual(this)) {
    twoPower = twoPower.shiftLeft(1);
    multiple = multiple.shiftLeft(1);
  }
  var res = twoPower.shiftRight(1);
  var total = multiple.shiftRight(1);
  var total2;
  multiple = multiple.shiftRight(2);
  twoPower = twoPower.shiftRight(2);
  while (!multiple.isZero()) {
    total2 = total.add(multiple);
    if (total2.lessThanOrEqual(this)) {
      res = res.add(twoPower);
      total = total2;
    }
    multiple = multiple.shiftRight(1);
    twoPower = twoPower.shiftRight(1);
  }
  var remainder = this.subtract(res.multiply(other));
  return new goog.math.Integer.DivisionResult(res, remainder);
};
goog.math.Integer.prototype.divide = function(other) {
  return this.divideAndRemainder(other).quotient;
};
goog.math.Integer.DivisionResult = function(quotient, remainder) {
  this.quotient = quotient;
  this.remainder = remainder;
};
goog.math.Integer.prototype.divideAndRemainder = function(other) {
  if (other.isZero()) {
    throw new Error("division by zero");
  } else {
    if (this.isZero()) {
      return new goog.math.Integer.DivisionResult(goog.math.Integer.ZERO, goog.math.Integer.ZERO);
    }
  }
  if (this.isNegative()) {
    var result = this.negate().divideAndRemainder(other);
    return new goog.math.Integer.DivisionResult(result.quotient.negate(), result.remainder.negate());
  } else {
    if (other.isNegative()) {
      var result = this.divideAndRemainder(other.negate());
      return new goog.math.Integer.DivisionResult(result.quotient.negate(), result.remainder);
    }
  }
  if (this.bits_.length > 30) {
    return this.slowDivide_(other);
  }
  var res = goog.math.Integer.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Integer.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Integer.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Integer.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return new goog.math.Integer.DivisionResult(res, rem);
};
goog.math.Integer.prototype.modulo = function(other) {
  return this.divideAndRemainder(other).remainder;
};
goog.math.Integer.prototype.not = function() {
  var len = this.bits_.length;
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = ~this.bits_[i];
  }
  return new goog.math.Integer(arr, ~this.sign_);
};
goog.math.Integer.prototype.and = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) & other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ & other.sign_);
};
goog.math.Integer.prototype.or = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) | other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ | other.sign_);
};
goog.math.Integer.prototype.xor = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) ^ other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i - arr_delta) << bit_delta | this.getBits(i - arr_delta - 1) >>> 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i - arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length - arr_delta;
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i + arr_delta) >>> bit_delta | this.getBits(i + arr_delta + 1) << 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i + arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += String(a1);
  if (opt_a2 != null) {
    for (let i = 1; i < arguments.length; i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.math.Long");
  goog.module.declareLegacyNamespace();
  const asserts = goog.require("goog.asserts");
  const reflect = goog.require("goog.reflect");
  class Long {
    constructor(low, high) {
      this.low_ = low | 0;
      this.high_ = high | 0;
    }
    toInt() {
      return this.low_;
    }
    toNumber() {
      return this.high_ * TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
    }
    isSafeInteger() {
      var top11Bits = this.high_ >> 21;
      return top11Bits == 0 || top11Bits == -1 && !(this.low_ == 0 && this.high_ == (4292870144 | 0));
    }
    toString(opt_radix) {
      var radix = opt_radix || 10;
      if (radix < 2 || 36 < radix) {
        throw new Error("radix out of range: " + radix);
      }
      if (this.isSafeInteger()) {
        var asNumber = this.toNumber();
        return radix == 10 ? "" + asNumber : asNumber.toString(radix);
      }
      var safeDigits = 14 - (radix >> 2);
      var radixPowSafeDigits = Math.pow(radix, safeDigits);
      var radixToPower = Long.fromBits(radixPowSafeDigits, radixPowSafeDigits / TWO_PWR_32_DBL_);
      var remDiv = this.div(radixToPower);
      var val = Math.abs(this.subtract(remDiv.multiply(radixToPower)).toNumber());
      var digits = radix == 10 ? "" + val : val.toString(radix);
      if (digits.length < safeDigits) {
        digits = "0000000000000".substr(digits.length - safeDigits) + digits;
      }
      val = remDiv.toNumber();
      return (radix == 10 ? val : val.toString(radix)) + digits;
    }
    getHighBits() {
      return this.high_;
    }
    getLowBits() {
      return this.low_;
    }
    getLowBitsUnsigned() {
      return this.low_ >>> 0;
    }
    getNumBitsAbs() {
      if (this.isNegative()) {
        if (this.equals(Long.getMinValue())) {
          return 64;
        } else {
          return this.negate().getNumBitsAbs();
        }
      } else {
        var val = this.high_ != 0 ? this.high_ : this.low_;
        for (var bit = 31; bit > 0; bit--) {
          if ((val & 1 << bit) != 0) {
            break;
          }
        }
        return this.high_ != 0 ? bit + 33 : bit + 1;
      }
    }
    isZero() {
      return this.low_ == 0 && this.high_ == 0;
    }
    isNegative() {
      return this.high_ < 0;
    }
    isOdd() {
      return (this.low_ & 1) == 1;
    }
    equals(other) {
      return this.low_ == other.low_ && this.high_ == other.high_;
    }
    notEquals(other) {
      return !this.equals(other);
    }
    lessThan(other) {
      return this.compare(other) < 0;
    }
    lessThanOrEqual(other) {
      return this.compare(other) <= 0;
    }
    greaterThan(other) {
      return this.compare(other) > 0;
    }
    greaterThanOrEqual(other) {
      return this.compare(other) >= 0;
    }
    compare(other) {
      if (this.high_ == other.high_) {
        if (this.low_ == other.low_) {
          return 0;
        }
        return this.getLowBitsUnsigned() > other.getLowBitsUnsigned() ? 1 : -1;
      }
      return this.high_ > other.high_ ? 1 : -1;
    }
    negate() {
      var negLow = ~this.low_ + 1 | 0;
      var overflowFromLow = !negLow;
      var negHigh = ~this.high_ + overflowFromLow | 0;
      return Long.fromBits(negLow, negHigh);
    }
    add(other) {
      var a48 = this.high_ >>> 16;
      var a32 = this.high_ & 65535;
      var a16 = this.low_ >>> 16;
      var a00 = this.low_ & 65535;
      var b48 = other.high_ >>> 16;
      var b32 = other.high_ & 65535;
      var b16 = other.low_ >>> 16;
      var b00 = other.low_ & 65535;
      var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
      c00 += a00 + b00;
      c16 += c00 >>> 16;
      c00 &= 65535;
      c16 += a16 + b16;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c32 += a32 + b32;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c48 += a48 + b48;
      c48 &= 65535;
      return Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
    }
    subtract(other) {
      return this.add(other.negate());
    }
    multiply(other) {
      if (this.isZero()) {
        return this;
      }
      if (other.isZero()) {
        return other;
      }
      var a48 = this.high_ >>> 16;
      var a32 = this.high_ & 65535;
      var a16 = this.low_ >>> 16;
      var a00 = this.low_ & 65535;
      var b48 = other.high_ >>> 16;
      var b32 = other.high_ & 65535;
      var b16 = other.low_ >>> 16;
      var b00 = other.low_ & 65535;
      var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
      c00 += a00 * b00;
      c16 += c00 >>> 16;
      c00 &= 65535;
      c16 += a16 * b00;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c16 += a00 * b16;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c32 += a32 * b00;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c32 += a16 * b16;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c32 += a00 * b32;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
      c48 &= 65535;
      return Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
    }
    div(other) {
      if (other.isZero()) {
        throw new Error("division by zero");
      }
      if (this.isNegative()) {
        if (this.equals(Long.getMinValue())) {
          if (other.equals(Long.getOne()) || other.equals(Long.getNegOne())) {
            return Long.getMinValue();
          }
          if (other.equals(Long.getMinValue())) {
            return Long.getOne();
          }
          var halfThis = this.shiftRight(1);
          var approx = halfThis.div(other).shiftLeft(1);
          if (approx.equals(Long.getZero())) {
            return other.isNegative() ? Long.getOne() : Long.getNegOne();
          }
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
        if (other.isNegative()) {
          return this.negate().div(other.negate());
        }
        return this.negate().div(other).negate();
      }
      if (this.isZero()) {
        return Long.getZero();
      }
      if (other.isNegative()) {
        if (other.equals(Long.getMinValue())) {
          return Long.getZero();
        }
        return this.div(other.negate()).negate();
      }
      var res = Long.getZero();
      var rem = this;
      while (rem.greaterThanOrEqual(other)) {
        var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
        var log2 = Math.ceil(Math.log(approx) / Math.LN2);
        var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
        var approxRes = Long.fromNumber(approx);
        var approxRem = approxRes.multiply(other);
        while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
          approx -= delta;
          approxRes = Long.fromNumber(approx);
          approxRem = approxRes.multiply(other);
        }
        if (approxRes.isZero()) {
          approxRes = Long.getOne();
        }
        res = res.add(approxRes);
        rem = rem.subtract(approxRem);
      }
      return res;
    }
    modulo(other) {
      return this.subtract(this.div(other).multiply(other));
    }
    not() {
      return Long.fromBits(~this.low_, ~this.high_);
    }
    and(other) {
      return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
    }
    or(other) {
      return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
    }
    xor(other) {
      return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
    }
    shiftLeft(numBits) {
      numBits &= 63;
      if (numBits == 0) {
        return this;
      } else {
        var low = this.low_;
        if (numBits < 32) {
          var high = this.high_;
          return Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
        } else {
          return Long.fromBits(0, low << numBits - 32);
        }
      }
    }
    shiftRight(numBits) {
      numBits &= 63;
      if (numBits == 0) {
        return this;
      } else {
        var high = this.high_;
        if (numBits < 32) {
          var low = this.low_;
          return Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
        } else {
          return Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
        }
      }
    }
    shiftRightUnsigned(numBits) {
      numBits &= 63;
      if (numBits == 0) {
        return this;
      } else {
        var high = this.high_;
        if (numBits < 32) {
          var low = this.low_;
          return Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
        } else {
          if (numBits == 32) {
            return Long.fromBits(high, 0);
          } else {
            return Long.fromBits(high >>> numBits - 32, 0);
          }
        }
      }
    }
    static fromInt(value) {
      var intValue = value | 0;
      asserts.assert(value === intValue, "value should be a 32-bit integer");
      if (-128 <= intValue && intValue < 128) {
        return getCachedIntValue_(intValue);
      } else {
        return new Long(intValue, intValue < 0 ? -1 : 0);
      }
    }
    static fromNumber(value) {
      if (value > 0) {
        if (value >= TWO_PWR_63_DBL_) {
          return Long.getMaxValue();
        }
        return new Long(value, value / TWO_PWR_32_DBL_);
      } else {
        if (value < 0) {
          if (value <= -TWO_PWR_63_DBL_) {
            return Long.getMinValue();
          }
          return (new Long(-value, -value / TWO_PWR_32_DBL_)).negate();
        } else {
          return Long.getZero();
        }
      }
    }
    static fromBits(lowBits, highBits) {
      return new Long(lowBits, highBits);
    }
    static fromString(str, opt_radix) {
      if (str.charAt(0) == "-") {
        return Long.fromString(str.substring(1), opt_radix).negate();
      }
      var numberValue = parseInt(str, opt_radix || 10);
      if (numberValue <= MAX_SAFE_INTEGER_) {
        return new Long(numberValue % TWO_PWR_32_DBL_ | 0, numberValue / TWO_PWR_32_DBL_ | 0);
      }
      if (str.length == 0) {
        throw new Error("number format error: empty string");
      }
      if (str.indexOf("-") >= 0) {
        throw new Error('number format error: interior "-" character: ' + str);
      }
      var radix = opt_radix || 10;
      if (radix < 2 || 36 < radix) {
        throw new Error("radix out of range: " + radix);
      }
      var radixToPower = Long.fromNumber(Math.pow(radix, 8));
      var result = Long.getZero();
      for (var i = 0; i < str.length; i += 8) {
        var size = Math.min(8, str.length - i);
        var value = parseInt(str.substring(i, i + size), radix);
        if (size < 8) {
          var power = Long.fromNumber(Math.pow(radix, size));
          result = result.multiply(power).add(Long.fromNumber(value));
        } else {
          result = result.multiply(radixToPower);
          result = result.add(Long.fromNumber(value));
        }
      }
      return result;
    }
    static isStringInRange(str, opt_radix) {
      var radix = opt_radix || 10;
      if (radix < 2 || 36 < radix) {
        throw new Error("radix out of range: " + radix);
      }
      var extremeValue = str.charAt(0) == "-" ? MIN_VALUE_FOR_RADIX_[radix] : MAX_VALUE_FOR_RADIX_[radix];
      if (str.length < extremeValue.length) {
        return true;
      } else {
        if (str.length == extremeValue.length && str <= extremeValue) {
          return true;
        } else {
          return false;
        }
      }
    }
    static getZero() {
      return ZERO_;
    }
    static getOne() {
      return ONE_;
    }
    static getNegOne() {
      return NEG_ONE_;
    }
    static getMaxValue() {
      return MAX_VALUE_;
    }
    static getMinValue() {
      return MIN_VALUE_;
    }
    static getTwoPwr24() {
      return TWO_PWR_24_;
    }
  }
  exports = Long;
  const IntCache_ = {};
  function getCachedIntValue_(value) {
    return reflect.cache(IntCache_, value, function(val) {
      return new Long(val, val < 0 ? -1 : 0);
    });
  }
  const MAX_VALUE_FOR_RADIX_ = ["", "", "111111111111111111111111111111111111111111111111111111111111111", "2021110011022210012102010021220101220221", "13333333333333333333333333333333", "1104332401304422434310311212", "1540241003031030222122211", "22341010611245052052300", "777777777777777777777", "67404283172107811827", "9223372036854775807", "1728002635214590697", "41a792678515120367", "10b269549075433c37", "4340724c6c71dc7a7", "160e2ad3246366807", "7fffffffffffffff", "33d3d8307b214008", "16agh595df825fa7", 
  "ba643dci0ffeehh", "5cbfjia3fh26ja7", "2heiciiie82dh97", "1adaibb21dckfa7", "i6k448cf4192c2", "acd772jnc9l0l7", "64ie1focnn5g77", "3igoecjbmca687", "27c48l5b37oaop", "1bk39f3ah3dmq7", "q1se8f0m04isb", "hajppbc1fc207", "bm03i95hia437", "7vvvvvvvvvvvv", "5hg4ck9jd4u37", "3tdtk1v8j6tpp", "2pijmikexrxp7", "1y2p0ij32e8e7"];
  const MIN_VALUE_FOR_RADIX_ = ["", "", "-1000000000000000000000000000000000000000000000000000000000000000", "-2021110011022210012102010021220101220222", "-20000000000000000000000000000000", "-1104332401304422434310311213", "-1540241003031030222122212", "-22341010611245052052301", "-1000000000000000000000", "-67404283172107811828", "-9223372036854775808", "-1728002635214590698", "-41a792678515120368", "-10b269549075433c38", "-4340724c6c71dc7a8", "-160e2ad3246366808", "-8000000000000000", "-33d3d8307b214009", 
  "-16agh595df825fa8", "-ba643dci0ffeehi", "-5cbfjia3fh26ja8", "-2heiciiie82dh98", "-1adaibb21dckfa8", "-i6k448cf4192c3", "-acd772jnc9l0l8", "-64ie1focnn5g78", "-3igoecjbmca688", "-27c48l5b37oaoq", "-1bk39f3ah3dmq8", "-q1se8f0m04isc", "-hajppbc1fc208", "-bm03i95hia438", "-8000000000000", "-5hg4ck9jd4u38", "-3tdtk1v8j6tpq", "-2pijmikexrxp8", "-1y2p0ij32e8e8"];
  const MAX_SAFE_INTEGER_ = 9007199254740991;
  const TWO_PWR_32_DBL_ = 4294967296;
  const TWO_PWR_63_DBL_ = 0x7fffffffffffffff;
  const ZERO_ = Long.fromBits(0, 0);
  const ONE_ = Long.fromBits(1, 0);
  const NEG_ONE_ = Long.fromBits(-1, -1);
  const MAX_VALUE_ = Long.fromBits(4294967295, 2147483647);
  const MIN_VALUE_ = Long.fromBits(0, 2147483648);
  const TWO_PWR_24_ = Long.fromBits(1 << 24, 0);
  return exports;
});
goog.provide("cljs.core");
goog.require("goog.math.Long");
goog.require("goog.math.Integer");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.Uri");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.10.764";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_unchecked_arrays_STAR_ = false;
cljs.core._STAR_warn_on_infer_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.PROTOCOL_SENTINEL !== "undefined") {
} else {
  cljs.core.PROTOCOL_SENTINEL = {};
}
cljs.core.MODULE_URIS = null;
cljs.core.MODULE_INFOS = null;
cljs.core._STAR_target_STAR_ = goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_global_STAR_ = goog.define("cljs.core._STAR_global_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = null;
}
cljs.core._STAR_exec_tap_fn_STAR_ = function cljs$core$_STAR_exec_tap_fn_STAR_(f) {
  if (typeof setTimeout !== "undefined") {
    var and__4115__auto__ = setTimeout(f, 0);
    if (cljs.core.truth_(and__4115__auto__)) {
      return true;
    } else {
      return and__4115__auto__;
    }
  } else {
    return false;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = null;
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_namespace_maps_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core._STAR_print_fn_bodies_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core.set_print_fn_BANG_(function() {
    var xs = arguments;
    return console.log.apply(console, goog.array.clone(xs));
  });
  cljs.core.set_print_err_fn_BANG_(function() {
    var xs = arguments;
    return console.error.apply(console, goog.array.clone(xs));
  });
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return typeof x === "string" && 1 === x.length;
};
cljs.core.any_QMARK_ = function cljs$core$any_QMARK_(x) {
  return true;
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core._STAR_command_line_args_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4115__auto__ = ty;
    if (cljs.core.truth_(and__4115__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4115__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__5718__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__5718__auto__)) {
    var s = temp__5718__auto__;
    return s;
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1.0E9 + t[1]) / 1000000.0;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var G__1996 = arguments.length;
  switch(G__1996) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___1998 = arguments.length;
      var i__4737__auto___1999 = 0;
      while (true) {
        if (i__4737__auto___1999 < len__4736__auto___1998) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___1999]);
          var G__2000 = i__4737__auto___1999 + 1;
          i__4737__auto___1999 = G__2000;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__4613__auto___2001 = dimarray.length;
  var i_2002 = 0;
  while (true) {
    if (i_2002 < n__4613__auto___2001) {
      dimarray[i_2002] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims);
      var G__2003 = i_2002 + 1;
      i_2002 = G__2003;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq1993) {
  var G__1994 = cljs.core.first(seq1993);
  var seq1993__$1 = cljs.core.next(seq1993);
  var G__1995 = cljs.core.first(seq1993__$1);
  var seq1993__$2 = cljs.core.next(seq1993__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1994, G__1995, seq1993__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4613__auto___2004 = len;
  var i_2005 = 0;
  while (true) {
    if (i_2005 < n__4613__auto___2004) {
      new_arr[i_2005] = arr[i_2005];
      var G__2006 = i_2005 + 1;
      i_2005 = G__2006;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__2007 = i + 1;
      i = G__2007;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.maybe_warn = function cljs$core$maybe_warn(e) {
  if (cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_)) {
    return cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1(e) : cljs.core._STAR_print_err_fn_STAR_.call(null, e);
  } else {
    return null;
  }
};
cljs.core.checked_aget = function cljs$core$checked_aget(var_args) {
  var G__2012 = arguments.length;
  switch(G__2012) {
    case 2:
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2015 = arguments.length;
      var i__4737__auto___2016 = 0;
      while (true) {
        if (i__4737__auto___2016 < len__4736__auto___2015) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2016]);
          var G__2017 = i__4737__auto___2016 + 1;
          i__4737__auto___2016 = G__2017;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  try {
    if (cljs.core.truth_(function() {
      var or__4126__auto__ = cljs.core.array_QMARK_(array);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e2013) {
    var e_2018 = e2013;
    cljs.core.maybe_warn(e_2018);
  }
  return array[idx];
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget.cljs$lang$applyTo = function(seq2009) {
  var G__2010 = cljs.core.first(seq2009);
  var seq2009__$1 = cljs.core.next(seq2009);
  var G__2011 = cljs.core.first(seq2009__$1);
  var seq2009__$2 = cljs.core.next(seq2009__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2010, G__2011, seq2009__$2);
};
cljs.core.checked_aget.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset = function cljs$core$checked_aset(var_args) {
  var G__2024 = arguments.length;
  switch(G__2024) {
    case 3:
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2027 = arguments.length;
      var i__4737__auto___2028 = 0;
      while (true) {
        if (i__4737__auto___2028 < len__4736__auto___2027) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2028]);
          var G__2029 = i__4737__auto___2028 + 1;
          i__4737__auto___2028 = G__2029;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  try {
    if (cljs.core.truth_(function() {
      var or__4126__auto__ = cljs.core.array_QMARK_(array);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e2025) {
    var e_2030 = e2025;
    cljs.core.maybe_warn(e_2030);
  }
  return array[idx] = val;
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset.cljs$lang$applyTo = function(seq2020) {
  var G__2021 = cljs.core.first(seq2020);
  var seq2020__$1 = cljs.core.next(seq2020);
  var G__2022 = cljs.core.first(seq2020__$1);
  var seq2020__$2 = cljs.core.next(seq2020__$1);
  var G__2023 = cljs.core.first(seq2020__$2);
  var seq2020__$3 = cljs.core.next(seq2020__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2021, G__2022, G__2023, seq2020__$3);
};
cljs.core.checked_aset.cljs$lang$maxFixedArity = 3;
cljs.core.checked_aget_SINGLEQUOTE_ = function cljs$core$checked_aget_SINGLEQUOTE_(var_args) {
  var G__2035 = arguments.length;
  switch(G__2035) {
    case 2:
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2037 = arguments.length;
      var i__4737__auto___2038 = 0;
      while (true) {
        if (i__4737__auto___2038 < len__4736__auto___2037) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2038]);
          var G__2039 = i__4737__auto___2038 + 1;
          i__4737__auto___2038 = G__2039;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  if (cljs.core.truth_(function() {
    var or__4126__auto__ = cljs.core.array_QMARK_(array);
    if (or__4126__auto__) {
      return or__4126__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx];
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo = function(seq2032) {
  var G__2033 = cljs.core.first(seq2032);
  var seq2032__$1 = cljs.core.next(seq2032);
  var G__2034 = cljs.core.first(seq2032__$1);
  var seq2032__$2 = cljs.core.next(seq2032__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2033, G__2034, seq2032__$2);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset_SINGLEQUOTE_ = function cljs$core$checked_aset_SINGLEQUOTE_(var_args) {
  var G__2045 = arguments.length;
  switch(G__2045) {
    case 3:
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2047 = arguments.length;
      var i__4737__auto___2048 = 0;
      while (true) {
        if (i__4737__auto___2048 < len__4736__auto___2047) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2048]);
          var G__2049 = i__4737__auto___2048 + 1;
          i__4737__auto___2048 = G__2049;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  if (cljs.core.truth_(function() {
    var or__4126__auto__ = cljs.core.array_QMARK_(array);
    if (or__4126__auto__) {
      return or__4126__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx] = val;
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo = function(seq2041) {
  var G__2042 = cljs.core.first(seq2041);
  var seq2041__$1 = cljs.core.next(seq2041);
  var G__2043 = cljs.core.first(seq2041__$1);
  var seq2041__$2 = cljs.core.next(seq2041__$1);
  var G__2044 = cljs.core.first(seq2041__$2);
  var seq2041__$3 = cljs.core.next(seq2041__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2042, G__2043, G__2044, seq2041__$3);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity = 3;
cljs.core.aget = function cljs$core$aget(var_args) {
  var G__2054 = arguments.length;
  switch(G__2054) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2056 = arguments.length;
      var i__4737__auto___2057 = 0;
      while (true) {
        if (i__4737__auto___2057 < len__4736__auto___2056) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2057]);
          var G__2058 = i__4737__auto___2057 + 1;
          i__4737__auto___2057 = G__2058;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  return array[idx];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.aget, array[idx], idxs);
};
cljs.core.aget.cljs$lang$applyTo = function(seq2051) {
  var G__2052 = cljs.core.first(seq2051);
  var seq2051__$1 = cljs.core.next(seq2051);
  var G__2053 = cljs.core.first(seq2051__$1);
  var seq2051__$2 = cljs.core.next(seq2051__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2052, G__2053, seq2051__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var G__2064 = arguments.length;
  switch(G__2064) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2066 = arguments.length;
      var i__4737__auto___2067 = 0;
      while (true) {
        if (i__4737__auto___2067 < len__4736__auto___2066) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2067]);
          var G__2068 = i__4737__auto___2067 + 1;
          i__4737__auto___2067 = G__2068;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  return array[idx] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.aset, array[idx], idx2, idxv);
};
cljs.core.aset.cljs$lang$applyTo = function(seq2060) {
  var G__2061 = cljs.core.first(seq2060);
  var seq2060__$1 = cljs.core.next(seq2060);
  var G__2062 = cljs.core.first(seq2060__$1);
  var seq2060__$2 = cljs.core.next(seq2060__$1);
  var G__2063 = cljs.core.first(seq2060__$2);
  var seq2060__$3 = cljs.core.next(seq2060__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2061, G__2062, G__2063, seq2060__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var G__2070 = arguments.length;
  switch(G__2070) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, x) {
    a.push(x);
    return a;
  }, [], aseq);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___2075 = arguments.length;
  var i__4737__auto___2076 = 0;
  while (true) {
    if (i__4737__auto___2076 < len__4736__auto___2075) {
      args__4742__auto__.push(arguments[i__4737__auto___2076]);
      var G__2077 = i__4737__auto___2076 + 1;
      i__4737__auto___2076 = G__2077;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 2 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4743__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq2072) {
  var G__2073 = cljs.core.first(seq2072);
  var seq2072__$1 = cljs.core.next(seq2072);
  var G__2074 = cljs.core.first(seq2072__$1);
  var seq2072__$2 = cljs.core.next(seq2072__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2073, G__2074, seq2072__$2);
};
cljs.core.js_symbol_QMARK_ = function cljs$core$js_symbol_QMARK_(x) {
  return goog.typeOf(x) === "symbol" || typeof Symbol !== "undefined" && x instanceof Symbol;
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
var cljs$core$IFn$_invoke$dyn_2080 = function() {
  var G__2081 = null;
  var G__2081__1 = function(this$) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4429__auto__.call(null, this$);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4426__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__2 = function(this$, a) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4429__auto__.call(null, this$, a);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4426__auto__.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__3 = function(this$, a, b) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4429__auto__.call(null, this$, a, b);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4426__auto__.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__4 = function(this$, a, b, c) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4429__auto__.call(null, this$, a, b, c);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4426__auto__.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__5 = function(this$, a, b, c, d) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4429__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4426__auto__.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__6 = function(this$, a, b, c, d, e) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4429__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4426__auto__.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__7 = function(this$, a, b, c, d, e, f) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4429__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4426__auto__.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__8 = function(this$, a, b, c, d, e, f, g) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__9 = function(this$, a, b, c, d, e, f, g, h) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__2081__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  G__2081 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__2081__1.call(this, this$);
      case 2:
        return G__2081__2.call(this, this$, a);
      case 3:
        return G__2081__3.call(this, this$, a, b);
      case 4:
        return G__2081__4.call(this, this$, a, b, c);
      case 5:
        return G__2081__5.call(this, this$, a, b, c, d);
      case 6:
        return G__2081__6.call(this, this$, a, b, c, d, e);
      case 7:
        return G__2081__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return G__2081__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return G__2081__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return G__2081__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__2081__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__2081__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__2081__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__2081__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__2081__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__2081__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__2081__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__2081__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__2081__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__2081__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__2081__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__2081__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2081.cljs$core$IFn$_invoke$arity$1 = G__2081__1;
  G__2081.cljs$core$IFn$_invoke$arity$2 = G__2081__2;
  G__2081.cljs$core$IFn$_invoke$arity$3 = G__2081__3;
  G__2081.cljs$core$IFn$_invoke$arity$4 = G__2081__4;
  G__2081.cljs$core$IFn$_invoke$arity$5 = G__2081__5;
  G__2081.cljs$core$IFn$_invoke$arity$6 = G__2081__6;
  G__2081.cljs$core$IFn$_invoke$arity$7 = G__2081__7;
  G__2081.cljs$core$IFn$_invoke$arity$8 = G__2081__8;
  G__2081.cljs$core$IFn$_invoke$arity$9 = G__2081__9;
  G__2081.cljs$core$IFn$_invoke$arity$10 = G__2081__10;
  G__2081.cljs$core$IFn$_invoke$arity$11 = G__2081__11;
  G__2081.cljs$core$IFn$_invoke$arity$12 = G__2081__12;
  G__2081.cljs$core$IFn$_invoke$arity$13 = G__2081__13;
  G__2081.cljs$core$IFn$_invoke$arity$14 = G__2081__14;
  G__2081.cljs$core$IFn$_invoke$arity$15 = G__2081__15;
  G__2081.cljs$core$IFn$_invoke$arity$16 = G__2081__16;
  G__2081.cljs$core$IFn$_invoke$arity$17 = G__2081__17;
  G__2081.cljs$core$IFn$_invoke$arity$18 = G__2081__18;
  G__2081.cljs$core$IFn$_invoke$arity$19 = G__2081__19;
  G__2081.cljs$core$IFn$_invoke$arity$20 = G__2081__20;
  G__2081.cljs$core$IFn$_invoke$arity$21 = G__2081__21;
  G__2081.cljs$core$IFn$_invoke$arity$22 = G__2081__22;
  return G__2081;
}();
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var G__2079 = arguments.length;
  switch(G__2079) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$1(this$);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$2(this$, a);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    return cljs$core$IFn$_invoke$dyn_2080.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
var cljs$core$ICloneable$_clone$dyn_2083 = function(value) {
  var x__4428__auto__ = value == null ? null : value;
  var m__4429__auto__ = cljs.core._clone[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4429__auto__.call(null, value);
  } else {
    var m__4426__auto__ = cljs.core._clone["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4426__auto__.call(null, value);
    } else {
      throw cljs.core.missing_protocol("ICloneable.-clone", value);
    }
  }
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    return cljs$core$ICloneable$_clone$dyn_2083(value);
  }
};
cljs.core.ICounted = function() {
};
var cljs$core$ICounted$_count$dyn_2084 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._count[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._count["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("ICounted.-count", coll);
    }
  }
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    return cljs$core$ICounted$_count$dyn_2084(coll);
  }
};
cljs.core.IEmptyableCollection = function() {
};
var cljs$core$IEmptyableCollection$_empty$dyn_2085 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._empty[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._empty["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
    }
  }
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    return cljs$core$IEmptyableCollection$_empty$dyn_2085(coll);
  }
};
cljs.core.ICollection = function() {
};
var cljs$core$ICollection$_conj$dyn_2086 = function(coll, o) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._conj[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4429__auto__.call(null, coll, o);
  } else {
    var m__4426__auto__ = cljs.core._conj["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4426__auto__.call(null, coll, o);
    } else {
      throw cljs.core.missing_protocol("ICollection.-conj", coll);
    }
  }
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    return cljs$core$ICollection$_conj$dyn_2086(coll, o);
  }
};
cljs.core.IIndexed = function() {
};
var cljs$core$IIndexed$_nth$dyn_2089 = function() {
  var G__2090 = null;
  var G__2090__2 = function(coll, n) {
    var x__4428__auto__ = coll == null ? null : coll;
    var m__4429__auto__ = cljs.core._nth[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4429__auto__.call(null, coll, n);
    } else {
      var m__4426__auto__ = cljs.core._nth["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4426__auto__.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  };
  var G__2090__3 = function(coll, n, not_found) {
    var x__4428__auto__ = coll == null ? null : coll;
    var m__4429__auto__ = cljs.core._nth[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4429__auto__.call(null, coll, n, not_found);
    } else {
      var m__4426__auto__ = cljs.core._nth["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4426__auto__.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  };
  G__2090 = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__2090__2.call(this, coll, n);
      case 3:
        return G__2090__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2090.cljs$core$IFn$_invoke$arity$2 = G__2090__2;
  G__2090.cljs$core$IFn$_invoke$arity$3 = G__2090__3;
  return G__2090;
}();
cljs.core._nth = function cljs$core$_nth(var_args) {
  var G__2088 = arguments.length;
  switch(G__2088) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    return cljs$core$IIndexed$_nth$dyn_2089.cljs$core$IFn$_invoke$arity$2(coll, n);
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    return cljs$core$IIndexed$_nth$dyn_2089.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
var cljs$core$ISeq$_first$dyn_2092 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._first[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._first["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("ISeq.-first", coll);
    }
  }
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    return cljs$core$ISeq$_first$dyn_2092(coll);
  }
};
var cljs$core$ISeq$_rest$dyn_2093 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._rest[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._rest["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("ISeq.-rest", coll);
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    return cljs$core$ISeq$_rest$dyn_2093(coll);
  }
};
cljs.core.INext = function() {
};
var cljs$core$INext$_next$dyn_2094 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._next[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._next["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("INext.-next", coll);
    }
  }
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    return cljs$core$INext$_next$dyn_2094(coll);
  }
};
cljs.core.ILookup = function() {
};
var cljs$core$ILookup$_lookup$dyn_2097 = function() {
  var G__2098 = null;
  var G__2098__2 = function(o, k) {
    var x__4428__auto__ = o == null ? null : o;
    var m__4429__auto__ = cljs.core._lookup[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4429__auto__.call(null, o, k);
    } else {
      var m__4426__auto__ = cljs.core._lookup["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4426__auto__.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  };
  var G__2098__3 = function(o, k, not_found) {
    var x__4428__auto__ = o == null ? null : o;
    var m__4429__auto__ = cljs.core._lookup[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4429__auto__.call(null, o, k, not_found);
    } else {
      var m__4426__auto__ = cljs.core._lookup["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4426__auto__.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  };
  G__2098 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__2098__2.call(this, o, k);
      case 3:
        return G__2098__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2098.cljs$core$IFn$_invoke$arity$2 = G__2098__2;
  G__2098.cljs$core$IFn$_invoke$arity$3 = G__2098__3;
  return G__2098;
}();
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var G__2096 = arguments.length;
  switch(G__2096) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    return cljs$core$ILookup$_lookup$dyn_2097.cljs$core$IFn$_invoke$arity$2(o, k);
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    return cljs$core$ILookup$_lookup$dyn_2097.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
var cljs$core$IAssociative$_contains_key_QMARK_$dyn_2100 = function(coll, k) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4429__auto__.call(null, coll, k);
  } else {
    var m__4426__auto__ = cljs.core._contains_key_QMARK_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4426__auto__.call(null, coll, k);
    } else {
      throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
    }
  }
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    return cljs$core$IAssociative$_contains_key_QMARK_$dyn_2100(coll, k);
  }
};
var cljs$core$IAssociative$_assoc$dyn_2101 = function(coll, k, v) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._assoc[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4429__auto__.call(null, coll, k, v);
  } else {
    var m__4426__auto__ = cljs.core._assoc["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4426__auto__.call(null, coll, k, v);
    } else {
      throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    return cljs$core$IAssociative$_assoc$dyn_2101(coll, k, v);
  }
};
cljs.core.IFind = function() {
};
var cljs$core$IFind$_find$dyn_2102 = function(coll, k) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._find[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4429__auto__.call(null, coll, k);
  } else {
    var m__4426__auto__ = cljs.core._find["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4426__auto__.call(null, coll, k);
    } else {
      throw cljs.core.missing_protocol("IFind.-find", coll);
    }
  }
};
cljs.core._find = function cljs$core$_find(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IFind$_find$arity$2 == null)) {
    return coll.cljs$core$IFind$_find$arity$2(coll, k);
  } else {
    return cljs$core$IFind$_find$dyn_2102(coll, k);
  }
};
cljs.core.IMap = function() {
};
var cljs$core$IMap$_dissoc$dyn_2103 = function(coll, k) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._dissoc[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4429__auto__.call(null, coll, k);
  } else {
    var m__4426__auto__ = cljs.core._dissoc["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4426__auto__.call(null, coll, k);
    } else {
      throw cljs.core.missing_protocol("IMap.-dissoc", coll);
    }
  }
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    return cljs$core$IMap$_dissoc$dyn_2103(coll, k);
  }
};
cljs.core.IMapEntry = function() {
};
var cljs$core$IMapEntry$_key$dyn_2104 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._key[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._key["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IMapEntry.-key", coll);
    }
  }
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    return cljs$core$IMapEntry$_key$dyn_2104(coll);
  }
};
var cljs$core$IMapEntry$_val$dyn_2105 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._val[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._val["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IMapEntry.-val", coll);
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    return cljs$core$IMapEntry$_val$dyn_2105(coll);
  }
};
cljs.core.ISet = function() {
};
var cljs$core$ISet$_disjoin$dyn_2106 = function(coll, v) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._disjoin[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4429__auto__.call(null, coll, v);
  } else {
    var m__4426__auto__ = cljs.core._disjoin["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4426__auto__.call(null, coll, v);
    } else {
      throw cljs.core.missing_protocol("ISet.-disjoin", coll);
    }
  }
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    return cljs$core$ISet$_disjoin$dyn_2106(coll, v);
  }
};
cljs.core.IStack = function() {
};
var cljs$core$IStack$_peek$dyn_2107 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._peek[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._peek["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IStack.-peek", coll);
    }
  }
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    return cljs$core$IStack$_peek$dyn_2107(coll);
  }
};
var cljs$core$IStack$_pop$dyn_2108 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._pop[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._pop["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IStack.-pop", coll);
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    return cljs$core$IStack$_pop$dyn_2108(coll);
  }
};
cljs.core.IVector = function() {
};
var cljs$core$IVector$_assoc_n$dyn_2109 = function(coll, n, val) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._assoc_n[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4429__auto__.call(null, coll, n, val);
  } else {
    var m__4426__auto__ = cljs.core._assoc_n["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4426__auto__.call(null, coll, n, val);
    } else {
      throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
    }
  }
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    return cljs$core$IVector$_assoc_n$dyn_2109(coll, n, val);
  }
};
cljs.core.IDeref = function() {
};
var cljs$core$IDeref$_deref$dyn_2110 = function(o) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._deref[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4429__auto__.call(null, o);
  } else {
    var m__4426__auto__ = cljs.core._deref["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4426__auto__.call(null, o);
    } else {
      throw cljs.core.missing_protocol("IDeref.-deref", o);
    }
  }
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    return cljs$core$IDeref$_deref$dyn_2110(o);
  }
};
cljs.core.IDerefWithTimeout = function() {
};
var cljs$core$IDerefWithTimeout$_deref_with_timeout$dyn_2111 = function(o, msec, timeout_val) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4429__auto__.call(null, o, msec, timeout_val);
  } else {
    var m__4426__auto__ = cljs.core._deref_with_timeout["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4426__auto__.call(null, o, msec, timeout_val);
    } else {
      throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
    }
  }
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    return cljs$core$IDerefWithTimeout$_deref_with_timeout$dyn_2111(o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
};
var cljs$core$IMeta$_meta$dyn_2112 = function(o) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._meta[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4429__auto__.call(null, o);
  } else {
    var m__4426__auto__ = cljs.core._meta["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4426__auto__.call(null, o);
    } else {
      throw cljs.core.missing_protocol("IMeta.-meta", o);
    }
  }
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    return cljs$core$IMeta$_meta$dyn_2112(o);
  }
};
cljs.core.IWithMeta = function() {
};
var cljs$core$IWithMeta$_with_meta$dyn_2113 = function(o, meta) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._with_meta[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4429__auto__.call(null, o, meta);
  } else {
    var m__4426__auto__ = cljs.core._with_meta["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4426__auto__.call(null, o, meta);
    } else {
      throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
    }
  }
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    return cljs$core$IWithMeta$_with_meta$dyn_2113(o, meta);
  }
};
cljs.core.IReduce = function() {
};
var cljs$core$IReduce$_reduce$dyn_2116 = function() {
  var G__2117 = null;
  var G__2117__2 = function(coll, f) {
    var x__4428__auto__ = coll == null ? null : coll;
    var m__4429__auto__ = cljs.core._reduce[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4429__auto__.call(null, coll, f);
    } else {
      var m__4426__auto__ = cljs.core._reduce["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4426__auto__.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  };
  var G__2117__3 = function(coll, f, start) {
    var x__4428__auto__ = coll == null ? null : coll;
    var m__4429__auto__ = cljs.core._reduce[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4429__auto__.call(null, coll, f, start);
    } else {
      var m__4426__auto__ = cljs.core._reduce["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4426__auto__.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  };
  G__2117 = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return G__2117__2.call(this, coll, f);
      case 3:
        return G__2117__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2117.cljs$core$IFn$_invoke$arity$2 = G__2117__2;
  G__2117.cljs$core$IFn$_invoke$arity$3 = G__2117__3;
  return G__2117;
}();
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var G__2115 = arguments.length;
  switch(G__2115) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    return cljs$core$IReduce$_reduce$dyn_2116.cljs$core$IFn$_invoke$arity$2(coll, f);
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    return cljs$core$IReduce$_reduce$dyn_2116.cljs$core$IFn$_invoke$arity$3(coll, f, start);
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
var cljs$core$IKVReduce$_kv_reduce$dyn_2119 = function(coll, f, init) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4429__auto__.call(null, coll, f, init);
  } else {
    var m__4426__auto__ = cljs.core._kv_reduce["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4426__auto__.call(null, coll, f, init);
    } else {
      throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
    }
  }
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    return cljs$core$IKVReduce$_kv_reduce$dyn_2119(coll, f, init);
  }
};
cljs.core.IEquiv = function() {
};
var cljs$core$IEquiv$_equiv$dyn_2120 = function(o, other) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._equiv[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4429__auto__.call(null, o, other);
  } else {
    var m__4426__auto__ = cljs.core._equiv["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4426__auto__.call(null, o, other);
    } else {
      throw cljs.core.missing_protocol("IEquiv.-equiv", o);
    }
  }
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    return cljs$core$IEquiv$_equiv$dyn_2120(o, other);
  }
};
cljs.core.IHash = function() {
};
var cljs$core$IHash$_hash$dyn_2121 = function(o) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._hash[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4429__auto__.call(null, o);
  } else {
    var m__4426__auto__ = cljs.core._hash["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4426__auto__.call(null, o);
    } else {
      throw cljs.core.missing_protocol("IHash.-hash", o);
    }
  }
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    return cljs$core$IHash$_hash$dyn_2121(o);
  }
};
cljs.core.ISeqable = function() {
};
var cljs$core$ISeqable$_seq$dyn_2122 = function(o) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._seq[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4429__auto__.call(null, o);
  } else {
    var m__4426__auto__ = cljs.core._seq["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4426__auto__.call(null, o);
    } else {
      throw cljs.core.missing_protocol("ISeqable.-seq", o);
    }
  }
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    return cljs$core$ISeqable$_seq$dyn_2122(o);
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
var cljs$core$IReversible$_rseq$dyn_2123 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._rseq[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._rseq["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IReversible.-rseq", coll);
    }
  }
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    return cljs$core$IReversible$_rseq$dyn_2123(coll);
  }
};
cljs.core.ISorted = function() {
};
var cljs$core$ISorted$_sorted_seq$dyn_2124 = function(coll, ascending_QMARK_) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4429__auto__.call(null, coll, ascending_QMARK_);
  } else {
    var m__4426__auto__ = cljs.core._sorted_seq["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4426__auto__.call(null, coll, ascending_QMARK_);
    } else {
      throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
    }
  }
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    return cljs$core$ISorted$_sorted_seq$dyn_2124(coll, ascending_QMARK_);
  }
};
var cljs$core$ISorted$_sorted_seq_from$dyn_2125 = function(coll, k, ascending_QMARK_) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4429__auto__.call(null, coll, k, ascending_QMARK_);
  } else {
    var m__4426__auto__ = cljs.core._sorted_seq_from["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4426__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    return cljs$core$ISorted$_sorted_seq_from$dyn_2125(coll, k, ascending_QMARK_);
  }
};
var cljs$core$ISorted$_entry_key$dyn_2126 = function(coll, entry) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._entry_key[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4429__auto__.call(null, coll, entry);
  } else {
    var m__4426__auto__ = cljs.core._entry_key["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4426__auto__.call(null, coll, entry);
    } else {
      throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    return cljs$core$ISorted$_entry_key$dyn_2126(coll, entry);
  }
};
var cljs$core$ISorted$_comparator$dyn_2127 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._comparator[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._comparator["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("ISorted.-comparator", coll);
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    return cljs$core$ISorted$_comparator$dyn_2127(coll);
  }
};
cljs.core.IWriter = function() {
};
var cljs$core$IWriter$_write$dyn_2128 = function(writer, s) {
  var x__4428__auto__ = writer == null ? null : writer;
  var m__4429__auto__ = cljs.core._write[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4429__auto__.call(null, writer, s);
  } else {
    var m__4426__auto__ = cljs.core._write["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4426__auto__.call(null, writer, s);
    } else {
      throw cljs.core.missing_protocol("IWriter.-write", writer);
    }
  }
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    return cljs$core$IWriter$_write$dyn_2128(writer, s);
  }
};
var cljs$core$IWriter$_flush$dyn_2129 = function(writer) {
  var x__4428__auto__ = writer == null ? null : writer;
  var m__4429__auto__ = cljs.core._flush[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4429__auto__.call(null, writer);
  } else {
    var m__4426__auto__ = cljs.core._flush["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4426__auto__.call(null, writer);
    } else {
      throw cljs.core.missing_protocol("IWriter.-flush", writer);
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    return cljs$core$IWriter$_flush$dyn_2129(writer);
  }
};
cljs.core.IPrintWithWriter = function() {
};
var cljs$core$IPrintWithWriter$_pr_writer$dyn_2130 = function(o, writer, opts) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._pr_writer[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4429__auto__.call(null, o, writer, opts);
  } else {
    var m__4426__auto__ = cljs.core._pr_writer["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4426__auto__.call(null, o, writer, opts);
    } else {
      throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
    }
  }
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    return cljs$core$IPrintWithWriter$_pr_writer$dyn_2130(o, writer, opts);
  }
};
cljs.core.IPending = function() {
};
var cljs$core$IPending$_realized_QMARK_$dyn_2131 = function(x) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4429__auto__.call(null, x);
  } else {
    var m__4426__auto__ = cljs.core._realized_QMARK_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4426__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("IPending.-realized?", x);
    }
  }
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    return cljs$core$IPending$_realized_QMARK_$dyn_2131(x);
  }
};
cljs.core.IWatchable = function() {
};
var cljs$core$IWatchable$_notify_watches$dyn_2132 = function(this$, oldval, newval) {
  var x__4428__auto__ = this$ == null ? null : this$;
  var m__4429__auto__ = cljs.core._notify_watches[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4429__auto__.call(null, this$, oldval, newval);
  } else {
    var m__4426__auto__ = cljs.core._notify_watches["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4426__auto__.call(null, this$, oldval, newval);
    } else {
      throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
    }
  }
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    return cljs$core$IWatchable$_notify_watches$dyn_2132(this$, oldval, newval);
  }
};
var cljs$core$IWatchable$_add_watch$dyn_2133 = function(this$, key, f) {
  var x__4428__auto__ = this$ == null ? null : this$;
  var m__4429__auto__ = cljs.core._add_watch[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4429__auto__.call(null, this$, key, f);
  } else {
    var m__4426__auto__ = cljs.core._add_watch["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4426__auto__.call(null, this$, key, f);
    } else {
      throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    return cljs$core$IWatchable$_add_watch$dyn_2133(this$, key, f);
  }
};
var cljs$core$IWatchable$_remove_watch$dyn_2134 = function(this$, key) {
  var x__4428__auto__ = this$ == null ? null : this$;
  var m__4429__auto__ = cljs.core._remove_watch[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4429__auto__.call(null, this$, key);
  } else {
    var m__4426__auto__ = cljs.core._remove_watch["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4426__auto__.call(null, this$, key);
    } else {
      throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    return cljs$core$IWatchable$_remove_watch$dyn_2134(this$, key);
  }
};
cljs.core.IEditableCollection = function() {
};
var cljs$core$IEditableCollection$_as_transient$dyn_2135 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._as_transient[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._as_transient["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
    }
  }
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    return cljs$core$IEditableCollection$_as_transient$dyn_2135(coll);
  }
};
cljs.core.ITransientCollection = function() {
};
var cljs$core$ITransientCollection$_conj_BANG_$dyn_2136 = function(tcoll, val) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4429__auto__.call(null, tcoll, val);
  } else {
    var m__4426__auto__ = cljs.core._conj_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4426__auto__.call(null, tcoll, val);
    } else {
      throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
    }
  }
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    return cljs$core$ITransientCollection$_conj_BANG_$dyn_2136(tcoll, val);
  }
};
var cljs$core$ITransientCollection$_persistent_BANG_$dyn_2137 = function(tcoll) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4429__auto__.call(null, tcoll);
  } else {
    var m__4426__auto__ = cljs.core._persistent_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4426__auto__.call(null, tcoll);
    } else {
      throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    return cljs$core$ITransientCollection$_persistent_BANG_$dyn_2137(tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
};
var cljs$core$ITransientAssociative$_assoc_BANG_$dyn_2138 = function(tcoll, key, val) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4429__auto__.call(null, tcoll, key, val);
  } else {
    var m__4426__auto__ = cljs.core._assoc_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4426__auto__.call(null, tcoll, key, val);
    } else {
      throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
    }
  }
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    return cljs$core$ITransientAssociative$_assoc_BANG_$dyn_2138(tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
};
var cljs$core$ITransientMap$_dissoc_BANG_$dyn_2139 = function(tcoll, key) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4429__auto__.call(null, tcoll, key);
  } else {
    var m__4426__auto__ = cljs.core._dissoc_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4426__auto__.call(null, tcoll, key);
    } else {
      throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
    }
  }
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    return cljs$core$ITransientMap$_dissoc_BANG_$dyn_2139(tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
};
var cljs$core$ITransientVector$_assoc_n_BANG_$dyn_2140 = function(tcoll, n, val) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4429__auto__.call(null, tcoll, n, val);
  } else {
    var m__4426__auto__ = cljs.core._assoc_n_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4426__auto__.call(null, tcoll, n, val);
    } else {
      throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
    }
  }
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    return cljs$core$ITransientVector$_assoc_n_BANG_$dyn_2140(tcoll, n, val);
  }
};
var cljs$core$ITransientVector$_pop_BANG_$dyn_2141 = function(tcoll) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4429__auto__.call(null, tcoll);
  } else {
    var m__4426__auto__ = cljs.core._pop_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4426__auto__.call(null, tcoll);
    } else {
      throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    return cljs$core$ITransientVector$_pop_BANG_$dyn_2141(tcoll);
  }
};
cljs.core.ITransientSet = function() {
};
var cljs$core$ITransientSet$_disjoin_BANG_$dyn_2142 = function(tcoll, v) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4429__auto__.call(null, tcoll, v);
  } else {
    var m__4426__auto__ = cljs.core._disjoin_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4426__auto__.call(null, tcoll, v);
    } else {
      throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
    }
  }
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    return cljs$core$ITransientSet$_disjoin_BANG_$dyn_2142(tcoll, v);
  }
};
cljs.core.IComparable = function() {
};
var cljs$core$IComparable$_compare$dyn_2143 = function(x, y) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._compare[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4429__auto__.call(null, x, y);
  } else {
    var m__4426__auto__ = cljs.core._compare["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4426__auto__.call(null, x, y);
    } else {
      throw cljs.core.missing_protocol("IComparable.-compare", x);
    }
  }
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    return cljs$core$IComparable$_compare$dyn_2143(x, y);
  }
};
cljs.core.IChunk = function() {
};
var cljs$core$IChunk$_drop_first$dyn_2144 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._drop_first[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._drop_first["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
    }
  }
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    return cljs$core$IChunk$_drop_first$dyn_2144(coll);
  }
};
cljs.core.IChunkedSeq = function() {
};
var cljs$core$IChunkedSeq$_chunked_first$dyn_2145 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._chunked_first[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._chunked_first["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
    }
  }
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    return cljs$core$IChunkedSeq$_chunked_first$dyn_2145(coll);
  }
};
var cljs$core$IChunkedSeq$_chunked_rest$dyn_2146 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._chunked_rest["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    return cljs$core$IChunkedSeq$_chunked_rest$dyn_2146(coll);
  }
};
cljs.core.IChunkedNext = function() {
};
var cljs$core$IChunkedNext$_chunked_next$dyn_2147 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._chunked_next[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._chunked_next["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
    }
  }
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    return cljs$core$IChunkedNext$_chunked_next$dyn_2147(coll);
  }
};
cljs.core.INamed = function() {
};
var cljs$core$INamed$_name$dyn_2148 = function(x) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._name[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4429__auto__.call(null, x);
  } else {
    var m__4426__auto__ = cljs.core._name["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4426__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("INamed.-name", x);
    }
  }
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    return cljs$core$INamed$_name$dyn_2148(x);
  }
};
var cljs$core$INamed$_namespace$dyn_2149 = function(x) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._namespace[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4429__auto__.call(null, x);
  } else {
    var m__4426__auto__ = cljs.core._namespace["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4426__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("INamed.-namespace", x);
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    return cljs$core$INamed$_namespace$dyn_2149(x);
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
var cljs$core$IReset$_reset_BANG_$dyn_2150 = function(o, new_value) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4429__auto__.call(null, o, new_value);
  } else {
    var m__4426__auto__ = cljs.core._reset_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4426__auto__.call(null, o, new_value);
    } else {
      throw cljs.core.missing_protocol("IReset.-reset!", o);
    }
  }
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    return cljs$core$IReset$_reset_BANG_$dyn_2150(o, new_value);
  }
};
cljs.core.ISwap = function() {
};
var cljs$core$ISwap$_swap_BANG_$dyn_2153 = function() {
  var G__2154 = null;
  var G__2154__2 = function(o, f) {
    var x__4428__auto__ = o == null ? null : o;
    var m__4429__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4429__auto__.call(null, o, f);
    } else {
      var m__4426__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4426__auto__.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  };
  var G__2154__3 = function(o, f, a) {
    var x__4428__auto__ = o == null ? null : o;
    var m__4429__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4429__auto__.call(null, o, f, a);
    } else {
      var m__4426__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4426__auto__.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  };
  var G__2154__4 = function(o, f, a, b) {
    var x__4428__auto__ = o == null ? null : o;
    var m__4429__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4429__auto__.call(null, o, f, a, b);
    } else {
      var m__4426__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4426__auto__.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  };
  var G__2154__5 = function(o, f, a, b, xs) {
    var x__4428__auto__ = o == null ? null : o;
    var m__4429__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4429__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__4426__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4426__auto__.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  };
  G__2154 = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return G__2154__2.call(this, o, f);
      case 3:
        return G__2154__3.call(this, o, f, a);
      case 4:
        return G__2154__4.call(this, o, f, a, b);
      case 5:
        return G__2154__5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2154.cljs$core$IFn$_invoke$arity$2 = G__2154__2;
  G__2154.cljs$core$IFn$_invoke$arity$3 = G__2154__3;
  G__2154.cljs$core$IFn$_invoke$arity$4 = G__2154__4;
  G__2154.cljs$core$IFn$_invoke$arity$5 = G__2154__5;
  return G__2154;
}();
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var G__2152 = arguments.length;
  switch(G__2152) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    return cljs$core$ISwap$_swap_BANG_$dyn_2153.cljs$core$IFn$_invoke$arity$2(o, f);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    return cljs$core$ISwap$_swap_BANG_$dyn_2153.cljs$core$IFn$_invoke$arity$3(o, f, a);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    return cljs$core$ISwap$_swap_BANG_$dyn_2153.cljs$core$IFn$_invoke$arity$4(o, f, a, b);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    return cljs$core$ISwap$_swap_BANG_$dyn_2153.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs);
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
var cljs$core$IVolatile$_vreset_BANG_$dyn_2156 = function(o, new_value) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4429__auto__.call(null, o, new_value);
  } else {
    var m__4426__auto__ = cljs.core._vreset_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4426__auto__.call(null, o, new_value);
    } else {
      throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
    }
  }
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    return cljs$core$IVolatile$_vreset_BANG_$dyn_2156(o, new_value);
  }
};
cljs.core.IIterable = function() {
};
var cljs$core$IIterable$_iterator$dyn_2157 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._iterator[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._iterator["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IIterable.-iterator", coll);
    }
  }
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    return cljs$core$IIterable$_iterator$dyn_2157(coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math !== "undefined" && typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__2158 = i + 2;
        var G__2159 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__2158;
        h1 = G__2159;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__2162 = i + 1;
          var G__2163 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__2162;
          hash = G__2163;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  goog.object.set(cljs.core.string_hash_cache, k, h);
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null) ^ 0;
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__2167 = o;
        switch(G__2167) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1231;
      } else {
        if (o === false) {
          return 1237;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf() ^ 0;
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o) ^ 0;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(cljs.core.not(a.ns) ? b.ns : false)) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__2170 = null;
  var G__2170__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
  };
  var G__2170__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__2170 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__2170__2.call(this, self__, coll);
      case 3:
        return G__2170__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2170.cljs$core$IFn$_invoke$arity$2 = G__2170__2;
  G__2170.cljs$core$IFn$_invoke$arity$3 = G__2170__3;
  return G__2170;
}();
cljs.core.Symbol.prototype.apply = function(self__, args2169) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2169)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4238__auto__ = self__._hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var G__2172 = arguments.length;
  switch(G__2172) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  while (true) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      if (typeof name === "string") {
        var idx = name.indexOf("/");
        if (idx < 1) {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
        } else {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
        }
      } else {
        if (cljs.core.var_QMARK_(name)) {
          return name.sym;
        } else {
          if (name instanceof cljs.core.Keyword) {
            var G__2174 = name.fqn;
            name = G__2174;
            continue;
          } else {
            throw new Error("no conversion to symbol");
          }
        }
      }
    }
    break;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ["#'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.sym, other.sym);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call = function() {
  var G__2218 = null;
  var G__2218__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2176 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2176.cljs$core$IFn$_invoke$arity$0 ? fexpr__2176.cljs$core$IFn$_invoke$arity$0() : fexpr__2176.call(null);
  };
  var G__2218__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2177 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2177.cljs$core$IFn$_invoke$arity$1 ? fexpr__2177.cljs$core$IFn$_invoke$arity$1(a) : fexpr__2177.call(null, a);
  };
  var G__2218__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2178 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2178.cljs$core$IFn$_invoke$arity$2 ? fexpr__2178.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__2178.call(null, a, b);
  };
  var G__2218__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2179 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2179.cljs$core$IFn$_invoke$arity$3 ? fexpr__2179.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__2179.call(null, a, b, c);
  };
  var G__2218__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2180 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2180.cljs$core$IFn$_invoke$arity$4 ? fexpr__2180.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__2180.call(null, a, b, c, d);
  };
  var G__2218__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2181 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2181.cljs$core$IFn$_invoke$arity$5 ? fexpr__2181.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__2181.call(null, a, b, c, d, e);
  };
  var G__2218__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2182 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2182.cljs$core$IFn$_invoke$arity$6 ? fexpr__2182.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__2182.call(null, a, b, c, d, e, f);
  };
  var G__2218__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2183 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2183.cljs$core$IFn$_invoke$arity$7 ? fexpr__2183.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__2183.call(null, a, b, c, d, e, f, g);
  };
  var G__2218__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2184 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2184.cljs$core$IFn$_invoke$arity$8 ? fexpr__2184.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__2184.call(null, a, b, c, d, e, f, g, h);
  };
  var G__2218__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2185 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2185.cljs$core$IFn$_invoke$arity$9 ? fexpr__2185.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__2185.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__2218__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2186 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2186.cljs$core$IFn$_invoke$arity$10 ? fexpr__2186.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__2186.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__2218__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2187 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2187.cljs$core$IFn$_invoke$arity$11 ? fexpr__2187.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__2187.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__2218__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2188 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2188.cljs$core$IFn$_invoke$arity$12 ? fexpr__2188.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__2188.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__2218__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2189 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2189.cljs$core$IFn$_invoke$arity$13 ? fexpr__2189.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__2189.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__2218__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2190 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2190.cljs$core$IFn$_invoke$arity$14 ? fexpr__2190.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__2190.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__2218__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2191 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2191.cljs$core$IFn$_invoke$arity$15 ? fexpr__2191.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__2191.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__2218__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2192 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2192.cljs$core$IFn$_invoke$arity$16 ? fexpr__2192.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__2192.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__2218__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2193 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2193.cljs$core$IFn$_invoke$arity$17 ? fexpr__2193.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__2193.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__2218__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2194 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2194.cljs$core$IFn$_invoke$arity$18 ? fexpr__2194.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__2194.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__2218__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2195 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2195.cljs$core$IFn$_invoke$arity$19 ? fexpr__2195.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__2195.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__2218__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2196 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2196.cljs$core$IFn$_invoke$arity$20 ? fexpr__2196.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__2196.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__2218__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__2218 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__2218__1.call(this, self__);
      case 2:
        return G__2218__2.call(this, self__, a);
      case 3:
        return G__2218__3.call(this, self__, a, b);
      case 4:
        return G__2218__4.call(this, self__, a, b, c);
      case 5:
        return G__2218__5.call(this, self__, a, b, c, d);
      case 6:
        return G__2218__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__2218__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__2218__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__2218__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__2218__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__2218__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__2218__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__2218__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__2218__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__2218__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__2218__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__2218__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__2218__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__2218__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__2218__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__2218__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__2218__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2218.cljs$core$IFn$_invoke$arity$1 = G__2218__1;
  G__2218.cljs$core$IFn$_invoke$arity$2 = G__2218__2;
  G__2218.cljs$core$IFn$_invoke$arity$3 = G__2218__3;
  G__2218.cljs$core$IFn$_invoke$arity$4 = G__2218__4;
  G__2218.cljs$core$IFn$_invoke$arity$5 = G__2218__5;
  G__2218.cljs$core$IFn$_invoke$arity$6 = G__2218__6;
  G__2218.cljs$core$IFn$_invoke$arity$7 = G__2218__7;
  G__2218.cljs$core$IFn$_invoke$arity$8 = G__2218__8;
  G__2218.cljs$core$IFn$_invoke$arity$9 = G__2218__9;
  G__2218.cljs$core$IFn$_invoke$arity$10 = G__2218__10;
  G__2218.cljs$core$IFn$_invoke$arity$11 = G__2218__11;
  G__2218.cljs$core$IFn$_invoke$arity$12 = G__2218__12;
  G__2218.cljs$core$IFn$_invoke$arity$13 = G__2218__13;
  G__2218.cljs$core$IFn$_invoke$arity$14 = G__2218__14;
  G__2218.cljs$core$IFn$_invoke$arity$15 = G__2218__15;
  G__2218.cljs$core$IFn$_invoke$arity$16 = G__2218__16;
  G__2218.cljs$core$IFn$_invoke$arity$17 = G__2218__17;
  G__2218.cljs$core$IFn$_invoke$arity$18 = G__2218__18;
  G__2218.cljs$core$IFn$_invoke$arity$19 = G__2218__19;
  G__2218.cljs$core$IFn$_invoke$arity$20 = G__2218__20;
  G__2218.cljs$core$IFn$_invoke$arity$21 = G__2218__21;
  G__2218.cljs$core$IFn$_invoke$arity$22 = G__2218__22;
  return G__2218;
}();
cljs.core.Var.prototype.apply = function(self__, args2175) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2175)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  var fexpr__2197 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2197.cljs$core$IFn$_invoke$arity$0 ? fexpr__2197.cljs$core$IFn$_invoke$arity$0() : fexpr__2197.call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var fexpr__2198 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2198.cljs$core$IFn$_invoke$arity$1 ? fexpr__2198.cljs$core$IFn$_invoke$arity$1(a) : fexpr__2198.call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var fexpr__2199 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2199.cljs$core$IFn$_invoke$arity$2 ? fexpr__2199.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__2199.call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var fexpr__2200 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2200.cljs$core$IFn$_invoke$arity$3 ? fexpr__2200.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__2200.call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var fexpr__2201 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2201.cljs$core$IFn$_invoke$arity$4 ? fexpr__2201.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__2201.call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var fexpr__2202 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2202.cljs$core$IFn$_invoke$arity$5 ? fexpr__2202.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__2202.call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var fexpr__2203 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2203.cljs$core$IFn$_invoke$arity$6 ? fexpr__2203.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__2203.call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var fexpr__2204 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2204.cljs$core$IFn$_invoke$arity$7 ? fexpr__2204.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__2204.call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var fexpr__2205 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2205.cljs$core$IFn$_invoke$arity$8 ? fexpr__2205.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__2205.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var fexpr__2206 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2206.cljs$core$IFn$_invoke$arity$9 ? fexpr__2206.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__2206.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var fexpr__2207 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2207.cljs$core$IFn$_invoke$arity$10 ? fexpr__2207.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__2207.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var fexpr__2208 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2208.cljs$core$IFn$_invoke$arity$11 ? fexpr__2208.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__2208.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var fexpr__2209 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2209.cljs$core$IFn$_invoke$arity$12 ? fexpr__2209.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__2209.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var fexpr__2210 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2210.cljs$core$IFn$_invoke$arity$13 ? fexpr__2210.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__2210.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var fexpr__2211 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2211.cljs$core$IFn$_invoke$arity$14 ? fexpr__2211.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__2211.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var fexpr__2212 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2212.cljs$core$IFn$_invoke$arity$15 ? fexpr__2212.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__2212.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var fexpr__2213 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2213.cljs$core$IFn$_invoke$arity$16 ? fexpr__2213.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__2213.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var fexpr__2214 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2214.cljs$core$IFn$_invoke$arity$17 ? fexpr__2214.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__2214.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var fexpr__2215 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2215.cljs$core$IFn$_invoke$arity$18 ? fexpr__2215.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__2215.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var fexpr__2216 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2216.cljs$core$IFn$_invoke$arity$19 ? fexpr__2216.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__2216.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var fexpr__2217 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2217.cljs$core$IFn$_invoke$arity$20 ? fexpr__2217.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__2217.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 131072 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.js_iterable_QMARK_ = function cljs$core$js_iterable_QMARK_(x) {
  return !(x == null) && !(x[cljs.core.ITER_SYMBOL] == null);
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || cljs.core.PROTOCOL_SENTINEL === value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.js_iterable_QMARK_(coll)) {
            return cljs.core.es6_iterator_seq(goog.object.get(coll, cljs.core.ITER_SYMBOL).call(coll));
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
              return cljs.core._seq(coll);
            } else {
              throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll), " is not ISeqable"].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return s.cljs$core$ISeq$_rest$arity$1(null);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var G__2229 = arguments.length;
  switch(G__2229) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2231 = arguments.length;
      var i__4737__auto___2232 = 0;
      while (true) {
        if (i__4737__auto___2232 < len__4736__auto___2231) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2232]);
          var G__2233 = i__4737__auto___2232 + 1;
          i__4737__auto___2232 = G__2233;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__2234 = y;
        var G__2235 = cljs.core.first(more);
        var G__2236 = cljs.core.next(more);
        x = G__2234;
        y = G__2235;
        more = G__2236;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq2226) {
  var G__2227 = cljs.core.first(seq2226);
  var seq2226__$1 = cljs.core.next(seq2226);
  var G__2228 = cljs.core.first(seq2226__$1);
  var seq2226__$2 = cljs.core.next(seq2226__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2227, G__2228, seq2226__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq(self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return null;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__2237 = n + 1;
      var G__2238 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__2239 = cljs.core.next(coll__$1);
      n = G__2237;
      hash_code = G__2238;
      coll__$1 = G__2239;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__2240 = n + 1;
      var G__2241 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__2242 = cljs.core.next(coll__$1);
      n = G__2240;
      hash_code = G__2241;
      coll__$1 = G__2242;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
goog.object.set(cljs.core.ICounted, "null", true);
goog.object.set(cljs.core._count, "null", function(_) {
  return 0;
});
Date.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    return goog.array.defaultCompare(this$__$1.valueOf(), other.valueOf());
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
cljs.core.Inst = function() {
};
var cljs$core$Inst$inst_ms_STAR_$dyn_2243 = function(inst) {
  var x__4428__auto__ = inst == null ? null : inst;
  var m__4429__auto__ = cljs.core.inst_ms_STAR_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4429__auto__.call(null, inst);
  } else {
    var m__4426__auto__ = cljs.core.inst_ms_STAR_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4426__auto__.call(null, inst);
    } else {
      throw cljs.core.missing_protocol("Inst.inst-ms*", inst);
    }
  }
};
cljs.core.inst_ms_STAR_ = function cljs$core$inst_ms_STAR_(inst) {
  if (!(inst == null) && !(inst.cljs$core$Inst$inst_ms_STAR_$arity$1 == null)) {
    return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);
  } else {
    return cljs$core$Inst$inst_ms_STAR_$dyn_2243(inst);
  }
};
Date.prototype.cljs$core$Inst$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(inst) {
  var inst__$1 = this;
  return inst__$1.getTime();
};
cljs.core.inst_ms = function cljs$core$inst_ms(inst) {
  return cljs.core.inst_ms_STAR_(inst);
};
cljs.core.inst_QMARK_ = function cljs$core$inst_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$Inst$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
  }
};
goog.object.set(cljs.core.IEquiv, "number", true);
goog.object.set(cljs.core._equiv, "number", function(x, o) {
  return x === o;
});
goog.object.set(cljs.core.Fn, "function", true);
goog.object.set(cljs.core.IMeta, "function", true);
goog.object.set(cljs.core._meta, "function", function(_) {
  return null;
});
goog.object.set(cljs.core.IHash, "_", true);
goog.object.set(cljs.core._hash, "_", function(o) {
  return goog.getUid(o);
});
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var G__2246 = arguments.length;
  switch(G__2246) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cicoll.cljs$core$ICounted$_count$arity$1(null);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cicoll.cljs$core$IIndexed$_nth$arity$2(null, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__2247 = val;
          var G__2248 = cicoll.cljs$core$IIndexed$_nth$arity$2(null, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2247, G__2248) : f.call(null, G__2247, G__2248);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__2252 = nval;
          var G__2253 = n + 1;
          val = G__2252;
          n = G__2253;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cicoll.cljs$core$ICounted$_count$arity$1(null);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2249 = val__$1;
        var G__2250 = cicoll.cljs$core$IIndexed$_nth$arity$2(null, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2249, G__2250) : f.call(null, G__2249, G__2250);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2254 = nval;
        var G__2255 = n + 1;
        val__$1 = G__2254;
        n = G__2255;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var G__2257 = arguments.length;
  switch(G__2257) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__2258 = val;
          var G__2259 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2258, G__2259) : f.call(null, G__2258, G__2259);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__2265 = nval;
          var G__2266 = n + 1;
          val = G__2265;
          n = G__2266;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2260 = val__$1;
        var G__2261 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2260, G__2261) : f.call(null, G__2260, G__2261);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2267 = nval;
        var G__2268 = n + 1;
        val__$1 = G__2267;
        n = G__2268;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2262 = val__$1;
        var G__2263 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2262, G__2263) : f.call(null, G__2262, G__2263);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2269 = nval;
        var G__2270 = n + 1;
        val__$1 = G__2269;
        n = G__2270;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var G__2274 = arguments.length;
  switch(G__2274) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__4214__auto__ = 0;
      var y__4215__auto__ = start + len;
      return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__2276 = idx + 1;
          idx = G__2276;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var G__2278 = arguments.length;
  switch(G__2278) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__4217__auto__ = len - 1;
      var y__4218__auto__ = start;
      return x__4217__auto__ < y__4218__auto__ ? x__4217__auto__ : y__4218__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__2280 = idx - 1;
          idx = G__2280;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__2281 = null;
  var G__2281__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2281__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2281 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2281__1.call(this, x);
      case 2:
        return G__2281__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2281.cljs$core$IFn$_invoke$arity$1 = G__2281__1;
  G__2281.cljs$core$IFn$_invoke$arity$2 = G__2281__2;
  return G__2281;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__2282 = null;
  var G__2282__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2282__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2282 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2282__1.call(this, x);
      case 2:
        return G__2282__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2282.cljs$core$IFn$_invoke$arity$1 = G__2282__1;
  G__2282.cljs$core$IFn$_invoke$arity$2 = G__2282__2;
  return G__2282;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    throw new Error("Index out of bounds");
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4214__auto__ = 0;
  var y__4215__auto__ = self__.arr.length - self__.i;
  return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = coll__$1.cljs$core$ICounted$_count$arity$1(null);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
goog.object.set(cljs.core.IndexedSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var G__2284 = arguments.length;
  switch(G__2284) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var G__2287 = arguments.length;
  switch(G__2287) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__2289 = null;
  var G__2289__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2289__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2289 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2289__1.call(this, x);
      case 2:
        return G__2289__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2289.cljs$core$IFn$_invoke$arity$1 = G__2289__1;
  G__2289.cljs$core$IFn$_invoke$arity$2 = G__2289__2;
  return G__2289;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__2290 = null;
  var G__2290__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2290__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2290 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2290__1.call(this, x);
      case 2:
        return G__2290__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2290.cljs$core$IFn$_invoke$arity$1 = G__2290__1;
  G__2290.cljs$core$IFn$_invoke$arity$2 = G__2290__2;
  return G__2290;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
  }
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
goog.object.set(cljs.core.RSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__2291 = sn;
      s = G__2291;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
goog.object.set(cljs.core.IEquiv, "_", true);
goog.object.set(cljs.core._equiv, "_", function(x, o) {
  return x === o;
});
cljs.core.conj = function cljs$core$conj(var_args) {
  var G__2296 = arguments.length;
  switch(G__2296) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2298 = arguments.length;
      var i__4737__auto___2299 = 0;
      while (true) {
        if (i__4737__auto___2299 < len__4736__auto___2298) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2299]);
          var G__2300 = i__4737__auto___2299 + 1;
          i__4737__auto___2299 = G__2300;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return new cljs.core.List(null, x, null, 1, null);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__2301 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__2302 = cljs.core.first(xs);
      var G__2303 = cljs.core.next(xs);
      coll = G__2301;
      x = G__2302;
      xs = G__2303;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq2293) {
  var G__2294 = cljs.core.first(seq2293);
  var seq2293__$1 = cljs.core.next(seq2293);
  var G__2295 = cljs.core.first(seq2293__$1);
  var seq2293__$2 = cljs.core.next(seq2293__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2294, G__2295, seq2293__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : false : false) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : !coll.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll)) {
        return cljs.core._empty(coll);
      } else {
        return null;
      }
    }
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__2306 = cljs.core.next(s);
      var G__2307 = acc + 1;
      s = G__2306;
      acc = G__2307;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var G__2311 = arguments.length;
  switch(G__2311) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__2313 = cljs.core.next(coll);
            var G__2314 = n - 1;
            coll = G__2313;
            n = G__2314;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__2315 = cljs.core.next(coll);
            var G__2316 = n - 1;
            var G__2317 = not_found;
            coll = G__2315;
            n = G__2316;
            not_found = G__2317;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var G__2319 = arguments.length;
  switch(G__2319) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              throw new Error("Index out of bounds");
            }
          } else {
            if (function() {
              var or__4126__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4126__auto__) {
                return or__4126__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                throw new Error("Index out of bounds");
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              return not_found;
            }
          } else {
            if (function() {
              var or__4126__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4126__auto__) {
                return or__4126__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                return not_found;
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    var temp__5718__auto__ = n__$1 > 0 && cljs.core.seq(xs);
    if (temp__5718__auto__) {
      var xs__$1 = temp__5718__auto__;
      var G__2329 = n__$1 - 1;
      var G__2330 = cljs.core.rest(xs__$1);
      n__$1 = G__2329;
      xs = G__2330;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var G__2332 = arguments.length;
  switch(G__2332) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && (-1 < k && k < o.length)) {
            return o.charAt(k | 0);
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && (-1 < k && k < o.length)) {
          return o[k | 0];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && (-1 < k && k < o.length)) {
            return o.charAt(k | 0);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var G__2341 = arguments.length;
  switch(G__2341) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2344 = arguments.length;
      var i__4737__auto___2345 = 0;
      while (true) {
        if (i__4737__auto___2345 < len__4736__auto___2344) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2345]);
          var G__2346 = i__4737__auto___2345 + 1;
          i__4737__auto___2345 = G__2346;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IAssociative$ ? true : false : false) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(null, k, v);
  } else {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentArrayMap.createAsIfByAssoc([k, v]);
    }
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__2347 = ret;
      var G__2348 = cljs.core.first(kvs);
      var G__2349 = cljs.core.second(kvs);
      var G__2350 = cljs.core.nnext(kvs);
      coll = G__2347;
      k = G__2348;
      v = G__2349;
      kvs = G__2350;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq2337) {
  var G__2338 = cljs.core.first(seq2337);
  var seq2337__$1 = cljs.core.next(seq2337);
  var G__2339 = cljs.core.first(seq2337__$1);
  var seq2337__$2 = cljs.core.next(seq2337__$1);
  var G__2340 = cljs.core.first(seq2337__$2);
  var seq2337__$3 = cljs.core.next(seq2337__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2338, G__2339, G__2340, seq2337__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var G__2355 = arguments.length;
  switch(G__2355) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2357 = arguments.length;
      var i__4737__auto___2358 = 0;
      while (true) {
        if (i__4737__auto___2358 < len__4736__auto___2357) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2358]);
          var G__2359 = i__4737__auto___2358 + 1;
          i__4737__auto___2358 = G__2359;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__2360 = ret;
        var G__2361 = cljs.core.first(ks);
        var G__2362 = cljs.core.next(ks);
        coll = G__2360;
        k = G__2361;
        ks = G__2362;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq2352) {
  var G__2353 = cljs.core.first(seq2352);
  var seq2352__$1 = cljs.core.next(seq2352);
  var G__2354 = cljs.core.first(seq2352__$1);
  var seq2352__$2 = cljs.core.next(seq2352__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2353, G__2354, seq2352__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4126__auto__ = goog.isFunction(f);
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    if (!(f == null)) {
      if (false || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call = function() {
  var G__2366 = null;
  var G__2366__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__2366__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__2366__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__2366__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__2366__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__2366__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__2366__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__2366__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__2366__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__2366__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__2366__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__2366__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__2366__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__2366__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__2366__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__2366__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__2366__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__2366__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__2366__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__2366__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__2366__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__2366__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__2366 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__2366__1.call(this, self__);
      case 2:
        return G__2366__2.call(this, self__, a);
      case 3:
        return G__2366__3.call(this, self__, a, b);
      case 4:
        return G__2366__4.call(this, self__, a, b, c);
      case 5:
        return G__2366__5.call(this, self__, a, b, c, d);
      case 6:
        return G__2366__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__2366__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__2366__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__2366__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__2366__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__2366__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__2366__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__2366__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__2366__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__2366__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__2366__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__2366__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__2366__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__2366__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__2366__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__2366__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__2366__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2366.cljs$core$IFn$_invoke$arity$1 = G__2366__1;
  G__2366.cljs$core$IFn$_invoke$arity$2 = G__2366__2;
  G__2366.cljs$core$IFn$_invoke$arity$3 = G__2366__3;
  G__2366.cljs$core$IFn$_invoke$arity$4 = G__2366__4;
  G__2366.cljs$core$IFn$_invoke$arity$5 = G__2366__5;
  G__2366.cljs$core$IFn$_invoke$arity$6 = G__2366__6;
  G__2366.cljs$core$IFn$_invoke$arity$7 = G__2366__7;
  G__2366.cljs$core$IFn$_invoke$arity$8 = G__2366__8;
  G__2366.cljs$core$IFn$_invoke$arity$9 = G__2366__9;
  G__2366.cljs$core$IFn$_invoke$arity$10 = G__2366__10;
  G__2366.cljs$core$IFn$_invoke$arity$11 = G__2366__11;
  G__2366.cljs$core$IFn$_invoke$arity$12 = G__2366__12;
  G__2366.cljs$core$IFn$_invoke$arity$13 = G__2366__13;
  G__2366.cljs$core$IFn$_invoke$arity$14 = G__2366__14;
  G__2366.cljs$core$IFn$_invoke$arity$15 = G__2366__15;
  G__2366.cljs$core$IFn$_invoke$arity$16 = G__2366__16;
  G__2366.cljs$core$IFn$_invoke$arity$17 = G__2366__17;
  G__2366.cljs$core$IFn$_invoke$arity$18 = G__2366__18;
  G__2366.cljs$core$IFn$_invoke$arity$19 = G__2366__19;
  G__2366.cljs$core$IFn$_invoke$arity$20 = G__2366__20;
  G__2366.cljs$core$IFn$_invoke$arity$21 = G__2366__21;
  G__2366.cljs$core$IFn$_invoke$arity$22 = G__2366__22;
  return G__2366;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args2365) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2365)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (!(o == null) ? !(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o) : false) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var G__2373 = arguments.length;
  switch(G__2373) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2375 = arguments.length;
      var i__4737__auto___2376 = 0;
      while (true) {
        if (i__4737__auto___2376 < len__4736__auto___2375) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2376]);
          var G__2377 = i__4737__auto___2376 + 1;
          i__4737__auto___2376 = G__2377;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__2378 = ret;
        var G__2379 = cljs.core.first(ks);
        var G__2380 = cljs.core.next(ks);
        coll = G__2378;
        k = G__2379;
        ks = G__2380;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq2370) {
  var G__2371 = cljs.core.first(seq2370);
  var seq2370__$1 = cljs.core.next(seq2370);
  var G__2372 = cljs.core.first(seq2370__$1);
  var seq2370__$2 = cljs.core.next(seq2370__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2371, G__2372, seq2370__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.ifind_QMARK_ = function cljs$core$ifind_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IFind$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var G__2394 = arguments.length;
  switch(G__2394) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2398 = arguments.length;
      var i__4737__auto___2399 = 0;
      while (true) {
        if (i__4737__auto___2399 < len__4736__auto___2398) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2399]);
          var G__2400 = i__4737__auto___2399 + 1;
          i__4737__auto___2399 = G__2400;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__4758__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq2393) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq2393));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  return goog.object.getKeys(obj);
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__2401 = i__$1 + 1;
      var G__2402 = j__$1 + 1;
      var G__2403 = len__$1 - 1;
      i__$1 = G__2401;
      j__$1 = G__2402;
      len__$1 = G__2403;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__2404 = i__$1 - 1;
      var G__2405 = j__$1 - 1;
      var G__2406 = len__$1 - 1;
      i__$1 = G__2404;
      j__$1 = G__2405;
      len__$1 = G__2406;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.boolean_QMARK_ = function cljs$core$boolean_QMARK_(x) {
  return x === true || x === false;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var or__4126__auto__ = s == null;
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    var or__4126__auto____$1 = !(s == null) ? s.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeqable$ ? true : !s.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
    if (or__4126__auto____$1) {
      return or__4126__auto____$1;
    } else {
      return cljs.core.array_QMARK_(s) || typeof s === "string";
    }
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4126__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.int_QMARK_ = function cljs$core$int_QMARK_(x) {
  return cljs.core.integer_QMARK_(x) || x instanceof goog.math.Integer || x instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function cljs$core$pos_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x > 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
      } else {
        return false;
      }
    }
  }
};
cljs.core.neg_int_QMARK_ = function cljs$core$neg_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x < 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return x.isNegative();
    } else {
      if (x instanceof goog.math.Long) {
        return x.isNegative();
      } else {
        return false;
      }
    }
  }
};
cljs.core.nat_int_QMARK_ = function cljs$core$nat_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return !(x < 0);
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative());
      } else {
        return false;
      }
    }
  }
};
cljs.core.float_QMARK_ = function cljs$core$float_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.double_QMARK_ = function cljs$core$double_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.infinite_QMARK_ = function cljs$core$infinite_QMARK_(x) {
  return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (cljs.core.ifind_QMARK_(coll)) {
    return cljs.core._find(coll, k);
  } else {
    if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
      return new cljs.core.MapEntry(k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k), null);
    } else {
      return null;
    }
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var G__2419 = arguments.length;
  switch(G__2419) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2421 = arguments.length;
      var i__4737__auto___2422 = 0;
      while (true) {
        if (i__4737__auto___2422 < len__4736__auto___2421) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2422]);
          var G__2423 = i__4737__auto___2422 + 1;
          i__4737__auto___2422 = G__2423;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.createAsIfByAssoc([x, y]);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__2424 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__2425 = etc;
          s = G__2424;
          xs = G__2425;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq2416) {
  var G__2417 = cljs.core.first(seq2416);
  var seq2416__$1 = cljs.core.next(seq2416);
  var G__2418 = cljs.core.first(seq2416__$1);
  var seq2416__$2 = cljs.core.next(seq2416__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2417, G__2418, seq2416__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var G__2428 = arguments.length;
  switch(G__2428) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__2430 = xs;
      var G__2431 = ys;
      var G__2432 = len;
      var G__2433 = n + 1;
      xs = G__2430;
      ys = G__2431;
      len = G__2432;
      n = G__2433;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var G__2435 = arguments.length;
  switch(G__2435) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array(coll);
    goog.array.stableSort(a, cljs.core.fn__GT_comparator(comp));
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var G__2438 = arguments.length;
  switch(G__2438) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    var G__2440 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x);
    var G__2441 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y);
    var fexpr__2439 = cljs.core.fn__GT_comparator(comp);
    return fexpr__2439.cljs$core$IFn$_invoke$arity$2 ? fexpr__2439.cljs$core$IFn$_invoke$arity$2(G__2440, G__2441) : fexpr__2439.call(null, G__2440, G__2441);
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var G__2444 = arguments.length;
  switch(G__2444) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__5718__auto__ = cljs.core.seq(coll);
  if (temp__5718__auto__) {
    var s = temp__5718__auto__;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.next(s));
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__2445 = val__$1;
        var G__2446 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2445, G__2446) : f.call(null, G__2445, G__2446);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2448 = nval;
        var G__2449 = cljs.core.next(coll__$1);
        val__$1 = G__2448;
        coll__$1 = G__2449;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array(coll);
  goog.array.shuffle(a);
  return cljs.core.vec(a);
};
cljs.core.iter_reduce = function cljs$core$iter_reduce(var_args) {
  var G__2451 = arguments.length;
  switch(G__2451) {
    case 2:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  var iter = cljs.core._iterator(coll);
  if (cljs.core.truth_(iter.hasNext())) {
    var init = iter.next();
    var acc = init;
    while (true) {
      if (iter.hasNext()) {
        var nacc = function() {
          var G__2452 = acc;
          var G__2453 = iter.next();
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2452, G__2453) : f.call(null, G__2452, G__2453);
        }();
        if (cljs.core.reduced_QMARK_(nacc)) {
          return cljs.core.deref(nacc);
        } else {
          var G__2457 = nacc;
          acc = G__2457;
          continue;
        }
      } else {
        return acc;
      }
      break;
    }
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, init) {
  var iter = cljs.core._iterator(coll);
  var acc = init;
  while (true) {
    if (iter.hasNext()) {
      var nacc = function() {
        var G__2454 = acc;
        var G__2455 = iter.next();
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2454, G__2455) : f.call(null, G__2454, G__2455);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__2458 = nacc;
        acc = G__2458;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.iter_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var G__2460 = arguments.length;
  switch(G__2460) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var G__2465 = arguments.length;
  switch(G__2465) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__2467 = null;
    var G__2467__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__2467__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__2467__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__2467 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__2467__0.call(this);
        case 1:
          return G__2467__1.call(this, x);
        case 2:
          return G__2467__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__2467.cljs$core$IFn$_invoke$arity$0 = G__2467__0;
    G__2467.cljs$core$IFn$_invoke$arity$1 = G__2467__1;
    G__2467.cljs$core$IFn$_invoke$arity$2 = G__2467__2;
    return G__2467;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var G__2469 = arguments.length;
  switch(G__2469) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var G__2475 = arguments.length;
  switch(G__2475) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2477 = arguments.length;
      var i__4737__auto___2478 = 0;
      while (true) {
        if (i__4737__auto___2478 < len__4736__auto___2477) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2478]);
          var G__2479 = i__4737__auto___2478 + 1;
          i__4737__auto___2478 = G__2479;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq2472) {
  var G__2473 = cljs.core.first(seq2472);
  var seq2472__$1 = cljs.core.next(seq2472);
  var G__2474 = cljs.core.first(seq2472__$1);
  var seq2472__$2 = cljs.core.next(seq2472__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2473, G__2474, seq2472__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var G__2484 = arguments.length;
  switch(G__2484) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2486 = arguments.length;
      var i__4737__auto___2487 = 0;
      while (true) {
        if (i__4737__auto___2487 < len__4736__auto___2486) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2487]);
          var G__2488 = i__4737__auto___2487 + 1;
          i__4737__auto___2487 = G__2488;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq2481) {
  var G__2482 = cljs.core.first(seq2481);
  var seq2481__$1 = cljs.core.next(seq2481);
  var G__2483 = cljs.core.first(seq2481__$1);
  var seq2481__$2 = cljs.core.next(seq2481__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2482, G__2483, seq2481__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var G__2493 = arguments.length;
  switch(G__2493) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2495 = arguments.length;
      var i__4737__auto___2496 = 0;
      while (true) {
        if (i__4737__auto___2496 < len__4736__auto___2495) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2496]);
          var G__2497 = i__4737__auto___2496 + 1;
          i__4737__auto___2496 = G__2497;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq2490) {
  var G__2491 = cljs.core.first(seq2490);
  var seq2490__$1 = cljs.core.next(seq2490);
  var G__2492 = cljs.core.first(seq2490__$1);
  var seq2490__$2 = cljs.core.next(seq2490__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2491, G__2492, seq2490__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var G__2502 = arguments.length;
  switch(G__2502) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2504 = arguments.length;
      var i__4737__auto___2505 = 0;
      while (true) {
        if (i__4737__auto___2505 < len__4736__auto___2504) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2505]);
          var G__2506 = i__4737__auto___2505 + 1;
          i__4737__auto___2505 = G__2506;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq2499) {
  var G__2500 = cljs.core.first(seq2499);
  var seq2499__$1 = cljs.core.next(seq2499);
  var G__2501 = cljs.core.first(seq2499__$1);
  var seq2499__$2 = cljs.core.next(seq2499__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2500, G__2501, seq2499__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var G__2511 = arguments.length;
  switch(G__2511) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2513 = arguments.length;
      var i__4737__auto___2514 = 0;
      while (true) {
        if (i__4737__auto___2514 < len__4736__auto___2513) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2514]);
          var G__2515 = i__4737__auto___2514 + 1;
          i__4737__auto___2514 = G__2515;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__2516 = y;
        var G__2517 = cljs.core.first(more);
        var G__2518 = cljs.core.next(more);
        x = G__2516;
        y = G__2517;
        more = G__2518;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq2508) {
  var G__2509 = cljs.core.first(seq2508);
  var seq2508__$1 = cljs.core.next(seq2508);
  var G__2510 = cljs.core.first(seq2508__$1);
  var seq2508__$2 = cljs.core.next(seq2508__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2509, G__2510, seq2508__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var G__2523 = arguments.length;
  switch(G__2523) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2525 = arguments.length;
      var i__4737__auto___2526 = 0;
      while (true) {
        if (i__4737__auto___2526 < len__4736__auto___2525) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2526]);
          var G__2527 = i__4737__auto___2526 + 1;
          i__4737__auto___2526 = G__2527;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__2528 = y;
        var G__2529 = cljs.core.first(more);
        var G__2530 = cljs.core.next(more);
        x = G__2528;
        y = G__2529;
        more = G__2530;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq2520) {
  var G__2521 = cljs.core.first(seq2520);
  var seq2520__$1 = cljs.core.next(seq2520);
  var G__2522 = cljs.core.first(seq2520__$1);
  var seq2520__$2 = cljs.core.next(seq2520__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2521, G__2522, seq2520__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var G__2535 = arguments.length;
  switch(G__2535) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2537 = arguments.length;
      var i__4737__auto___2538 = 0;
      while (true) {
        if (i__4737__auto___2538 < len__4736__auto___2537) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2538]);
          var G__2539 = i__4737__auto___2538 + 1;
          i__4737__auto___2538 = G__2539;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__2540 = y;
        var G__2541 = cljs.core.first(more);
        var G__2542 = cljs.core.next(more);
        x = G__2540;
        y = G__2541;
        more = G__2542;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq2532) {
  var G__2533 = cljs.core.first(seq2532);
  var seq2532__$1 = cljs.core.next(seq2532);
  var G__2534 = cljs.core.first(seq2532__$1);
  var seq2532__$2 = cljs.core.next(seq2532__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2533, G__2534, seq2532__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var G__2547 = arguments.length;
  switch(G__2547) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2549 = arguments.length;
      var i__4737__auto___2550 = 0;
      while (true) {
        if (i__4737__auto___2550 < len__4736__auto___2549) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2550]);
          var G__2551 = i__4737__auto___2550 + 1;
          i__4737__auto___2550 = G__2551;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__2552 = y;
        var G__2553 = cljs.core.first(more);
        var G__2554 = cljs.core.next(more);
        x = G__2552;
        y = G__2553;
        more = G__2554;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq2544) {
  var G__2545 = cljs.core.first(seq2544);
  var seq2544__$1 = cljs.core.next(seq2544);
  var G__2546 = cljs.core.first(seq2544__$1);
  var seq2544__$2 = cljs.core.next(seq2544__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2545, G__2546, seq2544__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var G__2559 = arguments.length;
  switch(G__2559) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2561 = arguments.length;
      var i__4737__auto___2562 = 0;
      while (true) {
        if (i__4737__auto___2562 < len__4736__auto___2561) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2562]);
          var G__2563 = i__4737__auto___2562 + 1;
          i__4737__auto___2562 = G__2563;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4214__auto__ = x;
  var y__4215__auto__ = y;
  return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4214__auto__ = x;
    var y__4215__auto__ = y;
    return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq2556) {
  var G__2557 = cljs.core.first(seq2556);
  var seq2556__$1 = cljs.core.next(seq2556);
  var G__2558 = cljs.core.first(seq2556__$1);
  var seq2556__$2 = cljs.core.next(seq2556__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2557, G__2558, seq2556__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var G__2568 = arguments.length;
  switch(G__2568) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2570 = arguments.length;
      var i__4737__auto___2571 = 0;
      while (true) {
        if (i__4737__auto___2571 < len__4736__auto___2570) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2571]);
          var G__2572 = i__4737__auto___2571 + 1;
          i__4737__auto___2571 = G__2572;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4217__auto__ = x;
  var y__4218__auto__ = y;
  return x__4217__auto__ < y__4218__auto__ ? x__4217__auto__ : y__4218__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4217__auto__ = x;
    var y__4218__auto__ = y;
    return x__4217__auto__ < y__4218__auto__ ? x__4217__auto__ : y__4218__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq2565) {
  var G__2566 = cljs.core.first(seq2565);
  var seq2565__$1 = cljs.core.next(seq2565);
  var G__2567 = cljs.core.first(seq2565__$1);
  var seq2565__$2 = cljs.core.next(seq2565__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2566, G__2567, seq2565__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var G__2577 = arguments.length;
  switch(G__2577) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2579 = arguments.length;
      var i__4737__auto___2580 = 0;
      while (true) {
        if (i__4737__auto___2580 < len__4736__auto___2579) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2580]);
          var G__2581 = i__4737__auto___2580 + 1;
          i__4737__auto___2580 = G__2581;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq2574) {
  var G__2575 = cljs.core.first(seq2574);
  var seq2574__$1 = cljs.core.next(seq2574);
  var G__2576 = cljs.core.first(seq2574__$1);
  var seq2574__$2 = cljs.core.next(seq2574__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2575, G__2576, seq2574__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var G__2586 = arguments.length;
  switch(G__2586) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2588 = arguments.length;
      var i__4737__auto___2589 = 0;
      while (true) {
        if (i__4737__auto___2589 < len__4736__auto___2588) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2589]);
          var G__2590 = i__4737__auto___2589 + 1;
          i__4737__auto___2589 = G__2590;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq2583) {
  var G__2584 = cljs.core.first(seq2583);
  var seq2583__$1 = cljs.core.next(seq2583);
  var G__2585 = cljs.core.first(seq2583__$1);
  var seq2583__$2 = cljs.core.next(seq2583__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2584, G__2585, seq2583__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var G__2595 = arguments.length;
  switch(G__2595) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2597 = arguments.length;
      var i__4737__auto___2598 = 0;
      while (true) {
        if (i__4737__auto___2598 < len__4736__auto___2597) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2598]);
          var G__2599 = i__4737__auto___2598 + 1;
          i__4737__auto___2598 = G__2599;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq2592) {
  var G__2593 = cljs.core.first(seq2592);
  var seq2592__$1 = cljs.core.next(seq2592);
  var G__2594 = cljs.core.first(seq2592__$1);
  var seq2592__$2 = cljs.core.next(seq2592__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2593, G__2594, seq2592__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var G__2604 = arguments.length;
  switch(G__2604) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2606 = arguments.length;
      var i__4737__auto___2607 = 0;
      while (true) {
        if (i__4737__auto___2607 < len__4736__auto___2606) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2607]);
          var G__2608 = i__4737__auto___2607 + 1;
          i__4737__auto___2607 = G__2608;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq2601) {
  var G__2602 = cljs.core.first(seq2601);
  var seq2601__$1 = cljs.core.next(seq2601);
  var G__2603 = cljs.core.first(seq2601__$1);
  var seq2601__$2 = cljs.core.next(seq2601__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2602, G__2603, seq2601__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var G__2613 = arguments.length;
  switch(G__2613) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2615 = arguments.length;
      var i__4737__auto___2616 = 0;
      while (true) {
        if (i__4737__auto___2616 < len__4736__auto___2615) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2616]);
          var G__2617 = i__4737__auto___2616 + 1;
          i__4737__auto___2616 = G__2617;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq2610) {
  var G__2611 = cljs.core.first(seq2610);
  var seq2610__$1 = cljs.core.next(seq2610);
  var G__2612 = cljs.core.first(seq2610__$1);
  var seq2610__$2 = cljs.core.next(seq2610__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2611, G__2612, seq2610__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod(x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var G__2622 = arguments.length;
  switch(G__2622) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2624 = arguments.length;
      var i__4737__auto___2625 = 0;
      while (true) {
        if (i__4737__auto___2625 < len__4736__auto___2624) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2625]);
          var G__2626 = i__4737__auto___2625 + 1;
          i__4737__auto___2625 = G__2626;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq2619) {
  var G__2620 = cljs.core.first(seq2619);
  var seq2619__$1 = cljs.core.next(seq2619);
  var G__2621 = cljs.core.first(seq2619__$1);
  var seq2619__$2 = cljs.core.next(seq2619__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2620, G__2621, seq2619__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var G__2631 = arguments.length;
  switch(G__2631) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2633 = arguments.length;
      var i__4737__auto___2634 = 0;
      while (true) {
        if (i__4737__auto___2634 < len__4736__auto___2633) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2634]);
          var G__2635 = i__4737__auto___2634 + 1;
          i__4737__auto___2634 = G__2635;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq2628) {
  var G__2629 = cljs.core.first(seq2628);
  var seq2628__$1 = cljs.core.next(seq2628);
  var G__2630 = cljs.core.first(seq2628__$1);
  var seq2628__$2 = cljs.core.next(seq2628__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2629, G__2630, seq2628__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var G__2640 = arguments.length;
  switch(G__2640) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2642 = arguments.length;
      var i__4737__auto___2643 = 0;
      while (true) {
        if (i__4737__auto___2643 < len__4736__auto___2642) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2643]);
          var G__2644 = i__4737__auto___2643 + 1;
          i__4737__auto___2643 = G__2644;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq2637) {
  var G__2638 = cljs.core.first(seq2637);
  var seq2637__$1 = cljs.core.next(seq2637);
  var G__2639 = cljs.core.first(seq2637__$1);
  var seq2637__$2 = cljs.core.next(seq2637__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2638, G__2639, seq2637__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var G__2649 = arguments.length;
  switch(G__2649) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2651 = arguments.length;
      var i__4737__auto___2652 = 0;
      while (true) {
        if (i__4737__auto___2652 < len__4736__auto___2651) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2652]);
          var G__2653 = i__4737__auto___2652 + 1;
          i__4737__auto___2652 = G__2653;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq2646) {
  var G__2647 = cljs.core.first(seq2646);
  var seq2646__$1 = cljs.core.next(seq2646);
  var G__2648 = cljs.core.first(seq2646__$1);
  var seq2646__$2 = cljs.core.next(seq2646__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2647, G__2648, seq2646__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var G__2658 = arguments.length;
  switch(G__2658) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2660 = arguments.length;
      var i__4737__auto___2661 = 0;
      while (true) {
        if (i__4737__auto___2661 < len__4736__auto___2660) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2661]);
          var G__2662 = i__4737__auto___2661 + 1;
          i__4737__auto___2661 = G__2662;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq2655) {
  var G__2656 = cljs.core.first(seq2655);
  var seq2655__$1 = cljs.core.next(seq2655);
  var G__2657 = cljs.core.first(seq2655__$1);
  var seq2655__$2 = cljs.core.next(seq2655__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2656, G__2657, seq2655__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var G__2667 = arguments.length;
  switch(G__2667) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2669 = arguments.length;
      var i__4737__auto___2670 = 0;
      while (true) {
        if (i__4737__auto___2670 < len__4736__auto___2669) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2670]);
          var G__2671 = i__4737__auto___2670 + 1;
          i__4737__auto___2670 = G__2671;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq2664) {
  var G__2665 = cljs.core.first(seq2664);
  var seq2664__$1 = cljs.core.next(seq2664);
  var G__2666 = cljs.core.first(seq2664__$1);
  var seq2664__$2 = cljs.core.next(seq2664__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2665, G__2666, seq2664__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var G__2676 = arguments.length;
  switch(G__2676) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2678 = arguments.length;
      var i__4737__auto___2679 = 0;
      while (true) {
        if (i__4737__auto___2679 < len__4736__auto___2678) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2679]);
          var G__2680 = i__4737__auto___2679 + 1;
          i__4737__auto___2679 = G__2680;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__2681 = y;
        var G__2682 = cljs.core.first(more);
        var G__2683 = cljs.core.next(more);
        x = G__2681;
        y = G__2682;
        more = G__2683;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq2673) {
  var G__2674 = cljs.core.first(seq2673);
  var seq2673__$1 = cljs.core.next(seq2673);
  var G__2675 = cljs.core.first(seq2673__$1);
  var seq2673__$2 = cljs.core.next(seq2673__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2674, G__2675, seq2673__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__2684 = n__$1 - 1;
      var G__2685 = cljs.core.next(xs);
      n__$1 = G__2684;
      xs = G__2685;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var G__2689 = arguments.length;
  switch(G__2689) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2691 = arguments.length;
      var i__4737__auto___2692 = 0;
      while (true) {
        if (i__4737__auto___2692 < len__4736__auto___2691) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2692]);
          var G__2693 = i__4737__auto___2692 + 1;
          i__4737__auto___2692 = G__2693;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4758__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__2694 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
      var G__2695 = cljs.core.next(more);
      sb = G__2694;
      more = G__2695;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq2687) {
  var G__2688 = cljs.core.first(seq2687);
  var seq2687__$1 = cljs.core.next(seq2687);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2688, seq2687__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var G__2697 = arguments.length;
  switch(G__2697) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__2699 = cljs.core.next(xs);
            var G__2700 = cljs.core.next(ys);
            xs = G__2699;
            ys = G__2700;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__2701 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__2702 = cljs.core.next(s);
        res = G__2701;
        s = G__2702;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__2703 = (h + (cljs.core.hash(cljs.core.key(e)) ^ cljs.core.hash(cljs.core.val(e)))) % 4503599627370496;
      var G__2704 = cljs.core.next(s);
      h = G__2703;
      s = G__2704;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__2705 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__2706 = cljs.core.next(s__$1);
      h = G__2705;
      s__$1 = G__2706;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__2707_2723 = cljs.core.seq(fn_map);
  var chunk__2708_2724 = null;
  var count__2709_2725 = 0;
  var i__2710_2726 = 0;
  while (true) {
    if (i__2710_2726 < count__2709_2725) {
      var vec__2717_2727 = chunk__2708_2724.cljs$core$IIndexed$_nth$arity$2(null, i__2710_2726);
      var key_name_2728 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2717_2727, 0, null);
      var f_2729 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2717_2727, 1, null);
      var str_name_2730 = cljs.core.name(key_name_2728);
      goog.object.set(obj, str_name_2730, f_2729);
      var G__2731 = seq__2707_2723;
      var G__2732 = chunk__2708_2724;
      var G__2733 = count__2709_2725;
      var G__2734 = i__2710_2726 + 1;
      seq__2707_2723 = G__2731;
      chunk__2708_2724 = G__2732;
      count__2709_2725 = G__2733;
      i__2710_2726 = G__2734;
      continue;
    } else {
      var temp__5720__auto___2735 = cljs.core.seq(seq__2707_2723);
      if (temp__5720__auto___2735) {
        var seq__2707_2736__$1 = temp__5720__auto___2735;
        if (cljs.core.chunked_seq_QMARK_(seq__2707_2736__$1)) {
          var c__4556__auto___2737 = cljs.core.chunk_first(seq__2707_2736__$1);
          var G__2738 = cljs.core.chunk_rest(seq__2707_2736__$1);
          var G__2739 = c__4556__auto___2737;
          var G__2740 = cljs.core.count(c__4556__auto___2737);
          var G__2741 = 0;
          seq__2707_2723 = G__2738;
          chunk__2708_2724 = G__2739;
          count__2709_2725 = G__2740;
          i__2710_2726 = G__2741;
          continue;
        } else {
          var vec__2720_2742 = cljs.core.first(seq__2707_2736__$1);
          var key_name_2743 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2720_2742, 0, null);
          var f_2744 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2720_2742, 1, null);
          var str_name_2745 = cljs.core.name(key_name_2743);
          goog.object.set(obj, str_name_2745, f_2744);
          var G__2746 = cljs.core.next(seq__2707_2736__$1);
          var G__2747 = null;
          var G__2748 = 0;
          var G__2749 = 0;
          seq__2707_2723 = G__2746;
          chunk__2708_2724 = G__2747;
          count__2709_2725 = G__2748;
          i__2710_2726 = G__2749;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__2750 = null;
  var G__2750__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2750__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2750 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2750__1.call(this, x);
      case 2:
        return G__2750__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2750.cljs$core$IFn$_invoke$arity$1 = G__2750__1;
  G__2750.cljs$core$IFn$_invoke$arity$2 = G__2750__2;
  return G__2750;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__2751 = null;
  var G__2751__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__2751__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2751 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2751__1.call(this, x);
      case 2:
        return G__2751__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2751.cljs$core$IFn$_invoke$arity$1 = G__2751__1;
  G__2751.cljs$core$IFn$_invoke$arity$2 = G__2751__2;
  return G__2751;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.List(new_meta, self__.first, self__.rest, self__.count, self__.__hash);
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
goog.object.set(cljs.core.List.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__2753 = null;
  var G__2753__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2753__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2753 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2753__1.call(this, x);
      case 2:
        return G__2753__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2753.cljs$core$IFn$_invoke$arity$1 = G__2753__1;
  G__2753.cljs$core$IFn$_invoke$arity$2 = G__2753__2;
  return G__2753;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__2754 = null;
  var G__2754__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2754__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2754 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2754__1.call(this, x);
      case 2:
        return G__2754__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2754.cljs$core$IFn$_invoke$arity$1 = G__2754__1;
  G__2754.cljs$core$IFn$_invoke$arity$2 = G__2754__2;
  return G__2754;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.EmptyList(new_meta);
  }
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
goog.object.set(cljs.core.EmptyList.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    var or__4126__auto__ = cljs.core.rseq(coll);
    if (or__4126__auto__) {
      return or__4126__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___2757 = arguments.length;
  var i__4737__auto___2758 = 0;
  while (true) {
    if (i__4737__auto___2758 < len__4736__auto___2757) {
      args__4742__auto__.push(arguments[i__4737__auto___2758]);
      var G__2759 = i__4737__auto___2758 + 1;
      i__4737__auto___2758 = G__2759;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(cljs.core._first(xs__$1));
        var G__2760 = cljs.core._next(xs__$1);
        xs__$1 = G__2760;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__2761 = i - 1;
      var G__2762 = cljs.core._conj(r, arr[i - 1]);
      i = G__2761;
      r = G__2762;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq2756) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq2756));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__2763 = null;
  var G__2763__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2763__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2763 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2763__1.call(this, x);
      case 2:
        return G__2763__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2763.cljs$core$IFn$_invoke$arity$1 = G__2763__1;
  G__2763.cljs$core$IFn$_invoke$arity$2 = G__2763__2;
  return G__2763;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__2764 = null;
  var G__2764__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2764__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2764 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2764__1.call(this, x);
      case 2:
        return G__2764__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2764.cljs$core$IFn$_invoke$arity$1 = G__2764__1;
  G__2764.cljs$core$IFn$_invoke$arity$2 = G__2764__2;
  return G__2764;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cons(new_meta, self__.first, self__.rest, self__.__hash);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
goog.object.set(cljs.core.Cons.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (coll == null) {
    return new cljs.core.List(null, x, null, 1, null);
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return new cljs.core.Cons(null, x, coll, null);
    } else {
      return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
    }
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(cljs.core.not(a.ns) ? b.ns : false)) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__2767 = null;
  var G__2767__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__2767__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__2767 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__2767__2.call(this, self__, coll);
      case 3:
        return G__2767__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2767.cljs$core$IFn$_invoke$arity$2 = G__2767__2;
  G__2767.cljs$core$IFn$_invoke$arity$3 = G__2767__3;
  return G__2767;
}();
cljs.core.Keyword.prototype.apply = function(self__, args2766) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2766)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4238__auto__ = self__._hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error(["Doesn't support namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
  }
};
cljs.core.ident_QMARK_ = function cljs$core$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function cljs$core$simple_ident_QMARK_(x) {
  return cljs.core.ident_QMARK_(x) && cljs.core.namespace(x) == null;
};
cljs.core.qualified_ident_QMARK_ = function cljs$core$qualified_ident_QMARK_(x) {
  return cljs.core.boolean$(cljs.core.ident_QMARK_(x) ? function() {
    var and__4115__auto__ = cljs.core.namespace(x);
    if (cljs.core.truth_(and__4115__auto__)) {
      return true;
    } else {
      return and__4115__auto__;
    }
  }() : false);
};
cljs.core.simple_symbol_QMARK_ = function cljs$core$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace(x) == null;
};
cljs.core.qualified_symbol_QMARK_ = function cljs$core$qualified_symbol_QMARK_(x) {
  return cljs.core.boolean$(x instanceof cljs.core.Symbol ? function() {
    var and__4115__auto__ = cljs.core.namespace(x);
    if (cljs.core.truth_(and__4115__auto__)) {
      return true;
    } else {
      return and__4115__auto__;
    }
  }() : false);
};
cljs.core.simple_keyword_QMARK_ = function cljs$core$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace(x) == null;
};
cljs.core.qualified_keyword_QMARK_ = function cljs$core$qualified_keyword_QMARK_(x) {
  return cljs.core.boolean$(x instanceof cljs.core.Keyword ? function() {
    var and__4115__auto__ = cljs.core.namespace(x);
    if (cljs.core.truth_(and__4115__auto__)) {
      return true;
    } else {
      return and__4115__auto__;
    }
  }() : false);
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var G__2770 = arguments.length;
  switch(G__2770) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name(name), name.str, null);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("/", name)) {
        return new cljs.core.Keyword(null, name, name, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var ns__$1 = ns instanceof cljs.core.Keyword ? cljs.core.name(ns) : ns instanceof cljs.core.Symbol ? cljs.core.name(ns) : ns;
  var name__$1 = name instanceof cljs.core.Keyword ? cljs.core.name(name) : name instanceof cljs.core.Symbol ? cljs.core.name(name) : name;
  return new cljs.core.Keyword(ns__$1, name__$1, [cljs.core.truth_(ns__$1) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1), "/"].join("") : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$1)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__2772 = null;
  var G__2772__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2772__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2772 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2772__1.call(this, x);
      case 2:
        return G__2772__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2772.cljs$core$IFn$_invoke$arity$1 = G__2772__1;
  G__2772.cljs$core$IFn$_invoke$arity$2 = G__2772__2;
  return G__2772;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__2773 = null;
  var G__2773__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2773__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2773 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2773__1.call(this, x);
      case 2:
        return G__2773__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2773.cljs$core$IFn$_invoke$arity$1 = G__2773__1;
  G__2773.cljs$core$IFn$_invoke$arity$2 = G__2773__2;
  return G__2773;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__2774 = ls.sval();
        ls = G__2774;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.LazySeq(new_meta, function() {
      return coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
    }, null, self__.__hash);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
goog.object.set(cljs.core.LazySeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var G__2776 = arguments.length;
  switch(G__2776) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__2778 = null;
  var G__2778__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2778__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2778 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2778__1.call(this, x);
      case 2:
        return G__2778__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2778.cljs$core$IFn$_invoke$arity$1 = G__2778__1;
  G__2778.cljs$core$IFn$_invoke$arity$2 = G__2778__2;
  return G__2778;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__2779 = null;
  var G__2779__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2779__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2779 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2779__1.call(this, x);
      case 2:
        return G__2779__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2779.cljs$core$IFn$_invoke$arity$1 = G__2779__1;
  G__2779.cljs$core$IFn$_invoke$arity$2 = G__2779__2;
  return G__2779;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return null;
    } else {
      return cljs.core._seq(self__.more);
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ChunkedCons(self__.chunk, self__.more, new_meta, self__.__hash);
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
goog.object.set(cljs.core.ChunkedCons.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$IChunkedNext$ ? true : false : false) {
    return s.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(coll) {
  var ary = [];
  var s = cljs.core.seq(coll);
  while (true) {
    if (!(s == null)) {
      ary.push(cljs.core.first(s));
      var G__2781 = cljs.core.next(s);
      s = G__2781;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_2782 = 0;
  var xs_2783 = cljs.core.seq(coll);
  while (true) {
    if (xs_2783 == null) {
    } else {
      ret[i_2782] = cljs.core.to_array(cljs.core.first(xs_2783));
      var G__2784 = i_2782 + 1;
      var G__2785 = cljs.core.next(xs_2783);
      i_2782 = G__2784;
      xs_2783 = G__2785;
      continue;
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var G__2787 = arguments.length;
  switch(G__2787) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2789 = i + 1;
        var G__2790 = cljs.core.next(s__$1);
        i = G__2789;
        s__$1 = G__2790;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4613__auto___2791 = size;
    var i_2792 = 0;
    while (true) {
      if (i_2792 < n__4613__auto___2791) {
        a[i_2792] = init_val_or_seq;
        var G__2793 = i_2792 + 1;
        i_2792 = G__2793;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var G__2795 = arguments.length;
  switch(G__2795) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2797 = i + 1;
        var G__2798 = cljs.core.next(s__$1);
        i = G__2797;
        s__$1 = G__2798;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4613__auto___2799 = size;
    var i_2800 = 0;
    while (true) {
      if (i_2800 < n__4613__auto___2799) {
        a[i_2800] = init_val_or_seq;
        var G__2801 = i_2800 + 1;
        i_2800 = G__2801;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var G__2803 = arguments.length;
  switch(G__2803) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2805 = i + 1;
        var G__2806 = cljs.core.next(s__$1);
        i = G__2805;
        s__$1 = G__2806;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4613__auto___2807 = size;
    var i_2808 = 0;
    while (true) {
      if (i_2808 < n__4613__auto___2807) {
        a[i_2808] = init_val_or_seq;
        var G__2809 = i_2808 + 1;
        i_2808 = G__2809;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var G__2811 = arguments.length;
  switch(G__2811) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2813 = i + 1;
        var G__2814 = cljs.core.next(s__$1);
        i = G__2813;
        s__$1 = G__2814;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4613__auto___2815 = size;
    var i_2816 = 0;
    while (true) {
      if (i_2816 < n__4613__auto___2815) {
        a[i_2816] = init_val_or_seq;
        var G__2817 = i_2816 + 1;
        i_2816 = G__2817;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(n, coll) {
  if (cljs.core.counted_QMARK_(coll)) {
    return cljs.core.count(coll);
  } else {
    var i = 0;
    var s = cljs.core.seq(coll);
    while (true) {
      if (!(s == null) && i < n) {
        var G__2818 = i + 1;
        var G__2819 = cljs.core.next(s);
        i = G__2818;
        s = G__2819;
        continue;
      } else {
        return i;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    var n = cljs.core.next(arglist);
    if (n == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(n) : cljs.core.spread.call(null, n));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var G__2824 = arguments.length;
  switch(G__2824) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2826 = arguments.length;
      var i__4737__auto___2827 = 0;
      while (true) {
        if (i__4737__auto___2827 < len__4736__auto___2826) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2827]);
          var G__2828 = i__4737__auto___2827 + 1;
          i__4737__auto___2827 = G__2828;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq2821) {
  var G__2822 = cljs.core.first(seq2821);
  var seq2821__$1 = cljs.core.next(seq2821);
  var G__2823 = cljs.core.first(seq2821__$1);
  var seq2821__$2 = cljs.core.next(seq2821__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2822, G__2823, seq2821__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var G__2835 = arguments.length;
  switch(G__2835) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2837 = arguments.length;
      var i__4737__auto___2838 = 0;
      while (true) {
        if (i__4737__auto___2838 < len__4736__auto___2837) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2838]);
          var G__2839 = i__4737__auto___2838 + 1;
          i__4737__auto___2838 = G__2839;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4758__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq2830) {
  var G__2831 = cljs.core.first(seq2830);
  var seq2830__$1 = cljs.core.next(seq2830);
  var G__2832 = cljs.core.first(seq2830__$1);
  var seq2830__$2 = cljs.core.next(seq2830__$1);
  var G__2833 = cljs.core.first(seq2830__$2);
  var seq2830__$3 = cljs.core.next(seq2830__$2);
  var G__2834 = cljs.core.first(seq2830__$3);
  var seq2830__$4 = cljs.core.next(seq2830__$3);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2831, G__2832, G__2833, G__2834, seq2830__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var G__2844 = arguments.length;
  switch(G__2844) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2846 = arguments.length;
      var i__4737__auto___2847 = 0;
      while (true) {
        if (i__4737__auto___2847 < len__4736__auto___2846) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2847]);
          var G__2848 = i__4737__auto___2847 + 1;
          i__4737__auto___2847 = G__2848;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__2849 = ntcoll;
      var G__2850 = cljs.core.first(vals);
      var G__2851 = cljs.core.next(vals);
      tcoll = G__2849;
      val = G__2850;
      vals = G__2851;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq2841) {
  var G__2842 = cljs.core.first(seq2841);
  var seq2841__$1 = cljs.core.next(seq2841);
  var G__2843 = cljs.core.first(seq2841__$1);
  var seq2841__$2 = cljs.core.next(seq2841__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2842, G__2843, seq2841__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var G__2857 = arguments.length;
  switch(G__2857) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2859 = arguments.length;
      var i__4737__auto___2860 = 0;
      while (true) {
        if (i__4737__auto___2860 < len__4736__auto___2859) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2860]);
          var G__2861 = i__4737__auto___2860 + 1;
          i__4737__auto___2860 = G__2861;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__2862 = ntcoll;
      var G__2863 = cljs.core.first(kvs);
      var G__2864 = cljs.core.second(kvs);
      var G__2865 = cljs.core.nnext(kvs);
      tcoll = G__2862;
      key = G__2863;
      val = G__2864;
      kvs = G__2865;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq2853) {
  var G__2854 = cljs.core.first(seq2853);
  var seq2853__$1 = cljs.core.next(seq2853);
  var G__2855 = cljs.core.first(seq2853__$1);
  var seq2853__$2 = cljs.core.next(seq2853__$1);
  var G__2856 = cljs.core.first(seq2853__$2);
  var seq2853__$3 = cljs.core.next(seq2853__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2854, G__2855, G__2856, seq2853__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var G__2870 = arguments.length;
  switch(G__2870) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2872 = arguments.length;
      var i__4737__auto___2873 = 0;
      while (true) {
        if (i__4737__auto___2873 < len__4736__auto___2872) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2873]);
          var G__2874 = i__4737__auto___2873 + 1;
          i__4737__auto___2873 = G__2874;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__2875 = ntcoll;
      var G__2876 = cljs.core.first(ks);
      var G__2877 = cljs.core.next(ks);
      tcoll = G__2875;
      key = G__2876;
      ks = G__2877;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq2867) {
  var G__2868 = cljs.core.first(seq2867);
  var seq2867__$1 = cljs.core.next(seq2867);
  var G__2869 = cljs.core.first(seq2867__$1);
  var seq2867__$2 = cljs.core.next(seq2867__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2868, G__2869, seq2867__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var G__2882 = arguments.length;
  switch(G__2882) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2884 = arguments.length;
      var i__4737__auto___2885 = 0;
      while (true) {
        if (i__4737__auto___2885 < len__4736__auto___2884) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2885]);
          var G__2886 = i__4737__auto___2885 + 1;
          i__4737__auto___2885 = G__2886;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__2887 = ntcoll;
      var G__2888 = cljs.core.first(vals);
      var G__2889 = cljs.core.next(vals);
      tcoll = G__2887;
      val = G__2888;
      vals = G__2889;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq2879) {
  var G__2880 = cljs.core.first(seq2879);
  var seq2879__$1 = cljs.core.next(seq2879);
  var G__2881 = cljs.core.first(seq2879__$1);
  var seq2879__$2 = cljs.core.next(seq2879__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2880, G__2881, seq2879__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a254 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a254) : f.call(null, a254);
    } else {
      var b255 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a254, b255) : f.call(null, a254, b255);
      } else {
        var c256 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a254, b255, c256) : f.call(null, a254, b255, c256);
        } else {
          var d257 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a254, b255, c256, d257) : f.call(null, a254, b255, c256, d257);
          } else {
            var e258 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a254, b255, c256, d257, e258) : f.call(null, a254, b255, c256, d257, e258);
            } else {
              var f259 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a254, b255, c256, d257, e258, f259) : f.call(null, a254, b255, c256, d257, e258, f259);
              } else {
                var g260 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a254, b255, c256, d257, e258, f259, g260) : f.call(null, a254, b255, c256, d257, e258, f259, g260);
                } else {
                  var h261 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a254, b255, c256, d257, e258, f259, g260, h261) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261);
                  } else {
                    var i262 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a254, b255, c256, d257, e258, f259, g260, h261, i262) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262);
                    } else {
                      var j263 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263);
                      } else {
                        var k264 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264);
                        } else {
                          var l265 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265);
                          } else {
                            var m266 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266);
                            } else {
                              var n267 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267);
                              } else {
                                var o268 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268);
                                } else {
                                  var p269 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269);
                                  } else {
                                    var q270 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270);
                                    } else {
                                      var r271 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271);
                                      } else {
                                        var s272 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272);
                                        } else {
                                          var t273 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272, t273) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272, t273);
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.next_STAR_ = function cljs$core$next_STAR_(coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
    return coll.cljs$core$INext$_next$arity$1(null);
  } else {
    return cljs.core.seq(cljs.core.rest(coll));
  }
};
cljs.core.apply_to_simple = function cljs$core$apply_to_simple(var_args) {
  var G__2892 = arguments.length;
  switch(G__2892) {
    case 2:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$0) {
      return f.cljs$core$IFn$_invoke$arity$0();
    } else {
      return f.call(f);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 = function(f, a0, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$1) {
      return f.cljs$core$IFn$_invoke$arity$1(a0);
    } else {
      return f.call(f, a0);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, a0, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 = function(f, a0, a1, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$2) {
      return f.cljs$core$IFn$_invoke$arity$2(a0, a1);
    } else {
      return f.call(f, a0, a1);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, a0, a1, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 = function(f, a0, a1, a2, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$3) {
      return f.cljs$core$IFn$_invoke$arity$3(a0, a1, a2);
    } else {
      return f.call(f, a0, a1, a2);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a0, a1, a2, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 = function(f, a0, a1, a2, a3, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$4) {
      return f.cljs$core$IFn$_invoke$arity$4(a0, a1, a2, a3);
    } else {
      return f.call(f, a0, a1, a2, a3);
    }
  } else {
    var a4 = cljs.core._first(args);
    var next_4 = cljs.core.next(args);
    if (next_4 == null) {
      if (f.cljs$core$IFn$_invoke$arity$5) {
        return f.cljs$core$IFn$_invoke$arity$5(a0, a1, a2, a3, a4);
      } else {
        return f.call(f, a0, a1, a2, a3, a4);
      }
    } else {
      var a5 = cljs.core._first(next_4);
      var next_5 = cljs.core.next(next_4);
      if (next_5 == null) {
        if (f.cljs$core$IFn$_invoke$arity$6) {
          return f.cljs$core$IFn$_invoke$arity$6(a0, a1, a2, a3, a4, a5);
        } else {
          return f.call(f, a0, a1, a2, a3, a4, a5);
        }
      } else {
        var a6 = cljs.core._first(next_5);
        var next_6 = cljs.core.next(next_5);
        if (next_6 == null) {
          if (f.cljs$core$IFn$_invoke$arity$7) {
            return f.cljs$core$IFn$_invoke$arity$7(a0, a1, a2, a3, a4, a5, a6);
          } else {
            return f.call(f, a0, a1, a2, a3, a4, a5, a6);
          }
        } else {
          var a7 = cljs.core._first(next_6);
          var next_7 = cljs.core.next(next_6);
          if (next_7 == null) {
            if (f.cljs$core$IFn$_invoke$arity$8) {
              return f.cljs$core$IFn$_invoke$arity$8(a0, a1, a2, a3, a4, a5, a6, a7);
            } else {
              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7);
            }
          } else {
            var a8 = cljs.core._first(next_7);
            var next_8 = cljs.core.next(next_7);
            if (next_8 == null) {
              if (f.cljs$core$IFn$_invoke$arity$9) {
                return f.cljs$core$IFn$_invoke$arity$9(a0, a1, a2, a3, a4, a5, a6, a7, a8);
              } else {
                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8);
              }
            } else {
              var a9 = cljs.core._first(next_8);
              var next_9 = cljs.core.next(next_8);
              if (next_9 == null) {
                if (f.cljs$core$IFn$_invoke$arity$10) {
                  return f.cljs$core$IFn$_invoke$arity$10(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                } else {
                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                }
              } else {
                var a10 = cljs.core._first(next_9);
                var next_10 = cljs.core.next(next_9);
                if (next_10 == null) {
                  if (f.cljs$core$IFn$_invoke$arity$11) {
                    return f.cljs$core$IFn$_invoke$arity$11(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  } else {
                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  }
                } else {
                  var a11 = cljs.core._first(next_10);
                  var next_11 = cljs.core.next(next_10);
                  if (next_11 == null) {
                    if (f.cljs$core$IFn$_invoke$arity$12) {
                      return f.cljs$core$IFn$_invoke$arity$12(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    } else {
                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    }
                  } else {
                    var a12 = cljs.core._first(next_11);
                    var next_12 = cljs.core.next(next_11);
                    if (next_12 == null) {
                      if (f.cljs$core$IFn$_invoke$arity$13) {
                        return f.cljs$core$IFn$_invoke$arity$13(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      } else {
                        return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      }
                    } else {
                      var a13 = cljs.core._first(next_12);
                      var next_13 = cljs.core.next(next_12);
                      if (next_13 == null) {
                        if (f.cljs$core$IFn$_invoke$arity$14) {
                          return f.cljs$core$IFn$_invoke$arity$14(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        } else {
                          return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        }
                      } else {
                        var a14 = cljs.core._first(next_13);
                        var next_14 = cljs.core.next(next_13);
                        if (next_14 == null) {
                          if (f.cljs$core$IFn$_invoke$arity$15) {
                            return f.cljs$core$IFn$_invoke$arity$15(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          } else {
                            return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          }
                        } else {
                          var a15 = cljs.core._first(next_14);
                          var next_15 = cljs.core.next(next_14);
                          if (next_15 == null) {
                            if (f.cljs$core$IFn$_invoke$arity$16) {
                              return f.cljs$core$IFn$_invoke$arity$16(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            } else {
                              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            }
                          } else {
                            var a16 = cljs.core._first(next_15);
                            var next_16 = cljs.core.next(next_15);
                            if (next_16 == null) {
                              if (f.cljs$core$IFn$_invoke$arity$17) {
                                return f.cljs$core$IFn$_invoke$arity$17(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              } else {
                                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              }
                            } else {
                              var a17 = cljs.core._first(next_16);
                              var next_17 = cljs.core.next(next_16);
                              if (next_17 == null) {
                                if (f.cljs$core$IFn$_invoke$arity$18) {
                                  return f.cljs$core$IFn$_invoke$arity$18(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                } else {
                                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                }
                              } else {
                                var a18 = cljs.core._first(next_17);
                                var next_18 = cljs.core.next(next_17);
                                if (next_18 == null) {
                                  if (f.cljs$core$IFn$_invoke$arity$19) {
                                    return f.cljs$core$IFn$_invoke$arity$19(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  } else {
                                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  }
                                } else {
                                  var a19 = cljs.core._first(next_18);
                                  var next_19 = cljs.core.next(next_18);
                                  if (next_19 == null) {
                                    if (f.cljs$core$IFn$_invoke$arity$20) {
                                      return f.cljs$core$IFn$_invoke$arity$20(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    } else {
                                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    }
                                  } else {
                                    var arr__4661__auto__ = [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19];
                                    var s__4662__auto___2894 = next_19;
                                    while (true) {
                                      if (s__4662__auto___2894) {
                                        arr__4661__auto__.push(cljs.core._first(s__4662__auto___2894));
                                        var G__2895 = cljs.core.next(s__4662__auto___2894);
                                        s__4662__auto___2894 = G__2895;
                                        continue;
                                      } else {
                                      }
                                      break;
                                    }
                                    return f.apply(f, arr__4661__auto__);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply_to_simple.cljs$lang$maxFixedArity = 6;
cljs.core.apply = function cljs$core$apply(var_args) {
  var G__2903 = arguments.length;
  switch(G__2903) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2905 = arguments.length;
      var i__4737__auto___2906 = 0;
      while (true) {
        if (i__4737__auto___2906 < len__4736__auto___2905) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2906]);
          var G__2907 = i__4737__auto___2906 + 1;
          i__4737__auto___2906 = G__2907;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__4758__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (f.cljs$lang$applyTo) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity + 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity, args) + 1;
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, x, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 2 + cljs.core.bounded_count(fixed_arity - 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, x, y, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 3 + cljs.core.bounded_count(fixed_arity - 2, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, x, y, z, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  if (f.cljs$lang$applyTo) {
    var spread_args = cljs.core.spread(args);
    var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, spread_args))));
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 4 + cljs.core.bounded_count(fixed_arity - 3, spread_args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a, b, c, d, cljs.core.spread(args));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq2897) {
  var G__2898 = cljs.core.first(seq2897);
  var seq2897__$1 = cljs.core.next(seq2897);
  var G__2899 = cljs.core.first(seq2897__$1);
  var seq2897__$2 = cljs.core.next(seq2897__$1);
  var G__2900 = cljs.core.first(seq2897__$2);
  var seq2897__$3 = cljs.core.next(seq2897__$2);
  var G__2901 = cljs.core.first(seq2897__$3);
  var seq2897__$4 = cljs.core.next(seq2897__$3);
  var G__2902 = cljs.core.first(seq2897__$4);
  var seq2897__$5 = cljs.core.next(seq2897__$4);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2898, G__2899, G__2900, G__2901, G__2902, seq2897__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var G__2916 = arguments.length;
  switch(G__2916) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2933 = arguments.length;
      var i__4737__auto___2934 = 0;
      while (true) {
        if (i__4737__auto___2934 < len__4736__auto___2933) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2934]);
          var G__2935 = i__4737__auto___2934 + 1;
          i__4737__auto___2934 = G__2935;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4758__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__2917 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2917) : f.call(null, G__2917);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__2918 = cljs.core.meta(obj);
    var G__2919 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2918, G__2919) : f.call(null, G__2918, G__2919);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__2920 = cljs.core.meta(obj);
    var G__2921 = a;
    var G__2922 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2920, G__2921, G__2922) : f.call(null, G__2920, G__2921, G__2922);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__2923 = cljs.core.meta(obj);
    var G__2924 = a;
    var G__2925 = b;
    var G__2926 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2923, G__2924, G__2925, G__2926) : f.call(null, G__2923, G__2924, G__2925, G__2926);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__2927 = cljs.core.meta(obj);
    var G__2928 = a;
    var G__2929 = b;
    var G__2930 = c;
    var G__2931 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2927, G__2928, G__2929, G__2930, G__2931) : f.call(null, G__2927, G__2928, G__2929, G__2930, G__2931);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq2909) {
  var G__2910 = cljs.core.first(seq2909);
  var seq2909__$1 = cljs.core.next(seq2909);
  var G__2911 = cljs.core.first(seq2909__$1);
  var seq2909__$2 = cljs.core.next(seq2909__$1);
  var G__2912 = cljs.core.first(seq2909__$2);
  var seq2909__$3 = cljs.core.next(seq2909__$2);
  var G__2913 = cljs.core.first(seq2909__$3);
  var seq2909__$4 = cljs.core.next(seq2909__$3);
  var G__2914 = cljs.core.first(seq2909__$4);
  var seq2909__$5 = cljs.core.next(seq2909__$4);
  var G__2915 = cljs.core.first(seq2909__$5);
  var seq2909__$6 = cljs.core.next(seq2909__$5);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2910, G__2911, G__2912, G__2913, G__2914, G__2915, seq2909__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var G__2940 = arguments.length;
  switch(G__2940) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2942 = arguments.length;
      var i__4737__auto___2943 = 0;
      while (true) {
        if (i__4737__auto___2943 < len__4736__auto___2942) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2943]);
          var G__2944 = i__4737__auto___2943 + 1;
          i__4737__auto___2943 = G__2944;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq2937) {
  var G__2938 = cljs.core.first(seq2937);
  var seq2937__$1 = cljs.core.next(seq2937);
  var G__2939 = cljs.core.first(seq2937__$1);
  var seq2937__$2 = cljs.core.next(seq2937__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2938, G__2939, seq2937__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.t_cljs$core2945 !== "undefined") {
  } else {
    cljs.core.t_cljs$core2945 = function(meta2946) {
      this.meta2946 = meta2946;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core2945.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2947, meta2946__$1) {
      var self__ = this;
      var _2947__$1 = this;
      return new cljs.core.t_cljs$core2945(meta2946__$1);
    };
    cljs.core.t_cljs$core2945.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2947) {
      var self__ = this;
      var _2947__$1 = this;
      return self__.meta2946;
    };
    cljs.core.t_cljs$core2945.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core2945.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core2945.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core2945.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta2946", "meta2946", -921892137, null)], null);
    };
    cljs.core.t_cljs$core2945.cljs$lang$type = true;
    cljs.core.t_cljs$core2945.cljs$lang$ctorStr = "cljs.core/t_cljs$core2945";
    cljs.core.t_cljs$core2945.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write(writer__4370__auto__, "cljs.core/t_cljs$core2945");
    };
    cljs.core.__GT_t_cljs$core2945 = function cljs$core$nil_iter_$___GT_t_cljs$core2945(meta2946) {
      return new cljs.core.t_cljs$core2945(meta2946);
    };
  }
  return new cljs.core.t_cljs$core2945(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!this$.hasNext()) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (cljs.core.iterable_QMARK_(coll)) {
    return cljs.core._iterator(coll);
  } else {
    if (coll == null) {
      return cljs.core.nil_iter();
    } else {
      if (typeof coll === "string") {
        return cljs.core.string_iter(coll);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          return cljs.core.array_iter(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error(["Cannot create iterator from ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.Many = function(vals) {
  this.vals = vals;
};
cljs.core.Many.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  self__.vals.push(o);
  return this$;
};
cljs.core.Many.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.shift();
};
cljs.core.Many.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.length === 0;
};
cljs.core.Many.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Many: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.vals)].join("");
};
cljs.core.Many.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vals", "vals", -1886377036, null)], null);
};
cljs.core.Many.cljs$lang$type = true;
cljs.core.Many.cljs$lang$ctorStr = "cljs.core/Many";
cljs.core.Many.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Many");
};
cljs.core.__GT_Many = function cljs$core$__GT_Many(vals) {
  return new cljs.core.Many(vals);
};
cljs.core.NONE = {};
cljs.core.Single = function(val) {
  this.val = val;
};
cljs.core.Single.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    self__.val = o;
    return this$;
  } else {
    return new cljs.core.Many([self__.val, o]);
  }
};
cljs.core.Single.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    throw new Error("Removing object from empty buffer");
  } else {
    var ret = self__.val;
    self__.val = cljs.core.NONE;
    return ret;
  }
};
cljs.core.Single.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.val === cljs.core.NONE;
};
cljs.core.Single.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Single: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.val)].join("");
};
cljs.core.Single.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Single.cljs$lang$type = true;
cljs.core.Single.cljs$lang$ctorStr = "cljs.core/Single";
cljs.core.Single.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Single");
};
cljs.core.__GT_Single = function cljs$core$__GT_Single(val) {
  return new cljs.core.Single(val);
};
cljs.core.Empty = function() {
};
cljs.core.Empty.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  return new cljs.core.Single(o);
};
cljs.core.Empty.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  throw new Error("Removing object from empty buffer");
};
cljs.core.Empty.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return true;
};
cljs.core.Empty.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return "Empty";
};
cljs.core.Empty.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.Empty.cljs$lang$type = true;
cljs.core.Empty.cljs$lang$ctorStr = "cljs.core/Empty";
cljs.core.Empty.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Empty");
};
cljs.core.__GT_Empty = function cljs$core$__GT_Empty() {
  return new cljs.core.Empty;
};
cljs.core.EMPTY = new cljs.core.Empty;
cljs.core.MultiIterator = function(iters) {
  this.iters = iters;
};
cljs.core.MultiIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (!iter.hasNext()) {
        return false;
      } else {
        var G__2948 = cljs.core.next(iters__$1);
        iters__$1 = G__2948;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var nexts = [];
  var n__4613__auto___2949 = self__.iters.length;
  var i_2950 = 0;
  while (true) {
    if (i_2950 < n__4613__auto___2949) {
      nexts[i_2950] = self__.iters[i_2950].next();
      var G__2951 = i_2950 + 1;
      i_2950 = G__2951;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(nexts, 0);
};
cljs.core.MultiIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iters", "iters", 719353031, null)], null);
};
cljs.core.MultiIterator.cljs$lang$type = true;
cljs.core.MultiIterator.cljs$lang$ctorStr = "cljs.core/MultiIterator";
cljs.core.MultiIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/MultiIterator");
};
cljs.core.__GT_MultiIterator = function cljs$core$__GT_MultiIterator(iters) {
  return new cljs.core.MultiIterator(iters);
};
cljs.core.chunkIteratorSeq = function cljs$core$chunkIteratorSeq(iter) {
  return new cljs.core.LazySeq(null, function() {
    if (iter.hasNext()) {
      var arr = [];
      var n = 0;
      while (true) {
        if (cljs.core.truth_(function() {
          var and__4115__auto__ = iter.hasNext();
          if (cljs.core.truth_(and__4115__auto__)) {
            return n < 32;
          } else {
            return and__4115__auto__;
          }
        }())) {
          arr[n] = iter.next();
          var G__2952 = n + 1;
          n = G__2952;
          continue;
        } else {
          return cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr, 0, n), cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(iter) : cljs.core.chunkIteratorSeq.call(null, iter));
        }
        break;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.TransformerIterator = function(buffer, _next, completed, xf, sourceIter, multi) {
  this.buffer = buffer;
  this._next = _next;
  this.completed = completed;
  this.xf = xf;
  this.sourceIter = sourceIter;
  this.multi = multi;
};
cljs.core.TransformerIterator.prototype.step = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__._next === cljs.core.NONE)) {
    return true;
  } else {
    while (true) {
      if (self__._next === cljs.core.NONE) {
        if (self__.buffer.isEmpty()) {
          if (self__.completed) {
            return false;
          } else {
            if (self__.sourceIter.hasNext()) {
              var iter = self__.multi ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xf, cljs.core.cons(null, self__.sourceIter.next())) : function() {
                var G__2953 = null;
                var G__2954 = self__.sourceIter.next();
                return self__.xf.cljs$core$IFn$_invoke$arity$2 ? self__.xf.cljs$core$IFn$_invoke$arity$2(G__2953, G__2954) : self__.xf.call(null, G__2953, G__2954);
              }();
              if (cljs.core.reduced_QMARK_(iter)) {
                self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
                self__.completed = true;
              } else {
              }
              continue;
            } else {
              self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
              self__.completed = true;
              continue;
            }
          }
        } else {
          self__._next = self__.buffer.remove();
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  }
};
cljs.core.TransformerIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return this$.step();
};
cljs.core.TransformerIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    var ret = self__._next;
    self__._next = cljs.core.NONE;
    return ret;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.TransformerIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.TransformerIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "completed", "completed", 1154475024, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "xf", "xf", 2042434515, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "sourceIter", "sourceIter", 1068220306, null), new cljs.core.Symbol(null, 
  "multi", "multi", 1450238522, null)], null);
};
cljs.core.TransformerIterator.cljs$lang$type = true;
cljs.core.TransformerIterator.cljs$lang$ctorStr = "cljs.core/TransformerIterator";
cljs.core.TransformerIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/TransformerIterator");
};
cljs.core.__GT_TransformerIterator = function cljs$core$__GT_TransformerIterator(buffer, _next, completed, xf, sourceIter, multi) {
  return new cljs.core.TransformerIterator(buffer, _next, completed, xf, sourceIter, multi);
};
goog.object.set(cljs.core.TransformerIterator.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.transformer_iterator = function cljs$core$transformer_iterator(xform, sourceIter, multi) {
  var iterator = new cljs.core.TransformerIterator(cljs.core.EMPTY, cljs.core.NONE, false, null, sourceIter, multi);
  iterator.xf = function() {
    var G__2955 = function() {
      var G__2956 = null;
      var G__2956__0 = function() {
        return null;
      };
      var G__2956__1 = function(acc) {
        return acc;
      };
      var G__2956__2 = function(acc, o) {
        iterator.buffer = iterator.buffer.add(o);
        return acc;
      };
      G__2956 = function(acc, o) {
        switch(arguments.length) {
          case 0:
            return G__2956__0.call(this);
          case 1:
            return G__2956__1.call(this, acc);
          case 2:
            return G__2956__2.call(this, acc, o);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__2956.cljs$core$IFn$_invoke$arity$0 = G__2956__0;
      G__2956.cljs$core$IFn$_invoke$arity$1 = G__2956__1;
      G__2956.cljs$core$IFn$_invoke$arity$2 = G__2956__2;
      return G__2956;
    }();
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__2955) : xform.call(null, G__2955);
  }();
  return iterator;
};
cljs.core.TransformerIterator.create = function(xform, source) {
  return cljs.core.transformer_iterator(xform, source, false);
};
cljs.core.TransformerIterator.createMulti = function(xform, sources) {
  return cljs.core.transformer_iterator(xform, new cljs.core.MultiIterator(cljs.core.to_array(sources)), true);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var G__2961 = arguments.length;
  switch(G__2961) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___2963 = arguments.length;
      var i__4737__auto___2964 = 0;
      while (true) {
        if (i__4737__auto___2964 < len__4736__auto___2963) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___2964]);
          var G__2965 = i__4737__auto___2964 + 1;
          i__4737__auto___2964 = G__2965;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4126__auto__ = cljs.core.seq(coll);
    if (or__4126__auto__) {
      return or__4126__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  var or__4126__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(xform, cljs.core.iter(coll)));
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  var or__4126__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(xform, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.iter, cljs.core.cons(coll, colls))));
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$lang$applyTo = function(seq2958) {
  var G__2959 = cljs.core.first(seq2958);
  var seq2958__$1 = cljs.core.next(seq2958);
  var G__2960 = cljs.core.first(seq2958__$1);
  var seq2958__$2 = cljs.core.next(seq2958__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2959, G__2960, seq2958__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__2966 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2966) : pred.call(null, G__2966);
      }())) {
        var G__2967 = pred;
        var G__2968 = cljs.core.next(coll);
        pred = G__2967;
        coll = G__2968;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var or__4126__auto__ = function() {
        var G__2970 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2970) : pred.call(null, G__2970);
      }();
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var G__2971 = pred;
        var G__2972 = cljs.core.next(s);
        pred = G__2971;
        coll = G__2972;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error(["Argument must be an integer: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__2973 = null;
    var G__2973__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__2973__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__2973__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__2973__3 = function() {
      var G__2974__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__2974 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__2975__i = 0, G__2975__a = new Array(arguments.length - 2);
          while (G__2975__i < G__2975__a.length) {
            G__2975__a[G__2975__i] = arguments[G__2975__i + 2];
            ++G__2975__i;
          }
          zs = new cljs.core.IndexedSeq(G__2975__a, 0, null);
        }
        return G__2974__delegate.call(this, x, y, zs);
      };
      G__2974.cljs$lang$maxFixedArity = 2;
      G__2974.cljs$lang$applyTo = function(arglist__2976) {
        var x = cljs.core.first(arglist__2976);
        arglist__2976 = cljs.core.next(arglist__2976);
        var y = cljs.core.first(arglist__2976);
        var zs = cljs.core.rest(arglist__2976);
        return G__2974__delegate(x, y, zs);
      };
      G__2974.cljs$core$IFn$_invoke$arity$variadic = G__2974__delegate;
      return G__2974;
    }();
    G__2973 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__2973__0.call(this);
        case 1:
          return G__2973__1.call(this, x);
        case 2:
          return G__2973__2.call(this, x, y);
        default:
          var G__2977 = null;
          if (arguments.length > 2) {
            var G__2978__i = 0, G__2978__a = new Array(arguments.length - 2);
            while (G__2978__i < G__2978__a.length) {
              G__2978__a[G__2978__i] = arguments[G__2978__i + 2];
              ++G__2978__i;
            }
            G__2977 = new cljs.core.IndexedSeq(G__2978__a, 0, null);
          }
          return G__2973__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__2977);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__2973.cljs$lang$maxFixedArity = 2;
    G__2973.cljs$lang$applyTo = G__2973__3.cljs$lang$applyTo;
    G__2973.cljs$core$IFn$_invoke$arity$0 = G__2973__0;
    G__2973.cljs$core$IFn$_invoke$arity$1 = G__2973__1;
    G__2973.cljs$core$IFn$_invoke$arity$2 = G__2973__2;
    G__2973.cljs$core$IFn$_invoke$arity$variadic = G__2973__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__2973;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__2979__delegate = function(args) {
      return x;
    };
    var G__2979 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__2980__i = 0, G__2980__a = new Array(arguments.length - 0);
        while (G__2980__i < G__2980__a.length) {
          G__2980__a[G__2980__i] = arguments[G__2980__i + 0];
          ++G__2980__i;
        }
        args = new cljs.core.IndexedSeq(G__2980__a, 0, null);
      }
      return G__2979__delegate.call(this, args);
    };
    G__2979.cljs$lang$maxFixedArity = 0;
    G__2979.cljs$lang$applyTo = function(arglist__2981) {
      var args = cljs.core.seq(arglist__2981);
      return G__2979__delegate(args);
    };
    G__2979.cljs$core$IFn$_invoke$arity$variadic = G__2979__delegate;
    return G__2979;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var G__2987 = arguments.length;
  switch(G__2987) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___3005 = arguments.length;
      var i__4737__auto___3006 = 0;
      while (true) {
        if (i__4737__auto___3006 < len__4736__auto___3005) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___3006]);
          var G__3007 = i__4737__auto___3006 + 1;
          i__4737__auto___3006 = G__3007;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__3008 = null;
    var G__3008__0 = function() {
      var G__2988 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2988) : f.call(null, G__2988);
    };
    var G__3008__1 = function(x) {
      var G__2989 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2989) : f.call(null, G__2989);
    };
    var G__3008__2 = function(x, y) {
      var G__2990 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2990) : f.call(null, G__2990);
    };
    var G__3008__3 = function(x, y, z) {
      var G__2991 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2991) : f.call(null, G__2991);
    };
    var G__3008__4 = function() {
      var G__3009__delegate = function(x, y, z, args) {
        var G__2992 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2992) : f.call(null, G__2992);
      };
      var G__3009 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3010__i = 0, G__3010__a = new Array(arguments.length - 3);
          while (G__3010__i < G__3010__a.length) {
            G__3010__a[G__3010__i] = arguments[G__3010__i + 3];
            ++G__3010__i;
          }
          args = new cljs.core.IndexedSeq(G__3010__a, 0, null);
        }
        return G__3009__delegate.call(this, x, y, z, args);
      };
      G__3009.cljs$lang$maxFixedArity = 3;
      G__3009.cljs$lang$applyTo = function(arglist__3011) {
        var x = cljs.core.first(arglist__3011);
        arglist__3011 = cljs.core.next(arglist__3011);
        var y = cljs.core.first(arglist__3011);
        arglist__3011 = cljs.core.next(arglist__3011);
        var z = cljs.core.first(arglist__3011);
        var args = cljs.core.rest(arglist__3011);
        return G__3009__delegate(x, y, z, args);
      };
      G__3009.cljs$core$IFn$_invoke$arity$variadic = G__3009__delegate;
      return G__3009;
    }();
    G__3008 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3008__0.call(this);
        case 1:
          return G__3008__1.call(this, x);
        case 2:
          return G__3008__2.call(this, x, y);
        case 3:
          return G__3008__3.call(this, x, y, z);
        default:
          var G__3012 = null;
          if (arguments.length > 3) {
            var G__3013__i = 0, G__3013__a = new Array(arguments.length - 3);
            while (G__3013__i < G__3013__a.length) {
              G__3013__a[G__3013__i] = arguments[G__3013__i + 3];
              ++G__3013__i;
            }
            G__3012 = new cljs.core.IndexedSeq(G__3013__a, 0, null);
          }
          return G__3008__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3012);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3008.cljs$lang$maxFixedArity = 3;
    G__3008.cljs$lang$applyTo = G__3008__4.cljs$lang$applyTo;
    G__3008.cljs$core$IFn$_invoke$arity$0 = G__3008__0;
    G__3008.cljs$core$IFn$_invoke$arity$1 = G__3008__1;
    G__3008.cljs$core$IFn$_invoke$arity$2 = G__3008__2;
    G__3008.cljs$core$IFn$_invoke$arity$3 = G__3008__3;
    G__3008.cljs$core$IFn$_invoke$arity$variadic = G__3008__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3008;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__3014 = null;
    var G__3014__0 = function() {
      var G__2993 = function() {
        var G__2994 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2994) : g.call(null, G__2994);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2993) : f.call(null, G__2993);
    };
    var G__3014__1 = function(x) {
      var G__2995 = function() {
        var G__2996 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2996) : g.call(null, G__2996);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2995) : f.call(null, G__2995);
    };
    var G__3014__2 = function(x, y) {
      var G__2997 = function() {
        var G__2998 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2998) : g.call(null, G__2998);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2997) : f.call(null, G__2997);
    };
    var G__3014__3 = function(x, y, z) {
      var G__2999 = function() {
        var G__3000 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__3000) : g.call(null, G__3000);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2999) : f.call(null, G__2999);
    };
    var G__3014__4 = function() {
      var G__3015__delegate = function(x, y, z, args) {
        var G__3001 = function() {
          var G__3002 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__3002) : g.call(null, G__3002);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3001) : f.call(null, G__3001);
      };
      var G__3015 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3016__i = 0, G__3016__a = new Array(arguments.length - 3);
          while (G__3016__i < G__3016__a.length) {
            G__3016__a[G__3016__i] = arguments[G__3016__i + 3];
            ++G__3016__i;
          }
          args = new cljs.core.IndexedSeq(G__3016__a, 0, null);
        }
        return G__3015__delegate.call(this, x, y, z, args);
      };
      G__3015.cljs$lang$maxFixedArity = 3;
      G__3015.cljs$lang$applyTo = function(arglist__3017) {
        var x = cljs.core.first(arglist__3017);
        arglist__3017 = cljs.core.next(arglist__3017);
        var y = cljs.core.first(arglist__3017);
        arglist__3017 = cljs.core.next(arglist__3017);
        var z = cljs.core.first(arglist__3017);
        var args = cljs.core.rest(arglist__3017);
        return G__3015__delegate(x, y, z, args);
      };
      G__3015.cljs$core$IFn$_invoke$arity$variadic = G__3015__delegate;
      return G__3015;
    }();
    G__3014 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3014__0.call(this);
        case 1:
          return G__3014__1.call(this, x);
        case 2:
          return G__3014__2.call(this, x, y);
        case 3:
          return G__3014__3.call(this, x, y, z);
        default:
          var G__3018 = null;
          if (arguments.length > 3) {
            var G__3019__i = 0, G__3019__a = new Array(arguments.length - 3);
            while (G__3019__i < G__3019__a.length) {
              G__3019__a[G__3019__i] = arguments[G__3019__i + 3];
              ++G__3019__i;
            }
            G__3018 = new cljs.core.IndexedSeq(G__3019__a, 0, null);
          }
          return G__3014__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3018);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3014.cljs$lang$maxFixedArity = 3;
    G__3014.cljs$lang$applyTo = G__3014__4.cljs$lang$applyTo;
    G__3014.cljs$core$IFn$_invoke$arity$0 = G__3014__0;
    G__3014.cljs$core$IFn$_invoke$arity$1 = G__3014__1;
    G__3014.cljs$core$IFn$_invoke$arity$2 = G__3014__2;
    G__3014.cljs$core$IFn$_invoke$arity$3 = G__3014__3;
    G__3014.cljs$core$IFn$_invoke$arity$variadic = G__3014__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3014;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function() {
    var G__3020__delegate = function(args) {
      var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
      var fs__$2 = cljs.core.next(fs__$1);
      while (true) {
        if (fs__$2) {
          var G__3021 = function() {
            var fexpr__3003 = cljs.core.first(fs__$2);
            return fexpr__3003.cljs$core$IFn$_invoke$arity$1 ? fexpr__3003.cljs$core$IFn$_invoke$arity$1(ret) : fexpr__3003.call(null, ret);
          }();
          var G__3022 = cljs.core.next(fs__$2);
          ret = G__3021;
          fs__$2 = G__3022;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__3020 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__3023__i = 0, G__3023__a = new Array(arguments.length - 0);
        while (G__3023__i < G__3023__a.length) {
          G__3023__a[G__3023__i] = arguments[G__3023__i + 0];
          ++G__3023__i;
        }
        args = new cljs.core.IndexedSeq(G__3023__a, 0, null);
      }
      return G__3020__delegate.call(this, args);
    };
    G__3020.cljs$lang$maxFixedArity = 0;
    G__3020.cljs$lang$applyTo = function(arglist__3024) {
      var args = cljs.core.seq(arglist__3024);
      return G__3020__delegate(args);
    };
    G__3020.cljs$core$IFn$_invoke$arity$variadic = G__3020__delegate;
    return G__3020;
  }();
};
cljs.core.comp.cljs$lang$applyTo = function(seq2983) {
  var G__2984 = cljs.core.first(seq2983);
  var seq2983__$1 = cljs.core.next(seq2983);
  var G__2985 = cljs.core.first(seq2983__$1);
  var seq2983__$2 = cljs.core.next(seq2983__$1);
  var G__2986 = cljs.core.first(seq2983__$2);
  var seq2983__$3 = cljs.core.next(seq2983__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2984, G__2985, G__2986, seq2983__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var G__3031 = arguments.length;
  switch(G__3031) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___3033 = arguments.length;
      var i__4737__auto___3034 = 0;
      while (true) {
        if (i__4737__auto___3034 < len__4736__auto___3033) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___3034]);
          var G__3035 = i__4737__auto___3034 + 1;
          i__4737__auto___3034 = G__3035;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4758__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__3036 = null;
    var G__3036__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__3036__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__3036__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__3036__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__3036__4 = function() {
      var G__3037__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));
      };
      var G__3037 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3038__i = 0, G__3038__a = new Array(arguments.length - 3);
          while (G__3038__i < G__3038__a.length) {
            G__3038__a[G__3038__i] = arguments[G__3038__i + 3];
            ++G__3038__i;
          }
          args = new cljs.core.IndexedSeq(G__3038__a, 0, null);
        }
        return G__3037__delegate.call(this, x, y, z, args);
      };
      G__3037.cljs$lang$maxFixedArity = 3;
      G__3037.cljs$lang$applyTo = function(arglist__3039) {
        var x = cljs.core.first(arglist__3039);
        arglist__3039 = cljs.core.next(arglist__3039);
        var y = cljs.core.first(arglist__3039);
        arglist__3039 = cljs.core.next(arglist__3039);
        var z = cljs.core.first(arglist__3039);
        var args = cljs.core.rest(arglist__3039);
        return G__3037__delegate(x, y, z, args);
      };
      G__3037.cljs$core$IFn$_invoke$arity$variadic = G__3037__delegate;
      return G__3037;
    }();
    G__3036 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3036__0.call(this);
        case 1:
          return G__3036__1.call(this, x);
        case 2:
          return G__3036__2.call(this, x, y);
        case 3:
          return G__3036__3.call(this, x, y, z);
        default:
          var G__3040 = null;
          if (arguments.length > 3) {
            var G__3041__i = 0, G__3041__a = new Array(arguments.length - 3);
            while (G__3041__i < G__3041__a.length) {
              G__3041__a[G__3041__i] = arguments[G__3041__i + 3];
              ++G__3041__i;
            }
            G__3040 = new cljs.core.IndexedSeq(G__3041__a, 0, null);
          }
          return G__3036__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3040);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3036.cljs$lang$maxFixedArity = 3;
    G__3036.cljs$lang$applyTo = G__3036__4.cljs$lang$applyTo;
    G__3036.cljs$core$IFn$_invoke$arity$0 = G__3036__0;
    G__3036.cljs$core$IFn$_invoke$arity$1 = G__3036__1;
    G__3036.cljs$core$IFn$_invoke$arity$2 = G__3036__2;
    G__3036.cljs$core$IFn$_invoke$arity$3 = G__3036__3;
    G__3036.cljs$core$IFn$_invoke$arity$variadic = G__3036__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3036;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__3042 = null;
    var G__3042__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__3042__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__3042__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__3042__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__3042__4 = function() {
      var G__3043__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([z, args], 0));
      };
      var G__3043 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3044__i = 0, G__3044__a = new Array(arguments.length - 3);
          while (G__3044__i < G__3044__a.length) {
            G__3044__a[G__3044__i] = arguments[G__3044__i + 3];
            ++G__3044__i;
          }
          args = new cljs.core.IndexedSeq(G__3044__a, 0, null);
        }
        return G__3043__delegate.call(this, x, y, z, args);
      };
      G__3043.cljs$lang$maxFixedArity = 3;
      G__3043.cljs$lang$applyTo = function(arglist__3045) {
        var x = cljs.core.first(arglist__3045);
        arglist__3045 = cljs.core.next(arglist__3045);
        var y = cljs.core.first(arglist__3045);
        arglist__3045 = cljs.core.next(arglist__3045);
        var z = cljs.core.first(arglist__3045);
        var args = cljs.core.rest(arglist__3045);
        return G__3043__delegate(x, y, z, args);
      };
      G__3043.cljs$core$IFn$_invoke$arity$variadic = G__3043__delegate;
      return G__3043;
    }();
    G__3042 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3042__0.call(this);
        case 1:
          return G__3042__1.call(this, x);
        case 2:
          return G__3042__2.call(this, x, y);
        case 3:
          return G__3042__3.call(this, x, y, z);
        default:
          var G__3046 = null;
          if (arguments.length > 3) {
            var G__3047__i = 0, G__3047__a = new Array(arguments.length - 3);
            while (G__3047__i < G__3047__a.length) {
              G__3047__a[G__3047__i] = arguments[G__3047__i + 3];
              ++G__3047__i;
            }
            G__3046 = new cljs.core.IndexedSeq(G__3047__a, 0, null);
          }
          return G__3042__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3046);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3042.cljs$lang$maxFixedArity = 3;
    G__3042.cljs$lang$applyTo = G__3042__4.cljs$lang$applyTo;
    G__3042.cljs$core$IFn$_invoke$arity$0 = G__3042__0;
    G__3042.cljs$core$IFn$_invoke$arity$1 = G__3042__1;
    G__3042.cljs$core$IFn$_invoke$arity$2 = G__3042__2;
    G__3042.cljs$core$IFn$_invoke$arity$3 = G__3042__3;
    G__3042.cljs$core$IFn$_invoke$arity$variadic = G__3042__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3042;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__3048 = null;
    var G__3048__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__3048__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__3048__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__3048__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__3048__4 = function() {
      var G__3049__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y, z, args], 0));
      };
      var G__3049 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3050__i = 0, G__3050__a = new Array(arguments.length - 3);
          while (G__3050__i < G__3050__a.length) {
            G__3050__a[G__3050__i] = arguments[G__3050__i + 3];
            ++G__3050__i;
          }
          args = new cljs.core.IndexedSeq(G__3050__a, 0, null);
        }
        return G__3049__delegate.call(this, x, y, z, args);
      };
      G__3049.cljs$lang$maxFixedArity = 3;
      G__3049.cljs$lang$applyTo = function(arglist__3051) {
        var x = cljs.core.first(arglist__3051);
        arglist__3051 = cljs.core.next(arglist__3051);
        var y = cljs.core.first(arglist__3051);
        arglist__3051 = cljs.core.next(arglist__3051);
        var z = cljs.core.first(arglist__3051);
        var args = cljs.core.rest(arglist__3051);
        return G__3049__delegate(x, y, z, args);
      };
      G__3049.cljs$core$IFn$_invoke$arity$variadic = G__3049__delegate;
      return G__3049;
    }();
    G__3048 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3048__0.call(this);
        case 1:
          return G__3048__1.call(this, x);
        case 2:
          return G__3048__2.call(this, x, y);
        case 3:
          return G__3048__3.call(this, x, y, z);
        default:
          var G__3052 = null;
          if (arguments.length > 3) {
            var G__3053__i = 0, G__3053__a = new Array(arguments.length - 3);
            while (G__3053__i < G__3053__a.length) {
              G__3053__a[G__3053__i] = arguments[G__3053__i + 3];
              ++G__3053__i;
            }
            G__3052 = new cljs.core.IndexedSeq(G__3053__a, 0, null);
          }
          return G__3048__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3052);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3048.cljs$lang$maxFixedArity = 3;
    G__3048.cljs$lang$applyTo = G__3048__4.cljs$lang$applyTo;
    G__3048.cljs$core$IFn$_invoke$arity$0 = G__3048__0;
    G__3048.cljs$core$IFn$_invoke$arity$1 = G__3048__1;
    G__3048.cljs$core$IFn$_invoke$arity$2 = G__3048__2;
    G__3048.cljs$core$IFn$_invoke$arity$3 = G__3048__3;
    G__3048.cljs$core$IFn$_invoke$arity$variadic = G__3048__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3048;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__3054__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__3054 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__3055__i = 0, G__3055__a = new Array(arguments.length - 0);
        while (G__3055__i < G__3055__a.length) {
          G__3055__a[G__3055__i] = arguments[G__3055__i + 0];
          ++G__3055__i;
        }
        args = new cljs.core.IndexedSeq(G__3055__a, 0, null);
      }
      return G__3054__delegate.call(this, args);
    };
    G__3054.cljs$lang$maxFixedArity = 0;
    G__3054.cljs$lang$applyTo = function(arglist__3056) {
      var args = cljs.core.seq(arglist__3056);
      return G__3054__delegate(args);
    };
    G__3054.cljs$core$IFn$_invoke$arity$variadic = G__3054__delegate;
    return G__3054;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq3026) {
  var G__3027 = cljs.core.first(seq3026);
  var seq3026__$1 = cljs.core.next(seq3026);
  var G__3028 = cljs.core.first(seq3026__$1);
  var seq3026__$2 = cljs.core.next(seq3026__$1);
  var G__3029 = cljs.core.first(seq3026__$2);
  var seq3026__$3 = cljs.core.next(seq3026__$2);
  var G__3030 = cljs.core.first(seq3026__$3);
  var seq3026__$4 = cljs.core.next(seq3026__$3);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3027, G__3028, G__3029, G__3030, seq3026__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var G__3058 = arguments.length;
  switch(G__3058) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__3076 = null;
    var G__3076__1 = function(a) {
      var G__3059 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3059) : f.call(null, G__3059);
    };
    var G__3076__2 = function(a, b) {
      var G__3060 = a == null ? x : a;
      var G__3061 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3060, G__3061) : f.call(null, G__3060, G__3061);
    };
    var G__3076__3 = function(a, b, c) {
      var G__3062 = a == null ? x : a;
      var G__3063 = b;
      var G__3064 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3062, G__3063, G__3064) : f.call(null, G__3062, G__3063, G__3064);
    };
    var G__3076__4 = function() {
      var G__3077__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__3077 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__3078__i = 0, G__3078__a = new Array(arguments.length - 3);
          while (G__3078__i < G__3078__a.length) {
            G__3078__a[G__3078__i] = arguments[G__3078__i + 3];
            ++G__3078__i;
          }
          ds = new cljs.core.IndexedSeq(G__3078__a, 0, null);
        }
        return G__3077__delegate.call(this, a, b, c, ds);
      };
      G__3077.cljs$lang$maxFixedArity = 3;
      G__3077.cljs$lang$applyTo = function(arglist__3079) {
        var a = cljs.core.first(arglist__3079);
        arglist__3079 = cljs.core.next(arglist__3079);
        var b = cljs.core.first(arglist__3079);
        arglist__3079 = cljs.core.next(arglist__3079);
        var c = cljs.core.first(arglist__3079);
        var ds = cljs.core.rest(arglist__3079);
        return G__3077__delegate(a, b, c, ds);
      };
      G__3077.cljs$core$IFn$_invoke$arity$variadic = G__3077__delegate;
      return G__3077;
    }();
    G__3076 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__3076__1.call(this, a);
        case 2:
          return G__3076__2.call(this, a, b);
        case 3:
          return G__3076__3.call(this, a, b, c);
        default:
          var G__3080 = null;
          if (arguments.length > 3) {
            var G__3081__i = 0, G__3081__a = new Array(arguments.length - 3);
            while (G__3081__i < G__3081__a.length) {
              G__3081__a[G__3081__i] = arguments[G__3081__i + 3];
              ++G__3081__i;
            }
            G__3080 = new cljs.core.IndexedSeq(G__3081__a, 0, null);
          }
          return G__3076__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__3080);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3076.cljs$lang$maxFixedArity = 3;
    G__3076.cljs$lang$applyTo = G__3076__4.cljs$lang$applyTo;
    G__3076.cljs$core$IFn$_invoke$arity$1 = G__3076__1;
    G__3076.cljs$core$IFn$_invoke$arity$2 = G__3076__2;
    G__3076.cljs$core$IFn$_invoke$arity$3 = G__3076__3;
    G__3076.cljs$core$IFn$_invoke$arity$variadic = G__3076__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3076;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__3082 = null;
    var G__3082__2 = function(a, b) {
      var G__3065 = a == null ? x : a;
      var G__3066 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3065, G__3066) : f.call(null, G__3065, G__3066);
    };
    var G__3082__3 = function(a, b, c) {
      var G__3067 = a == null ? x : a;
      var G__3068 = b == null ? y : b;
      var G__3069 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3067, G__3068, G__3069) : f.call(null, G__3067, G__3068, G__3069);
    };
    var G__3082__4 = function() {
      var G__3083__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__3083 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__3084__i = 0, G__3084__a = new Array(arguments.length - 3);
          while (G__3084__i < G__3084__a.length) {
            G__3084__a[G__3084__i] = arguments[G__3084__i + 3];
            ++G__3084__i;
          }
          ds = new cljs.core.IndexedSeq(G__3084__a, 0, null);
        }
        return G__3083__delegate.call(this, a, b, c, ds);
      };
      G__3083.cljs$lang$maxFixedArity = 3;
      G__3083.cljs$lang$applyTo = function(arglist__3085) {
        var a = cljs.core.first(arglist__3085);
        arglist__3085 = cljs.core.next(arglist__3085);
        var b = cljs.core.first(arglist__3085);
        arglist__3085 = cljs.core.next(arglist__3085);
        var c = cljs.core.first(arglist__3085);
        var ds = cljs.core.rest(arglist__3085);
        return G__3083__delegate(a, b, c, ds);
      };
      G__3083.cljs$core$IFn$_invoke$arity$variadic = G__3083__delegate;
      return G__3083;
    }();
    G__3082 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__3082__2.call(this, a, b);
        case 3:
          return G__3082__3.call(this, a, b, c);
        default:
          var G__3086 = null;
          if (arguments.length > 3) {
            var G__3087__i = 0, G__3087__a = new Array(arguments.length - 3);
            while (G__3087__i < G__3087__a.length) {
              G__3087__a[G__3087__i] = arguments[G__3087__i + 3];
              ++G__3087__i;
            }
            G__3086 = new cljs.core.IndexedSeq(G__3087__a, 0, null);
          }
          return G__3082__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__3086);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3082.cljs$lang$maxFixedArity = 3;
    G__3082.cljs$lang$applyTo = G__3082__4.cljs$lang$applyTo;
    G__3082.cljs$core$IFn$_invoke$arity$2 = G__3082__2;
    G__3082.cljs$core$IFn$_invoke$arity$3 = G__3082__3;
    G__3082.cljs$core$IFn$_invoke$arity$variadic = G__3082__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3082;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__3088 = null;
    var G__3088__2 = function(a, b) {
      var G__3070 = a == null ? x : a;
      var G__3071 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3070, G__3071) : f.call(null, G__3070, G__3071);
    };
    var G__3088__3 = function(a, b, c) {
      var G__3072 = a == null ? x : a;
      var G__3073 = b == null ? y : b;
      var G__3074 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3072, G__3073, G__3074) : f.call(null, G__3072, G__3073, G__3074);
    };
    var G__3088__4 = function() {
      var G__3089__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__3089 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__3090__i = 0, G__3090__a = new Array(arguments.length - 3);
          while (G__3090__i < G__3090__a.length) {
            G__3090__a[G__3090__i] = arguments[G__3090__i + 3];
            ++G__3090__i;
          }
          ds = new cljs.core.IndexedSeq(G__3090__a, 0, null);
        }
        return G__3089__delegate.call(this, a, b, c, ds);
      };
      G__3089.cljs$lang$maxFixedArity = 3;
      G__3089.cljs$lang$applyTo = function(arglist__3091) {
        var a = cljs.core.first(arglist__3091);
        arglist__3091 = cljs.core.next(arglist__3091);
        var b = cljs.core.first(arglist__3091);
        arglist__3091 = cljs.core.next(arglist__3091);
        var c = cljs.core.first(arglist__3091);
        var ds = cljs.core.rest(arglist__3091);
        return G__3089__delegate(a, b, c, ds);
      };
      G__3089.cljs$core$IFn$_invoke$arity$variadic = G__3089__delegate;
      return G__3089;
    }();
    G__3088 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__3088__2.call(this, a, b);
        case 3:
          return G__3088__3.call(this, a, b, c);
        default:
          var G__3092 = null;
          if (arguments.length > 3) {
            var G__3093__i = 0, G__3093__a = new Array(arguments.length - 3);
            while (G__3093__i < G__3093__a.length) {
              G__3093__a[G__3093__i] = arguments[G__3093__i + 3];
              ++G__3093__i;
            }
            G__3092 = new cljs.core.IndexedSeq(G__3093__a, 0, null);
          }
          return G__3088__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__3092);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3088.cljs$lang$maxFixedArity = 3;
    G__3088.cljs$lang$applyTo = G__3088__4.cljs$lang$applyTo;
    G__3088.cljs$core$IFn$_invoke$arity$2 = G__3088__2;
    G__3088.cljs$core$IFn$_invoke$arity$3 = G__3088__3;
    G__3088.cljs$core$IFn$_invoke$arity$variadic = G__3088__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3088;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var G__3095 = arguments.length;
  switch(G__3095) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__3109 = null;
      var G__3109__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3109__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3109__2 = function(result, input) {
        var G__3096 = result;
        var G__3097 = function() {
          var G__3098 = i.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, i.cljs$core$IDeref$_deref$arity$1(null) + 1);
          var G__3099 = input;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3098, G__3099) : f.call(null, G__3098, G__3099);
        }();
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3096, G__3097) : rf.call(null, G__3096, G__3097);
      };
      G__3109 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3109__0.call(this);
          case 1:
            return G__3109__1.call(this, result);
          case 2:
            return G__3109__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3109.cljs$core$IFn$_invoke$arity$0 = G__3109__0;
      G__3109.cljs$core$IFn$_invoke$arity$1 = G__3109__1;
      G__3109.cljs$core$IFn$_invoke$arity$2 = G__3109__2;
      return G__3109;
    }();
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5720__auto__ = cljs.core.seq(coll__$1);
      if (temp__5720__auto__) {
        var s = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4613__auto___3110 = size;
          var i_3111 = 0;
          while (true) {
            if (i_3111 < n__4613__auto___3110) {
              cljs.core.chunk_append(b, function() {
                var G__3104 = idx + i_3111;
                var G__3105 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3111);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3104, G__3105) : f.call(null, G__3104, G__3105);
              }());
              var G__3112 = i_3111 + 1;
              i_3111 = G__3112;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__3106 = idx;
            var G__3107 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3106, G__3107) : f.call(null, G__3106, G__3107);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var G__3114 = arguments.length;
  switch(G__3114) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__3118 = null;
      var G__3118__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3118__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3118__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__3118 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3118__0.call(this);
          case 1:
            return G__3118__1.call(this, result);
          case 2:
            return G__3118__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3118.cljs$core$IFn$_invoke$arity$0 = G__3118__0;
      G__3118.cljs$core$IFn$_invoke$arity$1 = G__3118__1;
      G__3118.cljs$core$IFn$_invoke$arity$2 = G__3118__2;
      return G__3118;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4613__auto___3119 = size;
        var i_3120 = 0;
        while (true) {
          if (i_3120 < n__4613__auto___3119) {
            var x_3121 = function() {
              var G__3115 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3120);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3115) : f.call(null, G__3115);
            }();
            if (x_3121 == null) {
            } else {
              cljs.core.chunk_append(b, x_3121);
            }
            var G__3122 = i_3120 + 1;
            i_3120 = G__3122;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__3116 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3116) : f.call(null, G__3116);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__3123 = cljs.core.seq(self__.watches);
  var chunk__3124 = null;
  var count__3125 = 0;
  var i__3126 = 0;
  while (true) {
    if (i__3126 < count__3125) {
      var vec__3133 = chunk__3124.cljs$core$IIndexed$_nth$arity$2(null, i__3126);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3133, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3133, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__3139 = seq__3123;
      var G__3140 = chunk__3124;
      var G__3141 = count__3125;
      var G__3142 = i__3126 + 1;
      seq__3123 = G__3139;
      chunk__3124 = G__3140;
      count__3125 = G__3141;
      i__3126 = G__3142;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__3123);
      if (temp__5720__auto__) {
        var seq__3123__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3123__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__3123__$1);
          var G__3143 = cljs.core.chunk_rest(seq__3123__$1);
          var G__3144 = c__4556__auto__;
          var G__3145 = cljs.core.count(c__4556__auto__);
          var G__3146 = 0;
          seq__3123 = G__3143;
          chunk__3124 = G__3144;
          count__3125 = G__3145;
          i__3126 = G__3146;
          continue;
        } else {
          var vec__3136 = cljs.core.first(seq__3123__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3136, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3136, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__3147 = cljs.core.next(seq__3123__$1);
          var G__3148 = null;
          var G__3149 = 0;
          var G__3150 = 0;
          seq__3123 = G__3147;
          chunk__3124 = G__3148;
          count__3125 = G__3149;
          i__3126 = G__3150;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var G__3154 = arguments.length;
  switch(G__3154) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___3159 = arguments.length;
      var i__4737__auto___3160 = 0;
      while (true) {
        if (i__4737__auto___3160 < len__4736__auto___3159) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___3160]);
          var G__3161 = i__4737__auto___3160 + 1;
          i__4737__auto___3160 = G__3161;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4758__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__3155) {
  var map__3156 = p__3155;
  var map__3156__$1 = (!(map__3156 == null) ? map__3156.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__3156.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__3156) : map__3156;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3156__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3156__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq3152) {
  var G__3153 = cljs.core.first(seq3152);
  var seq3152__$1 = cljs.core.next(seq3152);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3153, seq3152__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error("Validator rejected reference state");
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      a.cljs$core$IWatchable$_notify_watches$arity$3(null, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.reset_vals_BANG_ = function cljs$core$reset_vals_BANG_(a, new_value) {
  var validate = a.validator;
  if (validate == null) {
  } else {
    if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
    } else {
      throw new Error("Validator rejected reference state");
    }
  }
  var old_value = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches(a, old_value, new_value);
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_value, new_value], null);
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var G__3168 = arguments.length;
  switch(G__3168) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___3176 = arguments.length;
      var i__4737__auto___3177 = 0;
      while (true) {
        if (i__4737__auto___3177 < len__4736__auto___3176) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___3177]);
          var G__3178 = i__4737__auto___3177 + 1;
          i__4737__auto___3177 = G__3178;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4758__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__3169 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3169) : f.call(null, G__3169);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__3170 = a.state;
      var G__3171 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3170, G__3171) : f.call(null, G__3170, G__3171);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__3172 = a.state;
      var G__3173 = x;
      var G__3174 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3172, G__3173, G__3174) : f.call(null, G__3172, G__3173, G__3174);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq3163) {
  var G__3164 = cljs.core.first(seq3163);
  var seq3163__$1 = cljs.core.next(seq3163);
  var G__3165 = cljs.core.first(seq3163__$1);
  var seq3163__$2 = cljs.core.next(seq3163__$1);
  var G__3166 = cljs.core.first(seq3163__$2);
  var seq3163__$3 = cljs.core.next(seq3163__$2);
  var G__3167 = cljs.core.first(seq3163__$3);
  var seq3163__$4 = cljs.core.next(seq3163__$3);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3164, G__3165, G__3166, G__3167, seq3163__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.swap_vals_BANG_ = function cljs$core$swap_vals_BANG_(var_args) {
  var G__3185 = arguments.length;
  switch(G__3185) {
    case 2:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___3193 = arguments.length;
      var i__4737__auto___3194 = 0;
      while (true) {
        if (i__4737__auto___3194 < len__4736__auto___3193) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___3194]);
          var G__3195 = i__4737__auto___3194 + 1;
          i__4737__auto___3194 = G__3195;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(4), 0, null);
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4758__auto__);
  }
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__3186 = a.state;
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3186) : f.call(null, G__3186);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__3187 = a.state;
    var G__3188 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3187, G__3188) : f.call(null, G__3187, G__3188);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__3189 = a.state;
    var G__3190 = x;
    var G__3191 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3189, G__3190, G__3191) : f.call(null, G__3189, G__3190, G__3191);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  return cljs.core.reset_vals_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
};
cljs.core.swap_vals_BANG_.cljs$lang$applyTo = function(seq3180) {
  var G__3181 = cljs.core.first(seq3180);
  var seq3180__$1 = cljs.core.next(seq3180);
  var G__3182 = cljs.core.first(seq3180__$1);
  var seq3180__$2 = cljs.core.next(seq3180__$1);
  var G__3183 = cljs.core.first(seq3180__$2);
  var seq3180__$3 = cljs.core.next(seq3180__$2);
  var G__3184 = cljs.core.first(seq3180__$3);
  var seq3180__$4 = cljs.core.next(seq3180__$3);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3181, G__3182, G__3183, G__3184, seq3180__$4);
};
cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  if (!(val == null) && cljs.core.not(function() {
    var G__3197 = cljs.core._deref(iref);
    return val.cljs$core$IFn$_invoke$arity$1 ? val.cljs$core$IFn$_invoke$arity$1(G__3197) : val.call(null, G__3197);
  }())) {
    throw new Error("Validator rejected reference state");
  } else {
  }
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var G__3199 = arguments.length;
  switch(G__3199) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__3209 = null;
      var G__3209__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3209__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3209__2 = function(result, input) {
        var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
        var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__3209 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3209__0.call(this);
          case 1:
            return G__3209__1.call(this, result);
          case 2:
            return G__3209__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3209.cljs$core$IFn$_invoke$arity$0 = G__3209__0;
      G__3209.cljs$core$IFn$_invoke$arity$1 = G__3209__1;
      G__3209.cljs$core$IFn$_invoke$arity$2 = G__3209__2;
      return G__3209;
    }();
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5720__auto__ = cljs.core.seq(coll__$1);
      if (temp__5720__auto__) {
        var s = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4613__auto___3210 = size;
          var i_3211 = 0;
          while (true) {
            if (i_3211 < n__4613__auto___3210) {
              var x_3212 = function() {
                var G__3204 = idx + i_3211;
                var G__3205 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3211);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3204, G__3205) : f.call(null, G__3204, G__3205);
              }();
              if (x_3212 == null) {
              } else {
                cljs.core.chunk_append(b, x_3212);
              }
              var G__3213 = i_3211 + 1;
              i_3211 = G__3213;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__3206 = idx;
            var G__3207 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3206, G__3207) : f.call(null, G__3206, G__3207);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var G__3225 = arguments.length;
  switch(G__3225) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___3227 = arguments.length;
      var i__4737__auto___3228 = 0;
      while (true) {
        if (i__4737__auto___3228 < len__4736__auto___3227) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___3228]);
          var G__3229 = i__4737__auto___3228 + 1;
          i__4737__auto___3228 = G__3229;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__3230__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4115__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4115__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4115__auto__;
          }
        }());
      };
      var G__3230 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3231__i = 0, G__3231__a = new Array(arguments.length - 3);
          while (G__3231__i < G__3231__a.length) {
            G__3231__a[G__3231__i] = arguments[G__3231__i + 3];
            ++G__3231__i;
          }
          args = new cljs.core.IndexedSeq(G__3231__a, 0, null);
        }
        return G__3230__delegate.call(this, x, y, z, args);
      };
      G__3230.cljs$lang$maxFixedArity = 3;
      G__3230.cljs$lang$applyTo = function(arglist__3232) {
        var x = cljs.core.first(arglist__3232);
        arglist__3232 = cljs.core.next(arglist__3232);
        var y = cljs.core.first(arglist__3232);
        arglist__3232 = cljs.core.next(arglist__3232);
        var z = cljs.core.first(arglist__3232);
        var args = cljs.core.rest(arglist__3232);
        return G__3230__delegate(x, y, z, args);
      };
      G__3230.cljs$core$IFn$_invoke$arity$variadic = G__3230__delegate;
      return G__3230;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__3233 = null;
          if (arguments.length > 3) {
            var G__3234__i = 0, G__3234__a = new Array(arguments.length - 3);
            while (G__3234__i < G__3234__a.length) {
              G__3234__a[G__3234__i] = arguments[G__3234__i + 3];
              ++G__3234__i;
            }
            G__3233 = new cljs.core.IndexedSeq(G__3234__a, 0, null);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3233);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            var and__4115__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4115__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4115__auto____$2;
            }
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            var and__4115__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4115__auto____$2)) {
              var and__4115__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4115__auto____$3)) {
                var and__4115__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4115__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4115__auto____$4;
                }
              } else {
                return and__4115__auto____$3;
              }
            } else {
              return and__4115__auto____$2;
            }
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__3235__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4115__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4115__auto__)) {
            return cljs.core.every_QMARK_(function(p1__3214_SHARP_) {
              var and__4115__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3214_SHARP_) : p1.call(null, p1__3214_SHARP_);
              if (cljs.core.truth_(and__4115__auto____$1)) {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3214_SHARP_) : p2.call(null, p1__3214_SHARP_);
              } else {
                return and__4115__auto____$1;
              }
            }, args);
          } else {
            return and__4115__auto__;
          }
        }());
      };
      var G__3235 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3236__i = 0, G__3236__a = new Array(arguments.length - 3);
          while (G__3236__i < G__3236__a.length) {
            G__3236__a[G__3236__i] = arguments[G__3236__i + 3];
            ++G__3236__i;
          }
          args = new cljs.core.IndexedSeq(G__3236__a, 0, null);
        }
        return G__3235__delegate.call(this, x, y, z, args);
      };
      G__3235.cljs$lang$maxFixedArity = 3;
      G__3235.cljs$lang$applyTo = function(arglist__3237) {
        var x = cljs.core.first(arglist__3237);
        arglist__3237 = cljs.core.next(arglist__3237);
        var y = cljs.core.first(arglist__3237);
        arglist__3237 = cljs.core.next(arglist__3237);
        var z = cljs.core.first(arglist__3237);
        var args = cljs.core.rest(arglist__3237);
        return G__3235__delegate(x, y, z, args);
      };
      G__3235.cljs$core$IFn$_invoke$arity$variadic = G__3235__delegate;
      return G__3235;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__3238 = null;
          if (arguments.length > 3) {
            var G__3239__i = 0, G__3239__a = new Array(arguments.length - 3);
            while (G__3239__i < G__3239__a.length) {
              G__3239__a[G__3239__i] = arguments[G__3239__i + 3];
              ++G__3239__i;
            }
            G__3238 = new cljs.core.IndexedSeq(G__3239__a, 0, null);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3238);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            var and__4115__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4115__auto____$2)) {
              var and__4115__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4115__auto____$3)) {
                var and__4115__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4115__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4115__auto____$4;
                }
              } else {
                return and__4115__auto____$3;
              }
            } else {
              return and__4115__auto____$2;
            }
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            var and__4115__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4115__auto____$2)) {
              var and__4115__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4115__auto____$3)) {
                var and__4115__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4115__auto____$4)) {
                  var and__4115__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4115__auto____$5)) {
                    var and__4115__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4115__auto____$6)) {
                      var and__4115__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4115__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4115__auto____$7;
                      }
                    } else {
                      return and__4115__auto____$6;
                    }
                  } else {
                    return and__4115__auto____$5;
                  }
                } else {
                  return and__4115__auto____$4;
                }
              } else {
                return and__4115__auto____$3;
              }
            } else {
              return and__4115__auto____$2;
            }
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__3240__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4115__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4115__auto__)) {
            return cljs.core.every_QMARK_(function(p1__3215_SHARP_) {
              var and__4115__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3215_SHARP_) : p1.call(null, p1__3215_SHARP_);
              if (cljs.core.truth_(and__4115__auto____$1)) {
                var and__4115__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3215_SHARP_) : p2.call(null, p1__3215_SHARP_);
                if (cljs.core.truth_(and__4115__auto____$2)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__3215_SHARP_) : p3.call(null, p1__3215_SHARP_);
                } else {
                  return and__4115__auto____$2;
                }
              } else {
                return and__4115__auto____$1;
              }
            }, args);
          } else {
            return and__4115__auto__;
          }
        }());
      };
      var G__3240 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3241__i = 0, G__3241__a = new Array(arguments.length - 3);
          while (G__3241__i < G__3241__a.length) {
            G__3241__a[G__3241__i] = arguments[G__3241__i + 3];
            ++G__3241__i;
          }
          args = new cljs.core.IndexedSeq(G__3241__a, 0, null);
        }
        return G__3240__delegate.call(this, x, y, z, args);
      };
      G__3240.cljs$lang$maxFixedArity = 3;
      G__3240.cljs$lang$applyTo = function(arglist__3242) {
        var x = cljs.core.first(arglist__3242);
        arglist__3242 = cljs.core.next(arglist__3242);
        var y = cljs.core.first(arglist__3242);
        arglist__3242 = cljs.core.next(arglist__3242);
        var z = cljs.core.first(arglist__3242);
        var args = cljs.core.rest(arglist__3242);
        return G__3240__delegate(x, y, z, args);
      };
      G__3240.cljs$core$IFn$_invoke$arity$variadic = G__3240__delegate;
      return G__3240;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__3243 = null;
          if (arguments.length > 3) {
            var G__3244__i = 0, G__3244__a = new Array(arguments.length - 3);
            while (G__3244__i < G__3244__a.length) {
              G__3244__a[G__3244__i] = arguments[G__3244__i + 3];
              ++G__3244__i;
            }
            G__3243 = new cljs.core.IndexedSeq(G__3244__a, 0, null);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3243);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function() {
    var cljs$core$epn = null;
    var cljs$core$epn__0 = function() {
      return true;
    };
    var cljs$core$epn__1 = function(x) {
      return cljs.core.every_QMARK_(function(p1__3216_SHARP_) {
        return p1__3216_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3216_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3216_SHARP_.call(null, x);
      }, ps__$1);
    };
    var cljs$core$epn__2 = function(x, y) {
      return cljs.core.every_QMARK_(function(p1__3217_SHARP_) {
        var and__4115__auto__ = p1__3217_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3217_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3217_SHARP_.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          return p1__3217_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3217_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3217_SHARP_.call(null, y);
        } else {
          return and__4115__auto__;
        }
      }, ps__$1);
    };
    var cljs$core$epn__3 = function(x, y, z) {
      return cljs.core.every_QMARK_(function(p1__3218_SHARP_) {
        var and__4115__auto__ = p1__3218_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3218_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3218_SHARP_.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p1__3218_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3218_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3218_SHARP_.call(null, y);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            return p1__3218_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3218_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__3218_SHARP_.call(null, z);
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }, ps__$1);
    };
    var cljs$core$epn__4 = function() {
      var G__3245__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4115__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4115__auto__)) {
            return cljs.core.every_QMARK_(function(p1__3219_SHARP_) {
              return cljs.core.every_QMARK_(p1__3219_SHARP_, args);
            }, ps__$1);
          } else {
            return and__4115__auto__;
          }
        }());
      };
      var G__3245 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3246__i = 0, G__3246__a = new Array(arguments.length - 3);
          while (G__3246__i < G__3246__a.length) {
            G__3246__a[G__3246__i] = arguments[G__3246__i + 3];
            ++G__3246__i;
          }
          args = new cljs.core.IndexedSeq(G__3246__a, 0, null);
        }
        return G__3245__delegate.call(this, x, y, z, args);
      };
      G__3245.cljs$lang$maxFixedArity = 3;
      G__3245.cljs$lang$applyTo = function(arglist__3247) {
        var x = cljs.core.first(arglist__3247);
        arglist__3247 = cljs.core.next(arglist__3247);
        var y = cljs.core.first(arglist__3247);
        arglist__3247 = cljs.core.next(arglist__3247);
        var z = cljs.core.first(arglist__3247);
        var args = cljs.core.rest(arglist__3247);
        return G__3245__delegate(x, y, z, args);
      };
      G__3245.cljs$core$IFn$_invoke$arity$variadic = G__3245__delegate;
      return G__3245;
    }();
    cljs$core$epn = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$epn__0.call(this);
        case 1:
          return cljs$core$epn__1.call(this, x);
        case 2:
          return cljs$core$epn__2.call(this, x, y);
        case 3:
          return cljs$core$epn__3.call(this, x, y, z);
        default:
          var G__3248 = null;
          if (arguments.length > 3) {
            var G__3249__i = 0, G__3249__a = new Array(arguments.length - 3);
            while (G__3249__i < G__3249__a.length) {
              G__3249__a[G__3249__i] = arguments[G__3249__i + 3];
              ++G__3249__i;
            }
            G__3248 = new cljs.core.IndexedSeq(G__3249__a, 0, null);
          }
          return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3248);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$epn.cljs$lang$maxFixedArity = 3;
    cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$epn;
  }();
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq3221) {
  var G__3222 = cljs.core.first(seq3221);
  var seq3221__$1 = cljs.core.next(seq3221);
  var G__3223 = cljs.core.first(seq3221__$1);
  var seq3221__$2 = cljs.core.next(seq3221__$1);
  var G__3224 = cljs.core.first(seq3221__$2);
  var seq3221__$3 = cljs.core.next(seq3221__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3222, G__3223, G__3224, seq3221__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var G__3261 = arguments.length;
  switch(G__3261) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___3263 = arguments.length;
      var i__4737__auto___3264 = 0;
      while (true) {
        if (i__4737__auto___3264 < len__4736__auto___3263) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___3264]);
          var G__3265 = i__4737__auto___3264 + 1;
          i__4737__auto___3264 = G__3265;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4126__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4126__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__3266__delegate = function(x, y, z, args) {
        var or__4126__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__3266 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3267__i = 0, G__3267__a = new Array(arguments.length - 3);
          while (G__3267__i < G__3267__a.length) {
            G__3267__a[G__3267__i] = arguments[G__3267__i + 3];
            ++G__3267__i;
          }
          args = new cljs.core.IndexedSeq(G__3267__a, 0, null);
        }
        return G__3266__delegate.call(this, x, y, z, args);
      };
      G__3266.cljs$lang$maxFixedArity = 3;
      G__3266.cljs$lang$applyTo = function(arglist__3268) {
        var x = cljs.core.first(arglist__3268);
        arglist__3268 = cljs.core.next(arglist__3268);
        var y = cljs.core.first(arglist__3268);
        arglist__3268 = cljs.core.next(arglist__3268);
        var z = cljs.core.first(arglist__3268);
        var args = cljs.core.rest(arglist__3268);
        return G__3266__delegate(x, y, z, args);
      };
      G__3266.cljs$core$IFn$_invoke$arity$variadic = G__3266__delegate;
      return G__3266;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__3269 = null;
          if (arguments.length > 3) {
            var G__3270__i = 0, G__3270__a = new Array(arguments.length - 3);
            while (G__3270__i < G__3270__a.length) {
              G__3270__a[G__3270__i] = arguments[G__3270__i + 3];
              ++G__3270__i;
            }
            G__3269 = new cljs.core.IndexedSeq(G__3270__a, 0, null);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3269);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4126__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4126__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          var or__4126__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4126__auto____$2)) {
            return or__4126__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4126__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          var or__4126__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4126__auto____$2)) {
            return or__4126__auto____$2;
          } else {
            var or__4126__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4126__auto____$3)) {
              return or__4126__auto____$3;
            } else {
              var or__4126__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4126__auto____$4)) {
                return or__4126__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__3271__delegate = function(x, y, z, args) {
        var or__4126__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.some(function(p1__3250_SHARP_) {
            var or__4126__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3250_SHARP_) : p1.call(null, p1__3250_SHARP_);
            if (cljs.core.truth_(or__4126__auto____$1)) {
              return or__4126__auto____$1;
            } else {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3250_SHARP_) : p2.call(null, p1__3250_SHARP_);
            }
          }, args);
        }
      };
      var G__3271 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3272__i = 0, G__3272__a = new Array(arguments.length - 3);
          while (G__3272__i < G__3272__a.length) {
            G__3272__a[G__3272__i] = arguments[G__3272__i + 3];
            ++G__3272__i;
          }
          args = new cljs.core.IndexedSeq(G__3272__a, 0, null);
        }
        return G__3271__delegate.call(this, x, y, z, args);
      };
      G__3271.cljs$lang$maxFixedArity = 3;
      G__3271.cljs$lang$applyTo = function(arglist__3273) {
        var x = cljs.core.first(arglist__3273);
        arglist__3273 = cljs.core.next(arglist__3273);
        var y = cljs.core.first(arglist__3273);
        arglist__3273 = cljs.core.next(arglist__3273);
        var z = cljs.core.first(arglist__3273);
        var args = cljs.core.rest(arglist__3273);
        return G__3271__delegate(x, y, z, args);
      };
      G__3271.cljs$core$IFn$_invoke$arity$variadic = G__3271__delegate;
      return G__3271;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__3274 = null;
          if (arguments.length > 3) {
            var G__3275__i = 0, G__3275__a = new Array(arguments.length - 3);
            while (G__3275__i < G__3275__a.length) {
              G__3275__a[G__3275__i] = arguments[G__3275__i + 3];
              ++G__3275__i;
            }
            G__3274 = new cljs.core.IndexedSeq(G__3275__a, 0, null);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3274);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4126__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4126__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          var or__4126__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4126__auto____$2)) {
            return or__4126__auto____$2;
          } else {
            var or__4126__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4126__auto____$3)) {
              return or__4126__auto____$3;
            } else {
              var or__4126__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4126__auto____$4)) {
                return or__4126__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4126__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          var or__4126__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4126__auto____$2)) {
            return or__4126__auto____$2;
          } else {
            var or__4126__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4126__auto____$3)) {
              return or__4126__auto____$3;
            } else {
              var or__4126__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4126__auto____$4)) {
                return or__4126__auto____$4;
              } else {
                var or__4126__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4126__auto____$5)) {
                  return or__4126__auto____$5;
                } else {
                  var or__4126__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4126__auto____$6)) {
                    return or__4126__auto____$6;
                  } else {
                    var or__4126__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4126__auto____$7)) {
                      return or__4126__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__3276__delegate = function(x, y, z, args) {
        var or__4126__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.some(function(p1__3251_SHARP_) {
            var or__4126__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3251_SHARP_) : p1.call(null, p1__3251_SHARP_);
            if (cljs.core.truth_(or__4126__auto____$1)) {
              return or__4126__auto____$1;
            } else {
              var or__4126__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3251_SHARP_) : p2.call(null, p1__3251_SHARP_);
              if (cljs.core.truth_(or__4126__auto____$2)) {
                return or__4126__auto____$2;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__3251_SHARP_) : p3.call(null, p1__3251_SHARP_);
              }
            }
          }, args);
        }
      };
      var G__3276 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3277__i = 0, G__3277__a = new Array(arguments.length - 3);
          while (G__3277__i < G__3277__a.length) {
            G__3277__a[G__3277__i] = arguments[G__3277__i + 3];
            ++G__3277__i;
          }
          args = new cljs.core.IndexedSeq(G__3277__a, 0, null);
        }
        return G__3276__delegate.call(this, x, y, z, args);
      };
      G__3276.cljs$lang$maxFixedArity = 3;
      G__3276.cljs$lang$applyTo = function(arglist__3278) {
        var x = cljs.core.first(arglist__3278);
        arglist__3278 = cljs.core.next(arglist__3278);
        var y = cljs.core.first(arglist__3278);
        arglist__3278 = cljs.core.next(arglist__3278);
        var z = cljs.core.first(arglist__3278);
        var args = cljs.core.rest(arglist__3278);
        return G__3276__delegate(x, y, z, args);
      };
      G__3276.cljs$core$IFn$_invoke$arity$variadic = G__3276__delegate;
      return G__3276;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__3279 = null;
          if (arguments.length > 3) {
            var G__3280__i = 0, G__3280__a = new Array(arguments.length - 3);
            while (G__3280__i < G__3280__a.length) {
              G__3280__a[G__3280__i] = arguments[G__3280__i + 3];
              ++G__3280__i;
            }
            G__3279 = new cljs.core.IndexedSeq(G__3280__a, 0, null);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3279);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function() {
    var cljs$core$spn = null;
    var cljs$core$spn__0 = function() {
      return null;
    };
    var cljs$core$spn__1 = function(x) {
      return cljs.core.some(function(p1__3252_SHARP_) {
        return p1__3252_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3252_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3252_SHARP_.call(null, x);
      }, ps__$1);
    };
    var cljs$core$spn__2 = function(x, y) {
      return cljs.core.some(function(p1__3253_SHARP_) {
        var or__4126__auto__ = p1__3253_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3253_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3253_SHARP_.call(null, x);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return p1__3253_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3253_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3253_SHARP_.call(null, y);
        }
      }, ps__$1);
    };
    var cljs$core$spn__3 = function(x, y, z) {
      return cljs.core.some(function(p1__3254_SHARP_) {
        var or__4126__auto__ = p1__3254_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3254_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3254_SHARP_.call(null, x);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          var or__4126__auto____$1 = p1__3254_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3254_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3254_SHARP_.call(null, y);
          if (cljs.core.truth_(or__4126__auto____$1)) {
            return or__4126__auto____$1;
          } else {
            return p1__3254_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3254_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__3254_SHARP_.call(null, z);
          }
        }
      }, ps__$1);
    };
    var cljs$core$spn__4 = function() {
      var G__3281__delegate = function(x, y, z, args) {
        var or__4126__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.some(function(p1__3255_SHARP_) {
            return cljs.core.some(p1__3255_SHARP_, args);
          }, ps__$1);
        }
      };
      var G__3281 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3282__i = 0, G__3282__a = new Array(arguments.length - 3);
          while (G__3282__i < G__3282__a.length) {
            G__3282__a[G__3282__i] = arguments[G__3282__i + 3];
            ++G__3282__i;
          }
          args = new cljs.core.IndexedSeq(G__3282__a, 0, null);
        }
        return G__3281__delegate.call(this, x, y, z, args);
      };
      G__3281.cljs$lang$maxFixedArity = 3;
      G__3281.cljs$lang$applyTo = function(arglist__3283) {
        var x = cljs.core.first(arglist__3283);
        arglist__3283 = cljs.core.next(arglist__3283);
        var y = cljs.core.first(arglist__3283);
        arglist__3283 = cljs.core.next(arglist__3283);
        var z = cljs.core.first(arglist__3283);
        var args = cljs.core.rest(arglist__3283);
        return G__3281__delegate(x, y, z, args);
      };
      G__3281.cljs$core$IFn$_invoke$arity$variadic = G__3281__delegate;
      return G__3281;
    }();
    cljs$core$spn = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$spn__0.call(this);
        case 1:
          return cljs$core$spn__1.call(this, x);
        case 2:
          return cljs$core$spn__2.call(this, x, y);
        case 3:
          return cljs$core$spn__3.call(this, x, y, z);
        default:
          var G__3284 = null;
          if (arguments.length > 3) {
            var G__3285__i = 0, G__3285__a = new Array(arguments.length - 3);
            while (G__3285__i < G__3285__a.length) {
              G__3285__a[G__3285__i] = arguments[G__3285__i + 3];
              ++G__3285__i;
            }
            G__3284 = new cljs.core.IndexedSeq(G__3285__a, 0, null);
          }
          return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3284);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$spn.cljs$lang$maxFixedArity = 3;
    cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$spn;
  }();
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq3257) {
  var G__3258 = cljs.core.first(seq3257);
  var seq3257__$1 = cljs.core.next(seq3257);
  var G__3259 = cljs.core.first(seq3257__$1);
  var seq3257__$2 = cljs.core.next(seq3257__$1);
  var G__3260 = cljs.core.first(seq3257__$2);
  var seq3257__$3 = cljs.core.next(seq3257__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3258, G__3259, G__3260, seq3257__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var G__3293 = arguments.length;
  switch(G__3293) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___3306 = arguments.length;
      var i__4737__auto___3307 = 0;
      while (true) {
        if (i__4737__auto___3307 < len__4736__auto___3306) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___3307]);
          var G__3308 = i__4737__auto___3307 + 1;
          i__4737__auto___3307 = G__3308;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4758__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__3309 = null;
      var G__3309__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3309__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3309__2 = function(result, input) {
        var G__3294 = result;
        var G__3295 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3294, G__3295) : rf.call(null, G__3294, G__3295);
      };
      var G__3309__3 = function() {
        var G__3310__delegate = function(result, input, inputs) {
          var G__3296 = result;
          var G__3297 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3296, G__3297) : rf.call(null, G__3296, G__3297);
        };
        var G__3310 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__3311__i = 0, G__3311__a = new Array(arguments.length - 2);
            while (G__3311__i < G__3311__a.length) {
              G__3311__a[G__3311__i] = arguments[G__3311__i + 2];
              ++G__3311__i;
            }
            inputs = new cljs.core.IndexedSeq(G__3311__a, 0, null);
          }
          return G__3310__delegate.call(this, result, input, inputs);
        };
        G__3310.cljs$lang$maxFixedArity = 2;
        G__3310.cljs$lang$applyTo = function(arglist__3312) {
          var result = cljs.core.first(arglist__3312);
          arglist__3312 = cljs.core.next(arglist__3312);
          var input = cljs.core.first(arglist__3312);
          var inputs = cljs.core.rest(arglist__3312);
          return G__3310__delegate(result, input, inputs);
        };
        G__3310.cljs$core$IFn$_invoke$arity$variadic = G__3310__delegate;
        return G__3310;
      }();
      G__3309 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__3309__0.call(this);
          case 1:
            return G__3309__1.call(this, result);
          case 2:
            return G__3309__2.call(this, result, input);
          default:
            var G__3313 = null;
            if (arguments.length > 2) {
              var G__3314__i = 0, G__3314__a = new Array(arguments.length - 2);
              while (G__3314__i < G__3314__a.length) {
                G__3314__a[G__3314__i] = arguments[G__3314__i + 2];
                ++G__3314__i;
              }
              G__3313 = new cljs.core.IndexedSeq(G__3314__a, 0, null);
            }
            return G__3309__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__3313);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3309.cljs$lang$maxFixedArity = 2;
      G__3309.cljs$lang$applyTo = G__3309__3.cljs$lang$applyTo;
      G__3309.cljs$core$IFn$_invoke$arity$0 = G__3309__0;
      G__3309.cljs$core$IFn$_invoke$arity$1 = G__3309__1;
      G__3309.cljs$core$IFn$_invoke$arity$2 = G__3309__2;
      G__3309.cljs$core$IFn$_invoke$arity$variadic = G__3309__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__3309;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4613__auto___3315 = size;
        var i_3316 = 0;
        while (true) {
          if (i_3316 < n__4613__auto___3315) {
            cljs.core.chunk_append(b, function() {
              var G__3298 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3316);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3298) : f.call(null, G__3298);
            }());
            var G__3317 = i_3316 + 1;
            i_3316 = G__3317;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__3299 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3299) : f.call(null, G__3299);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__3300 = cljs.core.first(s1);
        var G__3301 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3300, G__3301) : f.call(null, G__3300, G__3301);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__3302 = cljs.core.first(s1);
        var G__3303 = cljs.core.first(s2);
        var G__3304 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3302, G__3303, G__3304) : f.call(null, G__3302, G__3303, G__3304);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__3286_SHARP_) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__3286_SHARP_);
  }, step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq3288) {
  var G__3289 = cljs.core.first(seq3288);
  var seq3288__$1 = cljs.core.next(seq3288);
  var G__3290 = cljs.core.first(seq3288__$1);
  var seq3288__$2 = cljs.core.next(seq3288__$1);
  var G__3291 = cljs.core.first(seq3288__$2);
  var seq3288__$3 = cljs.core.next(seq3288__$2);
  var G__3292 = cljs.core.first(seq3288__$3);
  var seq3288__$4 = cljs.core.next(seq3288__$3);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3289, G__3290, G__3291, G__3292, seq3288__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var G__3319 = arguments.length;
  switch(G__3319) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function() {
      var G__3321 = null;
      var G__3321__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3321__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3321__2 = function(result, input) {
        var n__$1 = cljs.core.deref(na);
        var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
        var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
        if (!(nn > 0)) {
          return cljs.core.ensure_reduced(result__$1);
        } else {
          return result__$1;
        }
      };
      G__3321 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3321__0.call(this);
          case 1:
            return G__3321__1.call(this, result);
          case 2:
            return G__3321__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3321.cljs$core$IFn$_invoke$arity$0 = G__3321__0;
      G__3321.cljs$core$IFn$_invoke$arity$1 = G__3321__1;
      G__3321.cljs$core$IFn$_invoke$arity$2 = G__3321__2;
      return G__3321;
    }();
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__5720__auto__ = cljs.core.seq(coll);
      if (temp__5720__auto__) {
        var s = temp__5720__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var G__3323 = arguments.length;
  switch(G__3323) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function() {
      var G__3325 = null;
      var G__3325__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3325__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3325__2 = function(result, input) {
        var n__$1 = cljs.core.deref(na);
        na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
        if (n__$1 > 0) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__3325 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3325__0.call(this);
          case 1:
            return G__3325__1.call(this, result);
          case 2:
            return G__3325__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3325.cljs$core$IFn$_invoke$arity$0 = G__3325__0;
      G__3325.cljs$core$IFn$_invoke$arity$1 = G__3325__1;
      G__3325.cljs$core$IFn$_invoke$arity$2 = G__3325__2;
      return G__3325;
    }();
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__3326 = n__$1 - 1;
        var G__3327 = cljs.core.rest(s);
        n__$1 = G__3326;
        coll__$1 = G__3327;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(n, coll);
  }, null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var G__3329 = arguments.length;
  switch(G__3329) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__3331 = cljs.core.next(s);
      var G__3332 = cljs.core.next(lead);
      s = G__3331;
      lead = G__3332;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var G__3334 = arguments.length;
  switch(G__3334) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function() {
      var G__3338 = null;
      var G__3338__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3338__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3338__2 = function(result, input) {
        var drop_QMARK_ = cljs.core.deref(da);
        if (cljs.core.truth_(function() {
          var and__4115__auto__ = drop_QMARK_;
          if (cljs.core.truth_(and__4115__auto__)) {
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
          } else {
            return and__4115__auto__;
          }
        }())) {
          return result;
        } else {
          cljs.core.vreset_BANG_(da, null);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__3338 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3338__0.call(this);
          case 1:
            return G__3338__1.call(this, result);
          case 2:
            return G__3338__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3338.cljs$core$IFn$_invoke$arity$0 = G__3338__0;
      G__3338.cljs$core$IFn$_invoke$arity$1 = G__3338__1;
      G__3338.cljs$core$IFn$_invoke$arity$2 = G__3338__2;
      return G__3338;
    }();
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4115__auto__ = s;
        if (and__4115__auto__) {
          var G__3336 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__3336) : pred__$1.call(null, G__3336);
        } else {
          return and__4115__auto__;
        }
      }())) {
        var G__3339 = pred__$1;
        var G__3340 = cljs.core.rest(s);
        pred__$1 = G__3339;
        coll__$1 = G__3340;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(pred, coll);
  }, null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.Cycle = function(meta, all, prev, current, _next) {
  this.meta = meta;
  this.all = all;
  this.prev = prev;
  this.current = current;
  this._next = _next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Cycle.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cycle.prototype.currentval = function() {
  var self__ = this;
  var coll = this;
  if (self__.current) {
  } else {
    var temp__5718__auto___3347 = cljs.core.next(self__.prev);
    if (temp__5718__auto___3347) {
      var c_3348 = temp__5718__auto___3347;
      self__.current = c_3348;
    } else {
      self__.current = self__.all;
    }
  }
  return self__.current;
};
cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.current == null);
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = cljs.core.first(s);
  while (true) {
    var s__$1 = function() {
      var or__4126__auto__ = cljs.core.next(s);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        return self__.all;
      }
    }();
    var ret__$1 = function() {
      var G__3343 = ret;
      var G__3344 = cljs.core.first(s__$1);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3343, G__3344) : f.call(null, G__3343, G__3344);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__3349 = s__$1;
      var G__3350 = ret__$1;
      s = G__3349;
      ret = G__3350;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = start;
  while (true) {
    var ret__$1 = function() {
      var G__3345 = ret;
      var G__3346 = cljs.core.first(s);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3345, G__3346) : f.call(null, G__3345, G__3346);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__3351 = function() {
        var or__4126__auto__ = cljs.core.next(s);
        if (or__4126__auto__) {
          return or__4126__auto__;
        } else {
          return self__.all;
        }
      }();
      var G__3352 = ret__$1;
      s = G__3351;
      ret = G__3352;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(coll__$1.currentval());
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__._next == null) {
    self__._next = new cljs.core.Cycle(null, self__.all, coll__$1.currentval(), null, null);
  } else {
  }
  return self__._next;
};
cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cycle(new_meta, self__.all, self__.prev, self__.current, self__._next);
  }
};
cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Cycle.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "all", "all", -1762306027, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null), cljs.core.with_meta(new cljs.core.Symbol(null, "current", "current", 552492924, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cycle.cljs$lang$type = true;
cljs.core.Cycle.cljs$lang$ctorStr = "cljs.core/Cycle";
cljs.core.Cycle.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Cycle");
};
cljs.core.__GT_Cycle = function cljs$core$__GT_Cycle(meta, all, prev, current, _next) {
  return new cljs.core.Cycle(meta, all, prev, current, _next);
};
cljs.core.cycle = function cljs$core$cycle(coll) {
  var temp__5718__auto__ = cljs.core.seq(coll);
  if (temp__5718__auto__) {
    var vals = temp__5718__auto__;
    return new cljs.core.Cycle(null, vals, null, vals, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.Repeat = function(meta, count, val, next, __hash) {
  this.meta = meta;
  this.count = count;
  this.val = val;
  this.next = next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Repeat.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Repeat.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Repeat.prototype.indexOf = function() {
  var G__3353 = null;
  var G__3353__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3353__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3353 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3353__1.call(this, x);
      case 2:
        return G__3353__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3353.cljs$core$IFn$_invoke$arity$1 = G__3353__1;
  G__3353.cljs$core$IFn$_invoke$arity$2 = G__3353__2;
  return G__3353;
}();
cljs.core.Repeat.prototype.lastIndexOf = function() {
  var G__3354 = null;
  var G__3354__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__3354__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3354 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3354__1.call(this, x);
      case 2:
        return G__3354__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3354.cljs$core$IFn$_invoke$arity$1 = G__3354__1;
  G__3354.cljs$core$IFn$_invoke$arity$2 = G__3354__2;
  return G__3354;
}();
cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return null;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return false;
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.val, self__.val) : f.call(null, self__.val, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__3355 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__3355;
        continue;
      }
      break;
    }
  } else {
    var i = 1;
    var ret = self__.val;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__3356 = i + 1;
          var G__3357 = ret__$1;
          i = G__3356;
          ret = G__3357;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(start, self__.val) : f.call(null, start, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__3358 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__3358;
        continue;
      }
      break;
    }
  } else {
    var i = 0;
    var ret = start;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__3359 = i + 1;
          var G__3360 = ret__$1;
          i = G__3359;
          ret = G__3360;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.val;
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Repeat(new_meta, self__.count, self__.val, self__.next, null);
  }
};
cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Repeat.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Repeat.cljs$lang$type = true;
cljs.core.Repeat.cljs$lang$ctorStr = "cljs.core/Repeat";
cljs.core.Repeat.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Repeat");
};
cljs.core.__GT_Repeat = function cljs$core$__GT_Repeat(meta, count, val, next, __hash) {
  return new cljs.core.Repeat(meta, count, val, next, __hash);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var G__3362 = arguments.length;
  switch(G__3362) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Repeat(null, -1, x, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  if (n > 0) {
    return new cljs.core.Repeat(null, n, x, null, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var G__3365 = arguments.length;
  switch(G__3365) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.UNREALIZED_SEED = {};
cljs.core.Iterate = function(meta, f, prev_seed, seed, next) {
  this.meta = meta;
  this.f = f;
  this.prev_seed = prev_seed;
  this.seed = seed;
  this.next = next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Iterate.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.seed === cljs.core.UNREALIZED_SEED);
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, rf) {
  var self__ = this;
  var coll__$1 = this;
  var first = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var v = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(first) : self__.f.call(null, first);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(first, v) : rf.call(null, first, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__3367 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__3368 = v__$2;
      ret = G__3367;
      v__$1 = G__3368;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, rf, start) {
  var self__ = this;
  var coll__$1 = this;
  var v = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(start, v) : rf.call(null, start, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__3369 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__3370 = v__$2;
      ret = G__3369;
      v__$1 = G__3370;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.UNREALIZED_SEED === self__.seed) {
    self__.seed = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(self__.prev_seed) : self__.f.call(null, self__.prev_seed);
  } else {
  }
  return self__.seed;
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    self__.next = new cljs.core.Iterate(null, self__.f, coll__$1.cljs$core$ISeq$_first$arity$1(null), cljs.core.UNREALIZED_SEED, null);
  } else {
  }
  return self__.next;
};
cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Iterate(new_meta, self__.f, self__.prev_seed, self__.seed, self__.next);
  }
};
cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Iterate.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "prev-seed", "prev-seed", 2126381367, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seed", "seed", 1709144854, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Iterate.cljs$lang$type = true;
cljs.core.Iterate.cljs$lang$ctorStr = "cljs.core/Iterate";
cljs.core.Iterate.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Iterate");
};
cljs.core.__GT_Iterate = function cljs$core$__GT_Iterate(meta, f, prev_seed, seed, next) {
  return new cljs.core.Iterate(meta, f, prev_seed, seed, next);
};
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return new cljs.core.Iterate(null, f, null, x, null);
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var G__3375 = arguments.length;
  switch(G__3375) {
    case 0:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___3377 = arguments.length;
      var i__4737__auto___3378 = 0;
      while (true) {
        if (i__4737__auto___3378 < len__4736__auto___3377) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___3378]);
          var G__3379 = i__4737__auto___3378 + 1;
          i__4737__auto___3378 = G__3379;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 = function(c1) {
  return new cljs.core.LazySeq(null, function() {
    return c1;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq3372) {
  var G__3373 = cljs.core.first(seq3372);
  var seq3372__$1 = cljs.core.next(seq3372);
  var G__3374 = cljs.core.first(seq3372__$1);
  var seq3372__$2 = cljs.core.next(seq3372__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3373, G__3374, seq3372__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var G__3381 = arguments.length;
  switch(G__3381) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function() {
      var G__3383 = null;
      var G__3383__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3383__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3383__2 = function(result, input) {
        if (cljs.core.truth_(cljs.core.deref(started))) {
          var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
          if (cljs.core.reduced_QMARK_(sepr)) {
            return sepr;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
          }
        } else {
          cljs.core.vreset_BANG_(started, true);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__3383 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3383__0.call(this);
          case 1:
            return G__3383__1.call(this, result);
          case 2:
            return G__3383__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3383.cljs$core$IFn$_invoke$arity$0 = G__3383__0;
      G__3383.cljs$core$IFn$_invoke$arity$1 = G__3383__1;
      G__3383.cljs$core$IFn$_invoke$arity$2 = G__3383__2;
      return G__3383;
    }();
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5718__auto__ = cljs.core.seq(coll);
      if (temp__5718__auto__) {
        var coll__$1 = temp__5718__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var G__3387 = arguments.length;
  switch(G__3387) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___3389 = arguments.length;
      var i__4737__auto___3390 = 0;
      while (true) {
        if (i__4737__auto___3390 < len__4736__auto___3389) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___3390]);
          var G__3391 = i__4737__auto___3390 + 1;
          i__4737__auto___3390 = G__3391;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4758__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq3385) {
  var G__3386 = cljs.core.first(seq3385);
  var seq3385__$1 = cljs.core.next(seq3385);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3386, seq3385__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var G__3393 = arguments.length;
  switch(G__3393) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__3396 = null;
      var G__3396__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3396__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3396__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__3396 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3396__0.call(this);
          case 1:
            return G__3396__1.call(this, result);
          case 2:
            return G__3396__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3396.cljs$core$IFn$_invoke$arity$0 = G__3396__0;
      G__3396.cljs$core$IFn$_invoke$arity$1 = G__3396__1;
      G__3396.cljs$core$IFn$_invoke$arity$2 = G__3396__2;
      return G__3396;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4613__auto___3397 = size;
        var i_3398 = 0;
        while (true) {
          if (i_3398 < n__4613__auto___3397) {
            if (cljs.core.truth_(function() {
              var G__3394 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3398);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3394) : pred.call(null, G__3394);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3398));
            } else {
            }
            var G__3399 = i_3398 + 1;
            i_3398 = G__3399;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var G__3401 = arguments.length;
  switch(G__3401) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__3403_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__3403_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var G__3405 = arguments.length;
  switch(G__3405) {
    case 0:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$1 = function(to) {
  return to;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var G__3415 = arguments.length;
  switch(G__3415) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___3417 = arguments.length;
      var i__4737__auto___3418 = 0;
      while (true) {
        if (i__4737__auto___3418 < len__4736__auto___3417) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___3418]);
          var G__3419 = i__4737__auto___3418 + 1;
          i__4737__auto___3418 = G__3419;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4758__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq3410) {
  var G__3411 = cljs.core.first(seq3410);
  var seq3410__$1 = cljs.core.next(seq3410);
  var G__3412 = cljs.core.first(seq3410__$1);
  var seq3410__$2 = cljs.core.next(seq3410__$1);
  var G__3413 = cljs.core.first(seq3410__$2);
  var seq3410__$3 = cljs.core.next(seq3410__$2);
  var G__3414 = cljs.core.first(seq3410__$3);
  var seq3410__$4 = cljs.core.next(seq3410__$3);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3411, G__3412, G__3413, G__3414, seq3410__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var G__3421 = arguments.length;
  switch(G__3421) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return new cljs.core.List(null, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)), null, 1, null);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var G__3424 = arguments.length;
  switch(G__3424) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (!(ks__$1 == null)) {
      var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
      if (sentinel === m__$2) {
        return not_found;
      } else {
        var G__3426 = sentinel;
        var G__3427 = m__$2;
        var G__3428 = cljs.core.next(ks__$1);
        sentinel = G__3426;
        m__$1 = G__3427;
        ks__$1 = G__3428;
        continue;
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__3429, v) {
  var vec__3430 = p__3429;
  var seq__3431 = cljs.core.seq(vec__3430);
  var first__3432 = cljs.core.first(seq__3431);
  var seq__3431__$1 = cljs.core.next(seq__3431);
  var k = first__3432;
  var ks = seq__3431__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3433 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3434 = ks;
      var G__3435 = v;
      return cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(G__3433, G__3434, G__3435) : cljs.core.assoc_in.call(null, G__3433, G__3434, G__3435);
    }());
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var G__3444 = arguments.length;
  switch(G__3444) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___3476 = arguments.length;
      var i__4737__auto___3477 = 0;
      while (true) {
        if (i__4737__auto___3477 < len__4736__auto___3476) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___3477]);
          var G__3478 = i__4737__auto___3477 + 1;
          i__4737__auto___3477 = G__3478;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4758__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__3445, f) {
  var vec__3446 = p__3445;
  var seq__3447 = cljs.core.seq(vec__3446);
  var first__3448 = cljs.core.first(seq__3447);
  var seq__3447__$1 = cljs.core.next(seq__3447);
  var k = first__3448;
  var ks = seq__3447__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3449 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3449) : f.call(null, G__3449);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__3450, f, a) {
  var vec__3451 = p__3450;
  var seq__3452 = cljs.core.seq(vec__3451);
  var first__3453 = cljs.core.first(seq__3452);
  var seq__3452__$1 = cljs.core.next(seq__3452);
  var k = first__3453;
  var ks = seq__3452__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3454 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3455 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3454, G__3455) : f.call(null, G__3454, G__3455);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__3456, f, a, b) {
  var vec__3457 = p__3456;
  var seq__3458 = cljs.core.seq(vec__3457);
  var first__3459 = cljs.core.first(seq__3458);
  var seq__3458__$1 = cljs.core.next(seq__3458);
  var k = first__3459;
  var ks = seq__3458__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3460 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3461 = a;
      var G__3462 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3460, G__3461, G__3462) : f.call(null, G__3460, G__3461, G__3462);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__3463, f, a, b, c) {
  var vec__3464 = p__3463;
  var seq__3465 = cljs.core.seq(vec__3464);
  var first__3466 = cljs.core.first(seq__3465);
  var seq__3465__$1 = cljs.core.next(seq__3465);
  var k = first__3466;
  var ks = seq__3465__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3467 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3468 = a;
      var G__3469 = b;
      var G__3470 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3467, G__3468, G__3469, G__3470) : f.call(null, G__3467, G__3468, G__3469, G__3470);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__3471, f, a, b, c, args) {
  var vec__3472 = p__3471;
  var seq__3473 = cljs.core.seq(vec__3472);
  var first__3474 = cljs.core.first(seq__3473);
  var seq__3473__$1 = cljs.core.next(seq__3473);
  var k = first__3474;
  var ks = seq__3473__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq3437) {
  var G__3438 = cljs.core.first(seq3437);
  var seq3437__$1 = cljs.core.next(seq3437);
  var G__3439 = cljs.core.first(seq3437__$1);
  var seq3437__$2 = cljs.core.next(seq3437__$1);
  var G__3440 = cljs.core.first(seq3437__$2);
  var seq3437__$3 = cljs.core.next(seq3437__$2);
  var G__3441 = cljs.core.first(seq3437__$3);
  var seq3437__$4 = cljs.core.next(seq3437__$3);
  var G__3442 = cljs.core.first(seq3437__$4);
  var seq3437__$5 = cljs.core.next(seq3437__$4);
  var G__3443 = cljs.core.first(seq3437__$5);
  var seq3437__$6 = cljs.core.next(seq3437__$5);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3438, G__3439, G__3440, G__3441, G__3442, G__3443, seq3437__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var G__3487 = arguments.length;
  switch(G__3487) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___3499 = arguments.length;
      var i__4737__auto___3500 = 0;
      while (true) {
        if (i__4737__auto___3500 < len__4736__auto___3499) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___3500]);
          var G__3501 = i__4737__auto___3500 + 1;
          i__4737__auto___3500 = G__3501;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4758__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3488 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3488) : f.call(null, G__3488);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3489 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3490 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3489, G__3490) : f.call(null, G__3489, G__3490);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3491 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3492 = x;
    var G__3493 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3491, G__3492, G__3493) : f.call(null, G__3491, G__3492, G__3493);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3494 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3495 = x;
    var G__3496 = y;
    var G__3497 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3494, G__3495, G__3496, G__3497) : f.call(null, G__3494, G__3495, G__3496, G__3497);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq3480) {
  var G__3481 = cljs.core.first(seq3480);
  var seq3480__$1 = cljs.core.next(seq3480);
  var G__3482 = cljs.core.first(seq3480__$1);
  var seq3480__$2 = cljs.core.next(seq3480__$1);
  var G__3483 = cljs.core.first(seq3480__$2);
  var seq3480__$3 = cljs.core.next(seq3480__$2);
  var G__3484 = cljs.core.first(seq3480__$3);
  var seq3480__$4 = cljs.core.next(seq3480__$3);
  var G__3485 = cljs.core.first(seq3480__$4);
  var seq3480__$5 = cljs.core.next(seq3480__$4);
  var G__3486 = cljs.core.first(seq3480__$5);
  var seq3480__$6 = cljs.core.next(seq3480__$5);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3481, G__3482, G__3483, G__3484, G__3485, G__3486, seq3480__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__3502 = ll - 5;
      var G__3503 = r;
      ll = G__3502;
      ret = G__3503;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = function() {
        var G__3504 = pv;
        var G__3505 = level - 5;
        var G__3506 = child;
        var G__3507 = tailnode;
        return cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(G__3504, G__3505, G__3506, G__3507) : cljs.core.push_tail.call(null, G__3504, G__3505, G__3506, G__3507);
      }();
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error(["No item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(i), " in vector of length ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__3508 = cljs.core.pv_aget(node, 0);
      var G__3509 = level - 5;
      node = G__3508;
      level = G__3509;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__3510 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__3511 = level - 5;
        node = G__3510;
        level = G__3511;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, function() {
      var G__3512 = pv;
      var G__3513 = level - 5;
      var G__3514 = cljs.core.pv_aget(node, subidx);
      var G__3515 = i;
      var G__3516 = val;
      return cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(G__3512, G__3513, G__3514, G__3515, G__3516) : cljs.core.do_assoc.call(null, G__3512, G__3513, G__3514, G__3515, G__3516);
    }());
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__3517 = pv;
      var G__3518 = level - 5;
      var G__3519 = cljs.core.pv_aget(node, subidx);
      return cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(G__3517, G__3518, G__3519) : cljs.core.pop_tail.call(null, G__3517, G__3518, G__3519);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.pv_reduce = function cljs$core$pv_reduce(var_args) {
  var G__3521 = arguments.length;
  switch(G__3521) {
    case 4:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 = function(pv, f, start, end) {
  if (start < end) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(pv, f, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pv, start), start + 1, end);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 = function(pv, f, init, start, end) {
  var acc = init;
  var i = start;
  var arr = cljs.core.unchecked_array_for(pv, start);
  while (true) {
    if (i < end) {
      var j = i & 31;
      var arr__$1 = j === 0 ? cljs.core.unchecked_array_for(pv, i) : arr;
      var nacc = function() {
        var G__3522 = acc;
        var G__3523 = arr__$1[j];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3522, G__3523) : f.call(null, G__3522, G__3523);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__3525 = nacc;
        var G__3526 = i + 1;
        var G__3527 = arr__$1;
        acc = G__3525;
        i = G__3526;
        arr = G__3527;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.pv_reduce.cljs$lang$maxFixedArity = 5;
cljs.core.APersistentVector = function() {
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentVector.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return new cljs.core.MapEntry(n, cljs.core.unchecked_array_for(coll__$1, n)[n & 31], null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__3534 = null;
  var G__3534__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3534__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3534 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3534__1.call(this, x);
      case 2:
        return G__3534__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3534.cljs$core$IFn$_invoke$arity$1 = G__3534__1;
  G__3534.cljs$core$IFn$_invoke$arity$2 = G__3534__2;
  return G__3534;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__3535 = null;
  var G__3535__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3535__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3535 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3535__1.call(this, x);
      case 2:
        return G__3535__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3535.cljs$core$IFn$_invoke$arity$1 = G__3535__1;
  G__3535.cljs$core$IFn$_invoke$arity$2 = G__3535__2;
  return G__3535;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__3529 = init__$2;
              var G__3530 = j + i;
              var G__3531 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3529, G__3530, G__3531) : f.call(null, G__3529, G__3530, G__3531);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__3536 = j + 1;
              var G__3537 = init__$3;
              j = G__3536;
              init__$2 = G__3537;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3538 = i + len;
        var G__3539 = init__$2;
        i = G__3538;
        init__$1 = G__3539;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return coll__$1.cljs$core$ICollection$_conj$arity$2(null, val);
    } else {
      throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds  [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt), "]"].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = coll__$1.cljs$core$IIterable$_iterator$arity$1(null);
      var you_iter = other.cljs$core$IIterable$_iterator$arity$1(null);
      while (true) {
        if (me_iter.hasNext()) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root(self__.root), cljs.core.tv_editable_tail(self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(v__$1, f, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__3532 = init__$2;
              var G__3533 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3532, G__3533) : f.call(null, G__3532, G__3533);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__3540 = j + 1;
              var G__3541 = init__$3;
              j = G__3540;
              init__$2 = G__3541;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3542 = i + len;
        var G__3543 = init__$2;
        i = G__3542;
        init__$1 = G__3543;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.integer_QMARK_(k)) {
    return 0 <= k && k < self__.cnt;
  } else {
    return false;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(coll__$1, cljs.core.first_array_for_longvec(coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentVector(new_meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4613__auto___3544 = len;
    var i_3545 = 0;
    while (true) {
      if (i_3545 < n__4613__auto___3544) {
        new_tail[i_3545] = self__.tail[i_3545];
        var G__3546 = i_3545 + 1;
        i_3545 = G__3546;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__3547 = null;
  var G__3547__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3547__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3547 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3547__2.call(this, self__, k);
      case 3:
        return G__3547__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3547.cljs$core$IFn$_invoke$arity$2 = G__3547__2;
  G__3547.cljs$core$IFn$_invoke$arity$3 = G__3547__3;
  return G__3547;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args3528) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3528)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__3548 = i + 1;
        var G__3549 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__3548;
        out = G__3549;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
goog.object.set(cljs.core.PersistentVector.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.map_entry_QMARK_(coll)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.key(coll), cljs.core.val(coll)], null);
  } else {
    if (cljs.core.vector_QMARK_(coll)) {
      return cljs.core.with_meta(coll, null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.PersistentVector.fromArray(coll, true);
      } else {
        return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
      }
    }
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___3551 = arguments.length;
  var i__4737__auto___3552 = 0;
  while (true) {
    if (i__4737__auto___3552 < len__4736__auto___3551) {
      args__4742__auto__.push(arguments[i__4737__auto___3552]);
      var G__3553 = i__4737__auto___3552 + 1;
      i__4737__auto___3552 = G__3553;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, !cljs.core.array_QMARK_(args.arr));
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq3550) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3550));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__3554 = null;
  var G__3554__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3554__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3554 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3554__1.call(this, x);
      case 2:
        return G__3554__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3554.cljs$core$IFn$_invoke$arity$1 = G__3554__1;
  G__3554.cljs$core$IFn$_invoke$arity$2 = G__3554__2;
  return G__3554;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__3555 = null;
  var G__3555__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3555__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3555 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3555__1.call(this, x);
      case 2:
        return G__3555__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3555.cljs$core$IFn$_invoke$arity$1 = G__3555__1;
  G__3555.cljs$core$IFn$_invoke$arity$2 = G__3555__2;
  return G__3555;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.vec, f, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.vec, f, start, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, new_meta);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
goog.object.set(cljs.core.ChunkedSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var G__3557 = arguments.length;
  switch(G__3557) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Subvec.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0) {
    return null;
  } else {
    var idx = self__.start + n;
    if (idx < self__.end) {
      return new cljs.core.MapEntry(n, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.v, idx), null);
    } else {
      return null;
    }
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__3566 = null;
  var G__3566__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3566__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__3566 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__3566__1.call(this, x);
      case 2:
        return G__3566__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3566.cljs$core$IFn$_invoke$arity$1 = G__3566__1;
  G__3566.cljs$core$IFn$_invoke$arity$2 = G__3566__2;
  return G__3566;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__3567 = null;
  var G__3567__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3567__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__3567 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__3567__1.call(this, x);
      case 2:
        return G__3567__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3567.cljs$core$IFn$_invoke$arity$1 = G__3567__1;
  G__3567.cljs$core$IFn$_invoke$arity$2 = G__3567__2;
  return G__3567;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__3560 = init__$1;
        var G__3561 = j;
        var G__3562 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3560, G__3561, G__3562) : f.call(null, G__3560, G__3561, G__3562);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3568 = i + 1;
        var G__3569 = j + 1;
        var G__3570 = init__$2;
        i = G__3568;
        j = G__3569;
        init__$1 = G__3570;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  if (n < 0 || self__.end + 1 <= v_pos) {
    throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll__$1.cljs$core$ICounted$_count$arity$1(null)), "]"].join(""));
  } else {
    return cljs.core.build_subvec(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val), self__.start, function() {
      var x__4214__auto__ = self__.end;
      var y__4215__auto__ = v_pos + 1;
      return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
    }(), null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.ranged_iterator(self__.v, self__.start, self__.end);
  } else {
    return cljs.core.seq_iter(coll__$1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    return null;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec(self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.v, f, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.v, f, init, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, init);
  }
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function cljs$core$subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function() {
        return cljs$core$subvec_seq(i + 1);
      }, null, null));
    }
  };
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.build_subvec(new_meta, self__.v, self__.start, self__.end, self__.__hash);
  }
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec(self__.meta, cljs.core._assoc_n(self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__3571 = null;
  var G__3571__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3571__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3571 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3571__2.call(this, self__, k);
      case 3:
        return G__3571__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3571.cljs$core$IFn$_invoke$arity$2 = G__3571__2;
  G__3571.cljs$core$IFn$_invoke$arity$3 = G__3571__3;
  return G__3571;
}();
cljs.core.Subvec.prototype.apply = function(self__, args3559) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3559)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
goog.object.set(cljs.core.Subvec.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__3572 = meta;
      var G__3573 = v.v;
      var G__3574 = v.start + start;
      var G__3575 = v.start + end;
      var G__3576 = __hash;
      meta = G__3572;
      v = G__3573;
      start = G__3574;
      end = G__3575;
      __hash = G__3576;
      continue;
    } else {
      if (cljs.core.vector_QMARK_(v)) {
      } else {
        throw new Error("v must satisfy IVector");
      }
      if (start < 0 || end < start || end > cljs.core.count(v)) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var G__3578 = arguments.length;
  switch(G__3578) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  if (!(start == null) && !(end == null)) {
  } else {
    throw new Error("Assert failed: (and (not (nil? start)) (not (nil? end)))");
  }
  return cljs.core.build_subvec(null, v, start | 0, end | 0, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      var G__3582 = tv;
      var G__3583 = level - 5;
      var G__3584 = child;
      var G__3585 = tail_node;
      return cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(G__3582, G__3583, G__3584, G__3585) : cljs.core.tv_push_tail.call(null, G__3582, G__3583, G__3584, G__3585);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__3586 = tv;
      var G__3587 = level - 5;
      var G__3588 = cljs.core.pv_aget(node__$1, subidx);
      return cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(G__3586, G__3587, G__3588) : cljs.core.tv_pop_tail.call(null, G__3586, G__3587, G__3588);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__3589 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__3590 = level - 5;
        node = G__3589;
        level = G__3590;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return tcoll__$1.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function() {
          var fexpr__3592 = function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
          return fexpr__3592(self__.shift, self__.root);
        }();
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return tcoll__$1.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, val);
      } else {
        throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds for TransientVector of length", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (!self__.root.edit) {
    throw new Error("lookup after persistent!");
  } else {
    if (typeof k === "number") {
      return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
    } else {
      return not_found;
    }
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__3593 = null;
  var G__3593__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3593__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3593 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3593__2.call(this, self__, k);
      case 3:
        return G__3593__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3593.cljs$core$IFn$_invoke$arity$2 = G__3593__2;
  G__3593.cljs$core$IFn$_invoke$arity$3 = G__3593__3;
  return G__3593;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args3591) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3591)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4126__auto__ = !(self__.fseq == null) && cljs.core.seq(self__.fseq);
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    if (!(self__.riter == null)) {
      return self__.riter.hasNext();
    } else {
      return false;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.fseq == null)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (!(self__.riter == null) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__3594 = null;
  var G__3594__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3594__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3594 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3594__1.call(this, x);
      case 2:
        return G__3594__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3594.cljs$core$IFn$_invoke$arity$1 = G__3594__1;
  G__3594.cljs$core$IFn$_invoke$arity$2 = G__3594__2;
  return G__3594;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__3595 = null;
  var G__3595__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3595__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3595 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3595__1.call(this, x);
      case 2:
        return G__3595__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3595.cljs$core$IFn$_invoke$arity$1 = G__3595__1;
  G__3595.cljs$core$IFn$_invoke$arity$2 = G__3595__2;
  return G__3595;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5718__auto__ = cljs.core.next(self__.front);
  if (temp__5718__auto__) {
    var f1 = temp__5718__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (!(self__.rear == null)) {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5718__auto__ = cljs.core.next(self__.front);
  if (temp__5718__auto__) {
    var f1 = temp__5718__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueueSeq(new_meta, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
goog.object.set(cljs.core.PersistentQueueSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__3596 = null;
  var G__3596__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3596__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3596 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3596__1.call(this, x);
      case 2:
        return G__3596__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3596.cljs$core$IFn$_invoke$arity$1 = G__3596__1;
  G__3596.cljs$core$IFn$_invoke$arity$2 = G__3596__2;
  return G__3596;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__3597 = null;
  var G__3597__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__3597__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3597 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3597__1.call(this, x);
      case 2:
        return G__3597__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3597.cljs$core$IFn$_invoke$arity$1 = G__3597__1;
  G__3597.cljs$core$IFn$_invoke$arity$2 = G__3597__2;
  return G__3597;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__5718__auto__ = cljs.core.next(self__.front);
    if (temp__5718__auto__) {
      var f1 = temp__5718__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4126__auto__ = self__.front;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueue(new_meta, self__.count, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4126__auto__ = self__.rear;
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
goog.object.set(cljs.core.PersistentQueue.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) && !cljs.core.record_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 1048576 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IKVReduce$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x)) ? cljs.core.reduce_kv(function(_, k, v) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, k, cljs.core.never_equiv), v)) {
      return true;
    } else {
      return cljs.core.reduced(false);
    }
  }, true, x) : cljs.core.every_QMARK_(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__3599 = i + incr;
        i = G__3599;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__3600 = i + 1;
      var G__3601 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, goog.object.get(so, k__$1));
      i = G__3600;
      out = G__3601;
      continue;
    } else {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_3604 = 0;
  while (true) {
    if (i_3604 < l) {
      var k_3605 = ks[i_3604];
      goog.object.set(new_obj, k_3605, goog.object.get(obj, k_3605));
      var G__3606 = i_3604 + 1;
      i_3604 = G__3606;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return new cljs.core.MapEntry(k, self__.strobj[k], null);
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__3609 = init__$1;
        var G__3610 = k;
        var G__3611 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3609, G__3610, G__3611) : f.call(null, G__3609, G__3610, G__3611);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3612 = cljs.core.rest(keys__$1);
        var G__3613 = init__$2;
        keys__$1 = G__3612;
        init__$1 = G__3613;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        goog.object.set(new_strobj, k, v);
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        goog.object.set(new_strobj, k, v);
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__3607_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__3607_SHARP_, self__.strobj[p1__3607_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ObjMap(new_meta, self__.keys, self__.strobj, self__.update_count, self__.__hash);
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__3614 = null;
  var G__3614__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3614__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3614 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3614__2.call(this, self__, k);
      case 3:
        return G__3614__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3614.cljs$core$IFn$_invoke$arity$2 = G__3614__2;
  G__3614.cljs$core$IFn$_invoke$arity$3 = G__3614__3;
  return G__3614;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args3608) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3608)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4126__auto__ = self__.i < self__.base_count;
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.MapEntry(k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k), null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__3617 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3617, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3617, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__3620 = i + 2;
        i = G__3620;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__3621 = i + 2;
        i = G__3621;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__3622 = i + 2;
        i = G__3622;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__3623 = i + 2;
        i = G__3623;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__3624 = i + 2;
        i = G__3624;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_3625 = 0;
  while (true) {
    if (i_3625 < l) {
      narr[i_3625] = arr[i_3625];
      var G__3626 = i_3625 + 1;
      i_3625 = G__3626;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.MapEntry = function(key, val, __hash) {
  this.key = key;
  this.val = val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MapEntry.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3628 = k;
  switch(G__3628) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.MapEntry.prototype.indexOf = function() {
  var G__3630 = null;
  var G__3630__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3630__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3630 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3630__1.call(this, x);
      case 2:
        return G__3630__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3630.cljs$core$IFn$_invoke$arity$1 = G__3630__1;
  G__3630.cljs$core$IFn$_invoke$arity$2 = G__3630__2;
  return G__3630;
}();
cljs.core.MapEntry.prototype.lastIndexOf = function() {
  var G__3631 = null;
  var G__3631__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3631__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3631 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3631__1.call(this, x);
      case 2:
        return G__3631__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3631.cljs$core$IFn$_invoke$arity$1 = G__3631__1;
  G__3631.cljs$core$IFn$_invoke$arity$2 = G__3631__2;
  return G__3631;
}();
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.MapEntry.prototype.call = function() {
  var G__3632 = null;
  var G__3632__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3632__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3632 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3632__2.call(this, self__, k);
      case 3:
        return G__3632__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3632.cljs$core$IFn$_invoke$arity$2 = G__3632__2;
  G__3632.cljs$core$IFn$_invoke$arity$3 = G__3632__3;
  return G__3632;
}();
cljs.core.MapEntry.prototype.apply = function(self__, args3627) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3627)));
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.MapEntry.cljs$lang$type = true;
cljs.core.MapEntry.cljs$lang$ctorStr = "cljs.core/MapEntry";
cljs.core.MapEntry.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/MapEntry");
};
cljs.core.__GT_MapEntry = function cljs$core$__GT_MapEntry(key, val, __hash) {
  return new cljs.core.MapEntry(key, val, __hash);
};
cljs.core.map_entry_QMARK_ = function cljs$core$map_entry_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMapEntry$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__3634 = null;
  var G__3634__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3634__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3634 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3634__1.call(this, x);
      case 2:
        return G__3634__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3634.cljs$core$IFn$_invoke$arity$1 = G__3634__1;
  G__3634.cljs$core$IFn$_invoke$arity$2 = G__3634__2;
  return G__3634;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__3635 = null;
  var G__3635__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3635__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3635 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3635__1.call(this, x);
      case 2:
        return G__3635__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3635.cljs$core$IFn$_invoke$arity$1 = G__3635__1;
  G__3635.cljs$core$IFn$_invoke$arity$2 = G__3635__2;
  return G__3635;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
goog.object.set(cljs.core.PersistentArrayMapSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return null;
  } else {
    return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3637 = cljs.core.seq(coll);
  var chunk__3638 = null;
  var count__3639 = 0;
  var i__3640 = 0;
  while (true) {
    if (i__3640 < count__3639) {
      var vec__3647 = chunk__3638.cljs$core$IIndexed$_nth$arity$2(null, i__3640);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3647, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3647, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3659 = seq__3637;
      var G__3660 = chunk__3638;
      var G__3661 = count__3639;
      var G__3662 = i__3640 + 1;
      seq__3637 = G__3659;
      chunk__3638 = G__3660;
      count__3639 = G__3661;
      i__3640 = G__3662;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__3637);
      if (temp__5720__auto__) {
        var seq__3637__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3637__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__3637__$1);
          var G__3663 = cljs.core.chunk_rest(seq__3637__$1);
          var G__3664 = c__4556__auto__;
          var G__3665 = cljs.core.count(c__4556__auto__);
          var G__3666 = 0;
          seq__3637 = G__3663;
          chunk__3638 = G__3664;
          count__3639 = G__3665;
          i__3640 = G__3666;
          continue;
        } else {
          var vec__3650 = cljs.core.first(seq__3637__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3650, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3650, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3667 = cljs.core.next(seq__3637__$1);
          var G__3668 = null;
          var G__3669 = 0;
          var G__3670 = 0;
          seq__3637 = G__3667;
          chunk__3638 = G__3668;
          count__3639 = G__3669;
          i__3640 = G__3670;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__3653 = init__$1;
        var G__3654 = self__.arr[i];
        var G__3655 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3653, G__3654, G__3655) : f.call(null, G__3653, G__3654, G__3655);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3671 = i + 2;
        var G__3672 = init__$2;
        i = G__3671;
        init__$1 = G__3672;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.map_QMARK_(other) && !cljs.core.record_QMARK_(other)) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__3673 = i + 2;
              i = G__3673;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__3674 = s + 2;
            var G__3675 = d;
            s = G__3674;
            d = G__3675;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__3676 = s + 2;
            var G__3677 = d + 2;
            s = G__3676;
            d = G__3677;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__3658 = cljs.core.aclone(self__.arr);
        G__3658[idx + 1] = v;
        return G__3658;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMap(new_meta, self__.cnt, self__.arr, self__.__hash);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__3678 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__3679 = cljs.core.next(es);
          ret = G__3678;
          es = G__3679;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__3680 = null;
  var G__3680__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3680__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3680 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3680__2.call(this, self__, k);
      case 3:
        return G__3680__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3680.cljs$core$IFn$_invoke$arity$2 = G__3680__2;
  G__3680.cljs$core$IFn$_invoke$arity$3 = G__3680__3;
  return G__3680;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args3636) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3636)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_3681 = 0;
    while (true) {
      if (i_3681 < arr__$1.length) {
        var k_3682 = arr__$1[i_3681];
        var v_3683 = arr__$1[i_3681 + 1];
        var idx_3684 = cljs.core.array_index_of(ret, k_3682);
        if (idx_3684 === -1) {
          ret.push(k_3682);
          ret.push(v_3683);
        } else {
        }
        var G__3685 = i_3681 + 2;
        i_3681 = G__3685;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.createWithCheck = function(arr) {
  var ret = [];
  var i_3687 = 0;
  while (true) {
    if (i_3687 < arr.length) {
      var k_3688 = arr[i_3687];
      var v_3689 = arr[i_3687 + 1];
      var idx_3690 = cljs.core.array_index_of(ret, k_3688);
      if (idx_3690 === -1) {
        var G__3686_3691 = ret;
        G__3686_3691.push(k_3688);
        G__3686_3691.push(v_3689);
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k_3688)].join(""));
      }
      var G__3692 = i_3687 + 2;
      i_3687 = G__3692;
      continue;
    } else {
    }
    break;
  }
  var cnt = arr.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr, null);
};
cljs.core.PersistentArrayMap.createAsIfByAssoc = function(arr) {
  var ret = [];
  var i_3694 = 0;
  while (true) {
    if (i_3694 < arr.length) {
      var k_3695 = arr[i_3694];
      var v_3696 = arr[i_3694 + 1];
      var idx_3697 = cljs.core.array_index_of(ret, k_3695);
      if (idx_3697 === -1) {
        var G__3693_3698 = ret;
        G__3693_3698.push(k_3695);
        G__3693_3698.push(v_3696);
      } else {
        ret[idx_3697 + 1] = v_3696;
      }
      var G__3699 = i_3694 + 2;
      i_3694 = G__3699;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.PersistentArrayMap(null, ret.length / 2, ret, null);
};
goog.object.set(cljs.core.PersistentArrayMap.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$2 = tcoll__$1;
        while (true) {
          var temp__5718__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5718__auto__)) {
            var e = temp__5718__auto__;
            var G__3702 = cljs.core.next(es);
            var G__3703 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key(e), cljs.core.val(e));
            es = G__3702;
            tcoll__$2 = G__3703;
            continue;
          } else {
            return tcoll__$2;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map(self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__3701_3704 = self__.arr;
      G__3701_3704.pop();
      G__3701_3704.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.call = function() {
  var G__3705 = null;
  var G__3705__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
  };
  var G__3705__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__3705 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3705__2.call(this, self__, key);
      case 3:
        return G__3705__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3705.cljs$core$IFn$_invoke$arity$2 = G__3705__2;
  G__3705.cljs$core$IFn$_invoke$arity$3 = G__3705__3;
  return G__3705;
}();
cljs.core.TransientArrayMap.prototype.apply = function(self__, args3700) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3700)));
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, 
  null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__3706 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__3707 = i + 2;
      out = G__3706;
      i = G__3707;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var G__3709 = arguments.length;
  switch(G__3709) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__3710 = cljs.core.aclone(arr);
  G__3710[i] = a;
  return G__3710;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__3711 = cljs.core.aclone(arr);
  G__3711[i] = a;
  G__3711[j] = b;
  return G__3711;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var G__3714 = arguments.length;
  switch(G__3714) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__3716 = init__$1;
          var G__3717 = k;
          var G__3718 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3716, G__3717, G__3718) : f.call(null, G__3716, G__3717, G__3718);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return init__$2;
      } else {
        var G__3719 = i + 2;
        var G__3720 = init__$2;
        i = G__3719;
        init__$1 = G__3720;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = !(key == null) ? self__.next_entry = new cljs.core.MapEntry(key, node_or_val, null) : !(node_or_val == null) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4126__auto__ = !(self__.next_entry == null);
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    var or__4126__auto____$1 = !(self__.next_iter == null);
    if (or__4126__auto____$1) {
      return or__4126__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__.next_entry == null)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (!(self__.next_iter == null)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_.val = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_3721 = 0;
        var j_3722 = 0;
        while (true) {
          if (i_3721 < 32) {
            if ((self__.bitmap >>> i_3721 & 1) === 0) {
              var G__3723 = i_3721 + 1;
              var G__3724 = j_3722;
              i_3721 = G__3723;
              j_3722 = G__3724;
              continue;
            } else {
              nodes[i_3721] = !(self__.arr[j_3722] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_3722]), self__.arr[j_3722], self__.arr[j_3722 + 1], added_leaf_QMARK_) : self__.arr[j_3722 + 1];
              var G__3725 = i_3721 + 1;
              var G__3726 = j_3722 + 2;
              i_3721 = G__3725;
              j_3722 = G__3726;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_3727 = 0;
      var j_3728 = 0;
      while (true) {
        if (i_3727 < 32) {
          if ((self__.bitmap >>> i_3727 & 1) === 0) {
            var G__3729 = i_3727 + 1;
            var G__3730 = j_3728;
            i_3727 = G__3729;
            j_3728 = G__3730;
            continue;
          } else {
            nodes[i_3727] = !(self__.arr[j_3728] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_3728]), self__.arr[j_3728], self__.arr[j_3728 + 1], added_leaf_QMARK_) : self__.arr[j_3728 + 1];
            var G__3731 = i_3727 + 1;
            var G__3732 = j_3728 + 2;
            i_3727 = G__3731;
            j_3728 = G__3732;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.MapEntry(key_or_nil, val_or_node, null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__3733 = i + 1;
        var G__3734 = j + 2;
        var G__3735 = bitmap | 1 << i;
        i = G__3733;
        j = G__3734;
        bitmap = G__3735;
        continue;
      } else {
        var G__3736 = i + 1;
        var G__3737 = j;
        var G__3738 = bitmap;
        i = G__3736;
        j = G__3737;
        bitmap = G__3738;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(!(self__.next_iter == null) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (!(node == null)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return init__$2;
        } else {
          var G__3739 = i + 1;
          var G__3740 = init__$2;
          i = G__3739;
          init__$1 = G__3740;
          continue;
        }
      } else {
        var G__3741 = i + 1;
        var G__3742 = init__$1;
        i = G__3741;
        init__$1 = G__3742;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__3743 = i + 2;
        i = G__3743;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_.val = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx + 1], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var G__3745 = arguments.length;
  switch(G__3745) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__3747 = null;
  var G__3747__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3747__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3747 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3747__1.call(this, x);
      case 2:
        return G__3747__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3747.cljs$core$IFn$_invoke$arity$1 = G__3747__1;
  G__3747.cljs$core$IFn$_invoke$arity$2 = G__3747__2;
  return G__3747;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__3748 = null;
  var G__3748__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3748__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3748 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3748__1.call(this, x);
      case 2:
        return G__3748__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3748.cljs$core$IFn$_invoke$arity$1 = G__3748__1;
  G__3748.cljs$core$IFn$_invoke$arity$2 = G__3748__2;
  return G__3748;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.MapEntry(self__.nodes[self__.i], self__.nodes[self__.i + 1], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = self__.s == null ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.NodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
goog.object.set(cljs.core.NodeSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var G__3750 = arguments.length;
  switch(G__3750) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__5718__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__5718__auto__)) {
            var node = temp__5718__auto__;
            var temp__5718__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__5718__auto____$1)) {
              var node_seq = temp__5718__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__3752 = j + 2;
              j = G__3752;
              continue;
            }
          } else {
            var G__3753 = j + 2;
            j = G__3753;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__3754 = null;
  var G__3754__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3754__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3754 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3754__1.call(this, x);
      case 2:
        return G__3754__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3754.cljs$core$IFn$_invoke$arity$1 = G__3754__1;
  G__3754.cljs$core$IFn$_invoke$arity$2 = G__3754__2;
  return G__3754;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__3755 = null;
  var G__3755__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3755__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3755 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3755__1.call(this, x);
      case 2:
        return G__3755__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3755.cljs$core$IFn$_invoke$arity$1 = G__3755__1;
  G__3755.cljs$core$IFn$_invoke$arity$2 = G__3755__2;
  return G__3755;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ArrayNodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
goog.object.set(cljs.core.ArrayNodeSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var G__3757 = arguments.length;
  switch(G__3757) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__5718__auto__ = nodes[j];
        if (cljs.core.truth_(temp__5718__auto__)) {
          var nj = temp__5718__auto__;
          var temp__5718__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__5718__auto____$1)) {
            var ns = temp__5718__auto____$1;
            return new cljs.core.ArrayNodeSeq(null, nodes, j + 1, ns, null);
          } else {
            var G__3759 = j + 1;
            j = G__3759;
            continue;
          }
        } else {
          var G__3760 = j + 1;
          j = G__3760;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 3;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return !self__.seen || self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return new cljs.core.MapEntry(null, self__.nil_val, null);
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.MapEntry(null, self__.nil_val, null);
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_find(0, cljs.core.hash(k), k, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3762 = cljs.core.seq(coll);
  var chunk__3763 = null;
  var count__3764 = 0;
  var i__3765 = 0;
  while (true) {
    if (i__3765 < count__3764) {
      var vec__3772 = chunk__3763.cljs$core$IIndexed$_nth$arity$2(null, i__3765);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3772, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3772, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3780 = seq__3762;
      var G__3781 = chunk__3763;
      var G__3782 = count__3764;
      var G__3783 = i__3765 + 1;
      seq__3762 = G__3780;
      chunk__3763 = G__3781;
      count__3764 = G__3782;
      i__3765 = G__3783;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__3762);
      if (temp__5720__auto__) {
        var seq__3762__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3762__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__3762__$1);
          var G__3784 = cljs.core.chunk_rest(seq__3762__$1);
          var G__3785 = c__4556__auto__;
          var G__3786 = cljs.core.count(c__4556__auto__);
          var G__3787 = 0;
          seq__3762 = G__3784;
          chunk__3763 = G__3785;
          count__3764 = G__3786;
          i__3765 = G__3787;
          continue;
        } else {
          var vec__3775 = cljs.core.first(seq__3762__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3775, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3775, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3788 = cljs.core.next(seq__3762__$1);
          var G__3789 = null;
          var G__3790 = 0;
          var G__3791 = 0;
          seq__3762 = G__3788;
          chunk__3763 = G__3789;
          count__3764 = G__3790;
          i__3765 = G__3791;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref(init__$1);
  } else {
    if (!(self__.root == null)) {
      return cljs.core.unreduced(self__.root.kv_reduce(f, init__$1));
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter();
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.MapEntry(null, self__.nil_val, null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashMap(new_meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__3792 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__3793 = cljs.core.next(es);
          ret = G__3792;
          es = G__3793;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__3794 = null;
  var G__3794__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3794__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3794 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3794__2.call(this, self__, k);
      case 3:
        return G__3794__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3794.cljs$core$IFn$_invoke$arity$2 = G__3794__2;
  G__3794.cljs$core$IFn$_invoke$arity$3 = G__3794__3;
  return G__3794;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args3761) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3761)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__3795 = i + 2;
      var G__3796 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__3795;
      ret = G__3796;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__3797 = i + 1;
      var G__3798 = cljs.core._assoc_BANG_(out, ks[i], vs[i]);
      i = G__3797;
      out = G__3798;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.createWithCheck = function(arr) {
  var len = arr.length;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i_3799 = 0;
  while (true) {
    if (i_3799 < len) {
      cljs.core._assoc_BANG_(ret, arr[i_3799], arr[i_3799 + 1]);
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(ret), i_3799 / 2 + 1)) {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arr[i_3799])].join(""));
      } else {
        var G__3800 = i_3799 + 2;
        i_3799 = G__3800;
        continue;
      }
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(ret);
};
goog.object.set(cljs.core.PersistentHashMap.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll.assoc_BANG_(cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll.assoc_BANG_(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$1 = tcoll;
        while (true) {
          var temp__5718__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5718__auto__)) {
            var e = temp__5718__auto__;
            var G__3802 = cljs.core.next(es);
            var G__3803 = tcoll__$1.assoc_BANG_(cljs.core.key(e), cljs.core.val(e));
            es = G__3802;
            tcoll__$1 = G__3803;
            continue;
          } else {
            return tcoll__$1;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (removed_leaf_QMARK_.val) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.call = function() {
  var G__3804 = null;
  var G__3804__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
  };
  var G__3804__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__3804 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3804__2.call(this, self__, key);
      case 3:
        return G__3804__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3804.cljs$core$IFn$_invoke$arity$2 = G__3804__2;
  G__3804.cljs$core$IFn$_invoke$arity$3 = G__3804__3;
  return G__3804;
}();
cljs.core.TransientHashMap.prototype.apply = function(self__, args3801) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3801)));
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__3805 = ascending_QMARK_ ? t.left : t.right;
      var G__3806 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__3805;
      stack__$1 = G__3806;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__3807 = null;
  var G__3807__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3807__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3807 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3807__1.call(this, x);
      case 2:
        return G__3807__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3807.cljs$core$IFn$_invoke$arity$1 = G__3807__1;
  G__3807.cljs$core$IFn$_invoke$arity$2 = G__3807__2;
  return G__3807;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__3808 = null;
  var G__3808__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3808__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3808 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3808__1.call(this, x);
      case 2:
        return G__3808__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3808.cljs$core$IFn$_invoke$arity$1 = G__3808__1;
  G__3808.cljs$core$IFn$_invoke$arity$2 = G__3808__2;
  return G__3808;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (next_stack == null) {
    return null;
  } else {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMapSeq(new_meta, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
goog.object.set(cljs.core.PersistentTreeMapSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? function() {
    var G__3809 = node.left;
    var G__3810 = f;
    var G__3811 = init;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__3809, G__3810, G__3811) : cljs.core.tree_map_kv_reduce.call(null, G__3809, G__3810, G__3811);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return init__$1;
  } else {
    var init__$2 = function() {
      var G__3812 = init__$1;
      var G__3813 = node.key;
      var G__3814 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3812, G__3813, G__3814) : f.call(null, G__3812, G__3813, G__3814);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return init__$2;
    } else {
      if (!(node.right == null)) {
        var G__3815 = node.right;
        var G__3816 = f;
        var G__3817 = init__$2;
        return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__3815, G__3816, G__3817) : cljs.core.tree_map_kv_reduce.call(null, G__3815, G__3816, G__3817);
      } else {
        return init__$2;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3819 = k;
  switch(G__3819) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__3821 = null;
  var G__3821__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3821__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3821 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3821__1.call(this, x);
      case 2:
        return G__3821__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3821.cljs$core$IFn$_invoke$arity$1 = G__3821__1;
  G__3821.cljs$core$IFn$_invoke$arity$2 = G__3821__2;
  return G__3821;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__3822 = null;
  var G__3822__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3822__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3822 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3822__1.call(this, x);
      case 2:
        return G__3822__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3822.cljs$core$IFn$_invoke$arity$1 = G__3822__1;
  G__3822.cljs$core$IFn$_invoke$arity$2 = G__3822__2;
  return G__3822;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__3823 = null;
  var G__3823__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3823__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3823 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3823__2.call(this, self__, k);
      case 3:
        return G__3823__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3823.cljs$core$IFn$_invoke$arity$2 = G__3823__2;
  G__3823.cljs$core$IFn$_invoke$arity$3 = G__3823__3;
  return G__3823;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args3818) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3818)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
goog.object.set(cljs.core.BlackNode.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3825 = k;
  switch(G__3825) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__3827 = null;
  var G__3827__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3827__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3827 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3827__1.call(this, x);
      case 2:
        return G__3827__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3827.cljs$core$IFn$_invoke$arity$1 = G__3827__1;
  G__3827.cljs$core$IFn$_invoke$arity$2 = G__3827__2;
  return G__3827;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__3828 = null;
  var G__3828__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3828__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3828 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3828__1.call(this, x);
      case 2:
        return G__3828__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3828.cljs$core$IFn$_invoke$arity$1 = G__3828__1;
  G__3828.cljs$core$IFn$_invoke$arity$2 = G__3828__2;
  return G__3828;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__3829 = null;
  var G__3829__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3829__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3829 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3829__2.call(this, self__, k);
      case 3:
        return G__3829__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3829.cljs$core$IFn$_invoke$arity$2 = G__3829__2;
  G__3829.cljs$core$IFn$_invoke$arity$3 = G__3829__3;
  return G__3829;
}();
cljs.core.RedNode.prototype.apply = function(self__, args3824) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3824)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
goog.object.set(cljs.core.RedNode.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__3830 = k;
      var G__3831 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3830, G__3831) : comp.call(null, G__3830, G__3831);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = function() {
          var G__3832 = comp;
          var G__3833 = tree.left;
          var G__3834 = k;
          var G__3835 = v;
          var G__3836 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__3832, G__3833, G__3834, G__3835, G__3836) : cljs.core.tree_map_add.call(null, G__3832, G__3833, G__3834, G__3835, G__3836);
        }();
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = function() {
          var G__3837 = comp;
          var G__3838 = tree.right;
          var G__3839 = k;
          var G__3840 = v;
          var G__3841 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__3837, G__3838, G__3839, G__3840, G__3841) : cljs.core.tree_map_add.call(null, G__3837, G__3838, G__3839, G__3840, G__3841);
        }();
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = function() {
            var G__3842 = left.right;
            var G__3843 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3842, G__3843) : cljs.core.tree_map_append.call(null, G__3842, G__3843);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, function() {
            var G__3844 = left.right;
            var G__3845 = right;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3844, G__3845) : cljs.core.tree_map_append.call(null, G__3844, G__3845);
          }(), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, function() {
            var G__3846 = left;
            var G__3847 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3846, G__3847) : cljs.core.tree_map_append.call(null, G__3846, G__3847);
          }(), right.right, null);
        } else {
          var app = function() {
            var G__3848 = left.right;
            var G__3849 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3848, G__3849) : cljs.core.tree_map_append.call(null, G__3848, G__3849);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__3850 = k;
      var G__3851 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3850, G__3851) : comp.call(null, G__3850, G__3851);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = function() {
          var G__3852 = comp;
          var G__3853 = tree.left;
          var G__3854 = k;
          var G__3855 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__3852, G__3853, G__3854, G__3855) : cljs.core.tree_map_remove.call(null, G__3852, G__3853, G__3854, G__3855);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = function() {
          var G__3856 = comp;
          var G__3857 = tree.right;
          var G__3858 = k;
          var G__3859 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__3856, G__3857, G__3858, G__3859) : cljs.core.tree_map_remove.call(null, G__3856, G__3857, G__3858, G__3859);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, function() {
        var G__3860 = comp;
        var G__3861 = tree.left;
        var G__3862 = k;
        var G__3863 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__3860, G__3861, G__3862, G__3863) : cljs.core.tree_map_replace.call(null, G__3860, G__3861, G__3862, G__3863);
      }(), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, function() {
        var G__3864 = comp;
        var G__3865 = tree.right;
        var G__3866 = k;
        var G__3867 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__3864, G__3865, G__3866, G__3867) : cljs.core.tree_map_replace.call(null, G__3864, G__3865, G__3866, G__3867);
      }());
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.entry_at(k);
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3869 = cljs.core.seq(coll);
  var chunk__3870 = null;
  var count__3871 = 0;
  var i__3872 = 0;
  while (true) {
    if (i__3872 < count__3871) {
      var vec__3879 = chunk__3870.cljs$core$IIndexed$_nth$arity$2(null, i__3872);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3879, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3879, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3891 = seq__3869;
      var G__3892 = chunk__3870;
      var G__3893 = count__3871;
      var G__3894 = i__3872 + 1;
      seq__3869 = G__3891;
      chunk__3870 = G__3892;
      count__3871 = G__3893;
      i__3872 = G__3894;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__3869);
      if (temp__5720__auto__) {
        var seq__3869__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3869__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__3869__$1);
          var G__3895 = cljs.core.chunk_rest(seq__3869__$1);
          var G__3896 = c__4556__auto__;
          var G__3897 = cljs.core.count(c__4556__auto__);
          var G__3898 = 0;
          seq__3869 = G__3895;
          chunk__3870 = G__3896;
          count__3871 = G__3897;
          i__3872 = G__3898;
          continue;
        } else {
          var vec__3882 = cljs.core.first(seq__3869__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3882, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3882, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3899 = cljs.core.next(seq__3869__$1);
          var G__3900 = null;
          var G__3901 = 0;
          var G__3902 = 0;
          seq__3869 = G__3899;
          chunk__3870 = G__3900;
          count__3871 = G__3901;
          i__3872 = G__3902;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__3885 = k;
        var G__3886 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__3885, G__3886) : self__.comp.call(null, G__3885, G__3886);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__3903 = t.left;
          t = G__3903;
          continue;
        } else {
          var G__3904 = t.right;
          t = G__3904;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.unreduced(cljs.core.tree_map_kv_reduce(self__.tree, f, init));
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, new_meta, self__.__hash);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__3905 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__3906 = cljs.core.next(es);
          ret = G__3905;
          es = G__3906;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__3907 = null;
  var G__3907__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3907__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3907 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3907__2.call(this, self__, k);
      case 3:
        return G__3907__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3907.cljs$core$IFn$_invoke$arity$2 = G__3907__2;
  G__3907.cljs$core$IFn$_invoke$arity$3 = G__3907__3;
  return G__3907;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args3868) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3868)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__3889 = k;
          var G__3890 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__3889, G__3890) : self__.comp.call(null, G__3889, G__3890);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__3908 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__3909 = t.left;
              stack = G__3908;
              t = G__3909;
              continue;
            } else {
              var G__3910 = stack;
              var G__3911 = t.right;
              stack = G__3910;
              t = G__3911;
              continue;
            }
          } else {
            if (c > 0) {
              var G__3912 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__3913 = t.right;
              stack = G__3912;
              t = G__3913;
              continue;
            } else {
              var G__3914 = stack;
              var G__3915 = t.left;
              stack = G__3914;
              t = G__3915;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key(entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
goog.object.set(cljs.core.PersistentTreeMap.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___3917 = arguments.length;
  var i__4737__auto___3918 = 0;
  while (true) {
    if (i__4737__auto___3918 < len__4736__auto___3917) {
      args__4742__auto__.push(arguments[i__4737__auto___3918]);
      var G__3919 = i__4737__auto___3918 + 1;
      i__4737__auto___3918 = G__3919;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__3920 = cljs.core.nnext(in$);
      var G__3921 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__3920;
      out = G__3921;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq3916) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3916));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___3923 = arguments.length;
  var i__4737__auto___3924 = 0;
  while (true) {
    if (i__4737__auto___3924 < len__4736__auto___3923) {
      args__4742__auto__.push(arguments[i__4737__auto___3924]);
      var G__3925 = i__4737__auto___3924 + 1;
      i__4737__auto___3924 = G__3925;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.createAsIfByAssoc(arr);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq3922) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3922));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___3929 = arguments.length;
  var i__4737__auto___3930 = 0;
  while (true) {
    if (i__4737__auto___3930 < len__4736__auto___3929) {
      args__4742__auto__.push(arguments[i__4737__auto___3930]);
      var G__3931 = i__4737__auto___3930 + 1;
      i__4737__auto___3930 = G__3931;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      goog.object.set(obj, cljs.core.first(kvs), cljs.core.second(kvs));
      var G__3932 = cljs.core.nnext(kvs);
      kvs = G__3932;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq3926) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3926));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___3934 = arguments.length;
  var i__4737__auto___3935 = 0;
  while (true) {
    if (i__4737__auto___3935 < len__4736__auto___3934) {
      args__4742__auto__.push(arguments[i__4737__auto___3935]);
      var G__3936 = i__4737__auto___3935 + 1;
      i__4737__auto___3935 = G__3936;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__3937 = cljs.core.nnext(in$);
      var G__3938 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__3937;
      out = G__3938;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq3933) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3933));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___3941 = arguments.length;
  var i__4737__auto___3942 = 0;
  while (true) {
    if (i__4737__auto___3942 < len__4736__auto___3941) {
      args__4742__auto__.push(arguments[i__4737__auto___3942]);
      var G__3943 = i__4737__auto___3942 + 1;
      i__4737__auto___3942 = G__3943;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 1 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4743__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__3944 = cljs.core.nnext(in$);
      var G__3945 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__3944;
      out = G__3945;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq3939) {
  var G__3940 = cljs.core.first(seq3939);
  var seq3939__$1 = cljs.core.next(seq3939);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3940, seq3939__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__3948 = null;
  var G__3948__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3948__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3948 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3948__1.call(this, x);
      case 2:
        return G__3948__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3948.cljs$core$IFn$_invoke$arity$1 = G__3948__1;
  G__3948.cljs$core$IFn$_invoke$arity$2 = G__3948__2;
  return G__3948;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__3949 = null;
  var G__3949__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3949__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3949 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3949__1.call(this, x);
      case 2:
        return G__3949__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3949.cljs$core$IFn$_invoke$arity$1 = G__3949__1;
  G__3949.cljs$core$IFn$_invoke$arity$2 = G__3949__2;
  return G__3949;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, null);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.KeySeq(self__.mseq, new_meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
goog.object.set(cljs.core.KeySeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.keys = function cljs$core$keys(map) {
  var temp__5720__auto__ = cljs.core.seq(map);
  if (temp__5720__auto__) {
    var mseq = temp__5720__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__3952 = null;
  var G__3952__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3952__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3952 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3952__1.call(this, x);
      case 2:
        return G__3952__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3952.cljs$core$IFn$_invoke$arity$1 = G__3952__1;
  G__3952.cljs$core$IFn$_invoke$arity$2 = G__3952__2;
  return G__3952;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__3953 = null;
  var G__3953__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3953__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3953 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3953__1.call(this, x);
      case 2:
        return G__3953__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3953.cljs$core$IFn$_invoke$arity$1 = G__3953__1;
  G__3953.cljs$core$IFn$_invoke$arity$2 = G__3953__2;
  return G__3953;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, null);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.ValSeq(self__.mseq, new_meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
goog.object.set(cljs.core.ValSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.vals = function cljs$core$vals(map) {
  var temp__5720__auto__ = cljs.core.seq(map);
  if (temp__5720__auto__) {
    var mseq = temp__5720__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___3957 = arguments.length;
  var i__4737__auto___3958 = 0;
  while (true) {
    if (i__4737__auto___3958 < len__4736__auto___3957) {
      args__4742__auto__.push(arguments[i__4737__auto___3958]);
      var G__3959 = i__4737__auto___3958 + 1;
      i__4737__auto___3958 = G__3959;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__3954_SHARP_, p2__3955_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4126__auto__ = p1__3954_SHARP_;
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__3955_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq3956) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3956));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___3964 = arguments.length;
  var i__4737__auto___3965 = 0;
  while (true) {
    if (i__4737__auto___3965 < len__4736__auto___3964) {
      args__4742__auto__.push(arguments[i__4737__auto___3965]);
      var G__3966 = i__4737__auto___3965 + 1;
      i__4737__auto___3965 = G__3966;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 1 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4743__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.key(e);
      var v = cljs.core.val(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__3962 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__3963 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3962, G__3963) : f.call(null, G__3962, G__3963);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(m1, m2) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
        var or__4126__auto__ = m1;
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), cljs.core.seq(m2));
    };
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq3960) {
  var G__3961 = cljs.core.first(seq3960);
  var seq3960__$1 = cljs.core.next(seq3960);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3961, seq3960__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__3967 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__3968 = cljs.core.next(keys);
      ret = G__3967;
      keys = G__3968;
      continue;
    } else {
      return cljs.core._with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().key;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3972 = cljs.core.seq(coll);
  var chunk__3973 = null;
  var count__3974 = 0;
  var i__3975 = 0;
  while (true) {
    if (i__3975 < count__3974) {
      var vec__3982 = chunk__3973.cljs$core$IIndexed$_nth$arity$2(null, i__3975);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3982, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3982, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3991 = seq__3972;
      var G__3992 = chunk__3973;
      var G__3993 = count__3974;
      var G__3994 = i__3975 + 1;
      seq__3972 = G__3991;
      chunk__3973 = G__3992;
      count__3974 = G__3993;
      i__3975 = G__3994;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__3972);
      if (temp__5720__auto__) {
        var seq__3972__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3972__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__3972__$1);
          var G__3995 = cljs.core.chunk_rest(seq__3972__$1);
          var G__3996 = c__4556__auto__;
          var G__3997 = cljs.core.count(c__4556__auto__);
          var G__3998 = 0;
          seq__3972 = G__3995;
          chunk__3973 = G__3996;
          count__3974 = G__3997;
          i__3975 = G__3998;
          continue;
        } else {
          var vec__3985 = cljs.core.first(seq__3972__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3985, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3985, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3999 = cljs.core.next(seq__3972__$1);
          var G__4000 = null;
          var G__4001 = 0;
          var G__4002 = 0;
          seq__3972 = G__3999;
          chunk__3973 = G__4000;
          count__3974 = G__4001;
          i__3975 = G__4002;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5718__auto__ = cljs.core._find(self__.hash_map, v);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var entry = temp__5718__auto__;
    return cljs.core.key(entry);
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.set_QMARK_(other)) {
    if (cljs.core.count(coll__$1) === cljs.core.count(other)) {
      try {
        return cljs.core.reduce_kv(function(p1__3970_SHARP_, p2__3969_SHARP_) {
          var or__4126__auto__ = cljs.core.contains_QMARK_(other, p2__3969_SHARP_);
          if (or__4126__auto__) {
            return or__4126__auto__;
          } else {
            return cljs.core.reduced(false);
          }
        }, true, self__.hash_map);
      } catch (e3990) {
        if (e3990 instanceof Error) {
          var ex = e3990;
          return false;
        } else {
          throw e3990;
        }
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashSet(new_meta, self__.hash_map, self__.__hash);
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__4003 = null;
  var G__4003__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__4003__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__4003 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4003__2.call(this, self__, k);
      case 3:
        return G__4003__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4003.cljs$core$IFn$_invoke$arity$2 = G__4003__2;
  G__4003.cljs$core$IFn$_invoke$arity$3 = G__4003__3;
  return G__4003;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args3971) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3971)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__4004 = i + 1;
        var G__4005 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__4004;
        out = G__4005;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__4006 = i + 1;
        var G__4007 = cljs.core._conj_BANG_(out, items[i]);
        i = G__4006;
        out = G__4007;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.createWithCheck = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4613__auto___4008 = len;
  var i_4009 = 0;
  while (true) {
    if (i_4009 < n__4613__auto___4008) {
      cljs.core._conj_BANG_(t, items[i_4009]);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(t), i_4009 + 1)) {
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(items[i_4009])].join(""));
      }
      var G__4010 = i_4009 + 1;
      i_4009 = G__4010;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
cljs.core.PersistentHashSet.createAsIfByAssoc = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4613__auto___4011 = len;
  var i_4012 = 0;
  while (true) {
    if (i_4012 < n__4613__auto___4011) {
      cljs.core._conj_BANG_(t, items[i_4012]);
      var G__4013 = i_4012 + 1;
      i_4012 = G__4013;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
goog.object.set(cljs.core.PersistentHashSet.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__4015 = null;
  var G__4015__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__4015__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__4015 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4015__2.call(this, self__, k);
      case 3:
        return G__4015__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4015.cljs$core$IFn$_invoke$arity$2 = G__4015__2;
  G__4015.cljs$core$IFn$_invoke$arity$3 = G__4015__3;
  return G__4015;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args4014) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4014)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__4019 = cljs.core.seq(coll);
  var chunk__4020 = null;
  var count__4021 = 0;
  var i__4022 = 0;
  while (true) {
    if (i__4022 < count__4021) {
      var vec__4029 = chunk__4020.cljs$core$IIndexed$_nth$arity$2(null, i__4022);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4029, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4029, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__4038 = seq__4019;
      var G__4039 = chunk__4020;
      var G__4040 = count__4021;
      var G__4041 = i__4022 + 1;
      seq__4019 = G__4038;
      chunk__4020 = G__4039;
      count__4021 = G__4040;
      i__4022 = G__4041;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__4019);
      if (temp__5720__auto__) {
        var seq__4019__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4019__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__4019__$1);
          var G__4042 = cljs.core.chunk_rest(seq__4019__$1);
          var G__4043 = c__4556__auto__;
          var G__4044 = cljs.core.count(c__4556__auto__);
          var G__4045 = 0;
          seq__4019 = G__4042;
          chunk__4020 = G__4043;
          count__4021 = G__4044;
          i__4022 = G__4045;
          continue;
        } else {
          var vec__4032 = cljs.core.first(seq__4019__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4032, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4032, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__4046 = cljs.core.next(seq__4019__$1);
          var G__4047 = null;
          var G__4048 = 0;
          var G__4049 = 0;
          seq__4019 = G__4046;
          chunk__4020 = G__4047;
          count__4021 = G__4048;
          i__4022 = G__4049;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.set_QMARK_(other)) {
    if (cljs.core.count(coll__$1) === cljs.core.count(other)) {
      try {
        return cljs.core.reduce_kv(function(p1__4017_SHARP_, p2__4016_SHARP_) {
          var or__4126__auto__ = cljs.core.contains_QMARK_(other, p2__4016_SHARP_);
          if (or__4126__auto__) {
            return or__4126__auto__;
          } else {
            return cljs.core.reduced(false);
          }
        }, true, self__.tree_map);
      } catch (e4037) {
        if (e4037 instanceof Error) {
          var ex = e4037;
          return false;
        } else {
          throw e4037;
        }
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeSet(new_meta, self__.tree_map, self__.__hash);
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__4050 = null;
  var G__4050__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__4050__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__4050 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4050__2.call(this, self__, k);
      case 3:
        return G__4050__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4050.cljs$core$IFn$_invoke$arity$2 = G__4050__2;
  G__4050.cljs$core$IFn$_invoke$arity$3 = G__4050__3;
  return G__4050;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args4018) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4018)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
goog.object.set(cljs.core.PersistentTreeSet.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4610__auto__ = arr;
    var l__4611__auto__ = a__4610__auto__.length;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < l__4611__auto__) {
        var G__4051 = i + 1;
        var G__4052 = cljs.core._conj_BANG_(res, arr[i]);
        i = G__4051;
        res = G__4052;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  if (cljs.core.set_QMARK_(coll)) {
    return cljs.core.with_meta(coll, null);
  } else {
    var in$ = cljs.core.seq(coll);
    if (in$ == null) {
      return cljs.core.PersistentHashSet.EMPTY;
    } else {
      if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
        return cljs.core.PersistentHashSet.createAsIfByAssoc(in$.arr);
      } else {
        var in$__$1 = in$;
        var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__4053 = cljs.core.next(in$__$1);
            var G__4054 = cljs.core._conj_BANG_(out, cljs.core._first(in$__$1));
            in$__$1 = G__4053;
            out = G__4054;
            continue;
          } else {
            return cljs.core.persistent_BANG_(out);
          }
          break;
        }
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var G__4057 = arguments.length;
  switch(G__4057) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___4059 = arguments.length;
      var i__4737__auto___4060 = 0;
      while (true) {
        if (i__4737__auto___4060 < len__4736__auto___4059) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___4060]);
          var G__4061 = i__4737__auto___4060 + 1;
          i__4737__auto___4060 = G__4061;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4758__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq4056) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4056));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4063 = arguments.length;
  var i__4737__auto___4064 = 0;
  while (true) {
    if (i__4737__auto___4064 < len__4736__auto___4063) {
      args__4742__auto__.push(arguments[i__4737__auto___4064]);
      var G__4065 = i__4737__auto___4064 + 1;
      i__4737__auto___4064 = G__4065;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq4062) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4062));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4068 = arguments.length;
  var i__4737__auto___4069 = 0;
  while (true) {
    if (i__4737__auto___4069 < len__4736__auto___4068) {
      args__4742__auto__.push(arguments[i__4737__auto___4069]);
      var G__4070 = i__4737__auto___4069 + 1;
      i__4737__auto___4069 = G__4070;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 1 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4743__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq4066) {
  var G__4067 = cljs.core.first(seq4066);
  var seq4066__$1 = cljs.core.next(seq4066);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4067, seq4066__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var G__4074 = arguments.length;
  switch(G__4074) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__4071_SHARP_) {
    var temp__5718__auto__ = cljs.core.find(smap, p1__4071_SHARP_);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var e = temp__5718__auto__;
      return cljs.core.val(e);
    } else {
      return p1__4071_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, i) {
      var temp__5718__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
      if (cljs.core.truth_(temp__5718__auto__)) {
        var e = temp__5718__auto__;
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
      } else {
        return v;
      }
    }, coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__4072_SHARP_) {
      var temp__5718__auto__ = cljs.core.find(smap, p1__4072_SHARP_);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var e = temp__5718__auto__;
        return cljs.core.second(e);
      } else {
        return p1__4072_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var G__4077 = arguments.length;
  switch(G__4077) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function() {
      var G__4088 = null;
      var G__4088__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4088__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__4088__2 = function(result, input) {
        if (cljs.core.contains_QMARK_(cljs.core.deref(seen), input)) {
          return result;
        } else {
          seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__4088 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4088__0.call(this);
          case 1:
            return G__4088__1.call(this, result);
          case 2:
            return G__4088__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4088.cljs$core$IFn$_invoke$arity$0 = G__4088__0;
      G__4088.cljs$core$IFn$_invoke$arity$1 = G__4088__1;
      G__4088.cljs$core$IFn$_invoke$arity$2 = G__4088__2;
      return G__4088;
    }();
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      var fexpr__4082 = function(p__4083, seen__$1) {
        while (true) {
          var vec__4084 = p__4083;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4084, 0, null);
          var xs__$1 = vec__4084;
          var temp__5720__auto__ = cljs.core.seq(xs__$1);
          if (temp__5720__auto__) {
            var s = temp__5720__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__4089 = cljs.core.rest(s);
              var G__4090 = seen__$1;
              p__4083 = G__4089;
              seen__$1 = G__4090;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      };
      return fexpr__4082(xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__4091 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__4092 = cljs.core.next(s__$1);
      ret = G__4091;
      s__$1 = G__4092;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error(["Doesn't support name: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__4094 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__4095 = cljs.core.next(ks);
      var G__4096 = cljs.core.next(vs);
      map = G__4094;
      ks = G__4095;
      vs = G__4096;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var G__4104 = arguments.length;
  switch(G__4104) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___4106 = arguments.length;
      var i__4737__auto___4107 = 0;
      while (true) {
        if (i__4737__auto___4107 < len__4736__auto___4106) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___4107]);
          var G__4108 = i__4737__auto___4107 + 1;
          i__4737__auto___4107 = G__4108;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4097_SHARP_, p2__4098_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__4097_SHARP_, p2__4098_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq4100) {
  var G__4101 = cljs.core.first(seq4100);
  var seq4100__$1 = cljs.core.next(seq4100);
  var G__4102 = cljs.core.first(seq4100__$1);
  var seq4100__$2 = cljs.core.next(seq4100__$1);
  var G__4103 = cljs.core.first(seq4100__$2);
  var seq4100__$3 = cljs.core.next(seq4100__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4101, G__4102, G__4103, seq4100__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var G__4116 = arguments.length;
  switch(G__4116) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___4118 = arguments.length;
      var i__4737__auto___4119 = 0;
      while (true) {
        if (i__4737__auto___4119 < len__4736__auto___4118) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___4119]);
          var G__4120 = i__4737__auto___4119 + 1;
          i__4737__auto___4119 = G__4120;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4109_SHARP_, p2__4110_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__4109_SHARP_, p2__4110_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq4112) {
  var G__4113 = cljs.core.first(seq4112);
  var seq4112__$1 = cljs.core.next(seq4112);
  var G__4114 = cljs.core.first(seq4112__$1);
  var seq4112__$2 = cljs.core.next(seq4112__$1);
  var G__4115 = cljs.core.first(seq4112__$2);
  var seq4112__$3 = cljs.core.next(seq4112__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4113, G__4114, G__4115, seq4112__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var G__4122 = arguments.length;
  switch(G__4122) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function() {
      var G__4124 = null;
      var G__4124__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4124__1 = function(result) {
        var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
        }();
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
      };
      var G__4124__2 = function(result, input) {
        a.add(input);
        if (n === a.size()) {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        } else {
          return result;
        }
      };
      G__4124 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4124__0.call(this);
          case 1:
            return G__4124__1.call(this, result);
          case 2:
            return G__4124__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4124.cljs$core$IFn$_invoke$arity$0 = G__4124__0;
      G__4124.cljs$core$IFn$_invoke$arity$1 = G__4124__1;
      G__4124.cljs$core$IFn$_invoke$arity$2 = G__4124__2;
      return G__4124;
    }();
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var G__4126 = arguments.length;
  switch(G__4126) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__4129 = null;
      var G__4129__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4129__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__4129__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__4129 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4129__0.call(this);
          case 1:
            return G__4129__1.call(this, result);
          case 2:
            return G__4129__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4129.cljs$core$IFn$_invoke$arity$0 = G__4129__0;
      G__4129.cljs$core$IFn$_invoke$arity$1 = G__4129__1;
      G__4129.cljs$core$IFn$_invoke$arity$2 = G__4129__2;
      return G__4129;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      if (cljs.core.truth_(function() {
        var G__4127 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__4127) : pred.call(null, G__4127);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__4130 = function() {
      var G__4132 = cljs.core._entry_key(sc, e);
      var G__4133 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__4132, G__4133) : comp.call(null, G__4132, G__4133);
    }();
    var G__4131 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__4130, G__4131) : test.call(null, G__4130, G__4131);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var G__4135 = arguments.length;
  switch(G__4135) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__4136 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_, cljs.core._GT__EQ_]);
    return fexpr__4136.cljs$core$IFn$_invoke$arity$1 ? fexpr__4136.cljs$core$IFn$_invoke$arity$1(test) : fexpr__4136.call(null, test);
  }())) {
    var temp__5720__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var vec__4137 = temp__5720__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4137, 0, null);
      var s = vec__4137;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5720__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var vec__4140 = temp__5720__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4140, 0, null);
    var s = vec__4140;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(function() {
      var fexpr__4143 = cljs.core.mk_bound_fn(sc, start_test, start_key);
      return fexpr__4143.cljs$core$IFn$_invoke$arity$1 ? fexpr__4143.cljs$core$IFn$_invoke$arity$1(e) : fexpr__4143.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var G__4146 = arguments.length;
  switch(G__4146) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__4147 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_, cljs.core._LT__EQ_]);
    return fexpr__4147.cljs$core$IFn$_invoke$arity$1 ? fexpr__4147.cljs$core$IFn$_invoke$arity$1(test) : fexpr__4147.call(null, test);
  }())) {
    var temp__5720__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var vec__4148 = temp__5720__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4148, 0, null);
      var s = vec__4148;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5720__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var vec__4151 = temp__5720__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4151, 0, null);
    var s = vec__4151;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(function() {
      var fexpr__4154 = cljs.core.mk_bound_fn(sc, end_test, end_key);
      return fexpr__4154.cljs$core$IFn$_invoke$arity$1 ? fexpr__4154.cljs$core$IFn$_invoke$arity$1(e) : fexpr__4154.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeChunk = function(start, step, count) {
  this.start = start;
  this.step = step;
  this.count = count;
  this.cljs$lang$protocol_mask$partition0$ = 82;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RangeChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.RangeChunk.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start;
};
cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start + i * self__.step;
};
cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.count) {
    return self__.start + i * self__.step;
  } else {
    return not_found;
  }
};
cljs.core.RangeChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RangeChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count <= 1) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.RangeChunk(self__.start + self__.step, self__.step, self__.count - 1);
  }
};
cljs.core.RangeChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), new cljs.core.Symbol(null, "count", "count", -514511684, null)], null);
};
cljs.core.RangeChunk.cljs$lang$type = true;
cljs.core.RangeChunk.cljs$lang$ctorStr = "cljs.core/RangeChunk";
cljs.core.RangeChunk.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/RangeChunk");
};
cljs.core.__GT_RangeChunk = function cljs$core$__GT_RangeChunk(start, step, count) {
  return new cljs.core.RangeChunk(start, step, count);
};
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, chunk, chunk_next, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.chunk = chunk;
  this.chunk_next = chunk_next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 140800;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__4157 = null;
  var G__4157__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__4157__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__4157 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__4157__1.call(this, x);
      case 2:
        return G__4157__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4157.cljs$core$IFn$_invoke$arity$1 = G__4157__1;
  G__4157.cljs$core$IFn$_invoke$arity$2 = G__4157__2;
  return G__4157;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__4158 = null;
  var G__4158__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__4158__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__4158 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__4158__1.call(this, x);
      case 2:
        return G__4158__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4158.cljs$core$IFn$_invoke$arity$1 = G__4158__1;
  G__4158.cljs$core$IFn$_invoke$arity$2 = G__4158__2;
  return G__4158;
}();
cljs.core.Range.prototype.forceChunk = function() {
  var self__ = this;
  var coll = this;
  if (self__.chunk == null) {
    var count = coll.cljs$core$ICounted$_count$arity$1(null);
    if (count > 32) {
      self__.chunk_next = new cljs.core.Range(null, self__.start + self__.step * 32, self__.end, self__.step, null, null, null);
      return self__.chunk = new cljs.core.RangeChunk(self__.start, self__.step, 32);
    } else {
      return self__.chunk = new cljs.core.RangeChunk(self__.start, self__.step, count);
    }
  } else {
    return null;
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var G__4156 = (self__.end - self__.start) / self__.step;
  return Math.ceil(G__4156);
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref(ret__$1);
      } else {
        var G__4159 = i + self__.step;
        var G__4160 = ret__$1;
        i = G__4159;
        ret = G__4160;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.start;
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var s = rng__$1.cljs$core$INext$_next$arity$1(null);
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return rng__$1;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  return self__.chunk;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  if (self__.chunk_next == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.chunk_next;
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, new_meta) {
  var self__ = this;
  var rng__$1 = this;
  if (new_meta === self__.meta) {
    return rng__$1;
  } else {
    return new cljs.core.Range(new_meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.seq(rng__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk-next", "chunk-next", -547810434, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, chunk, chunk_next, __hash) {
  return new cljs.core.Range(meta, start, end, step, chunk, chunk_next, __hash);
};
goog.object.set(cljs.core.Range.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.range = function cljs$core$range(var_args) {
  var G__4162 = arguments.length;
  switch(G__4162) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  if (step > 0) {
    if (end <= start) {
      return cljs.core.List.EMPTY;
    } else {
      return new cljs.core.Range(null, start, end, step, null, null, null);
    }
  } else {
    if (step < 0) {
      if (end >= start) {
        return cljs.core.List.EMPTY;
      } else {
        return new cljs.core.Range(null, start, end, step, null, null, null);
      }
    } else {
      if (end === start) {
        return cljs.core.List.EMPTY;
      } else {
        return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(start);
      }
    }
  }
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var G__4165 = arguments.length;
  switch(G__4165) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__4167 = null;
      var G__4167__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4167__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__4167__2 = function(result, input) {
        var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
        if (cljs.core.rem(i, n) === 0) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__4167 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4167__0.call(this);
          case 1:
            return G__4167__1.call(this, result);
          case 2:
            return G__4167__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4167.cljs$core$IFn$_invoke$arity$0 = G__4167__0;
      G__4167.cljs$core$IFn$_invoke$arity$1 = G__4167__1;
      G__4167.cljs$core$IFn$_invoke$arity$2 = G__4167__2;
      return G__4167;
    }();
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var G__4170 = arguments.length;
  switch(G__4170) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function() {
      var G__4172 = null;
      var G__4172__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4172__1 = function(result) {
        var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
        }();
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
      };
      var G__4172__2 = function(result, input) {
        var pval = cljs.core.deref(pa);
        var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        cljs.core.vreset_BANG_(pa, val);
        if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
          a.add(input);
          return result;
        } else {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          if (cljs.core.reduced_QMARK_(ret)) {
          } else {
            a.add(input);
          }
          return ret;
        }
      };
      G__4172 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4172__0.call(this);
          case 1:
            return G__4172__1.call(this, result);
          case 2:
            return G__4172__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4172.cljs$core$IFn$_invoke$arity$0 = G__4172__0;
      G__4172.cljs$core$IFn$_invoke$arity$1 = G__4172__1;
      G__4172.cljs$core$IFn$_invoke$arity$2 = G__4172__2;
      return G__4172;
    }();
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(p1__4168_SHARP_) {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__4168_SHARP_) : f.call(null, p1__4168_SHARP_));
      }, cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, new cljs.core.LazySeq(null, function() {
        return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s);
      }, null, null)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var G__4174 = arguments.length;
  switch(G__4174) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5718__auto__ = cljs.core.seq(coll);
    if (temp__5718__auto__) {
      var s = temp__5718__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return new cljs.core.List(null, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), null, 1, null);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    return new cljs.core.List(null, cljs.core.deref(init), null, 1, null);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__5720__auto__ = cljs.core.seq(coll);
      if (temp__5720__auto__) {
        var s = temp__5720__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__4175 = init;
          var G__4176 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4175, G__4176) : f.call(null, G__4175, G__4176);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var G__4193 = arguments.length;
  switch(G__4193) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___4195 = arguments.length;
      var i__4737__auto___4196 = 0;
      while (true) {
        if (i__4737__auto___4196 < len__4736__auto___4195) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___4196]);
          var G__4197 = i__4737__auto___4196 + 1;
          i__4737__auto___4196 = G__4197;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__4198 = null;
    var G__4198__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__4198__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__4198__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__4198__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__4198__4 = function() {
      var G__4199__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__4199 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4200__i = 0, G__4200__a = new Array(arguments.length - 3);
          while (G__4200__i < G__4200__a.length) {
            G__4200__a[G__4200__i] = arguments[G__4200__i + 3];
            ++G__4200__i;
          }
          args = new cljs.core.IndexedSeq(G__4200__a, 0, null);
        }
        return G__4199__delegate.call(this, x, y, z, args);
      };
      G__4199.cljs$lang$maxFixedArity = 3;
      G__4199.cljs$lang$applyTo = function(arglist__4201) {
        var x = cljs.core.first(arglist__4201);
        arglist__4201 = cljs.core.next(arglist__4201);
        var y = cljs.core.first(arglist__4201);
        arglist__4201 = cljs.core.next(arglist__4201);
        var z = cljs.core.first(arglist__4201);
        var args = cljs.core.rest(arglist__4201);
        return G__4199__delegate(x, y, z, args);
      };
      G__4199.cljs$core$IFn$_invoke$arity$variadic = G__4199__delegate;
      return G__4199;
    }();
    G__4198 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4198__0.call(this);
        case 1:
          return G__4198__1.call(this, x);
        case 2:
          return G__4198__2.call(this, x, y);
        case 3:
          return G__4198__3.call(this, x, y, z);
        default:
          var G__4202 = null;
          if (arguments.length > 3) {
            var G__4203__i = 0, G__4203__a = new Array(arguments.length - 3);
            while (G__4203__i < G__4203__a.length) {
              G__4203__a[G__4203__i] = arguments[G__4203__i + 3];
              ++G__4203__i;
            }
            G__4202 = new cljs.core.IndexedSeq(G__4203__a, 0, null);
          }
          return G__4198__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4202);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4198.cljs$lang$maxFixedArity = 3;
    G__4198.cljs$lang$applyTo = G__4198__4.cljs$lang$applyTo;
    G__4198.cljs$core$IFn$_invoke$arity$0 = G__4198__0;
    G__4198.cljs$core$IFn$_invoke$arity$1 = G__4198__1;
    G__4198.cljs$core$IFn$_invoke$arity$2 = G__4198__2;
    G__4198.cljs$core$IFn$_invoke$arity$3 = G__4198__3;
    G__4198.cljs$core$IFn$_invoke$arity$variadic = G__4198__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4198;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__4204 = null;
    var G__4204__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__4204__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__4204__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__4204__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__4204__4 = function() {
      var G__4205__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__4205 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4206__i = 0, G__4206__a = new Array(arguments.length - 3);
          while (G__4206__i < G__4206__a.length) {
            G__4206__a[G__4206__i] = arguments[G__4206__i + 3];
            ++G__4206__i;
          }
          args = new cljs.core.IndexedSeq(G__4206__a, 0, null);
        }
        return G__4205__delegate.call(this, x, y, z, args);
      };
      G__4205.cljs$lang$maxFixedArity = 3;
      G__4205.cljs$lang$applyTo = function(arglist__4207) {
        var x = cljs.core.first(arglist__4207);
        arglist__4207 = cljs.core.next(arglist__4207);
        var y = cljs.core.first(arglist__4207);
        arglist__4207 = cljs.core.next(arglist__4207);
        var z = cljs.core.first(arglist__4207);
        var args = cljs.core.rest(arglist__4207);
        return G__4205__delegate(x, y, z, args);
      };
      G__4205.cljs$core$IFn$_invoke$arity$variadic = G__4205__delegate;
      return G__4205;
    }();
    G__4204 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4204__0.call(this);
        case 1:
          return G__4204__1.call(this, x);
        case 2:
          return G__4204__2.call(this, x, y);
        case 3:
          return G__4204__3.call(this, x, y, z);
        default:
          var G__4208 = null;
          if (arguments.length > 3) {
            var G__4209__i = 0, G__4209__a = new Array(arguments.length - 3);
            while (G__4209__i < G__4209__a.length) {
              G__4209__a[G__4209__i] = arguments[G__4209__i + 3];
              ++G__4209__i;
            }
            G__4208 = new cljs.core.IndexedSeq(G__4209__a, 0, null);
          }
          return G__4204__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4208);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4204.cljs$lang$maxFixedArity = 3;
    G__4204.cljs$lang$applyTo = G__4204__4.cljs$lang$applyTo;
    G__4204.cljs$core$IFn$_invoke$arity$0 = G__4204__0;
    G__4204.cljs$core$IFn$_invoke$arity$1 = G__4204__1;
    G__4204.cljs$core$IFn$_invoke$arity$2 = G__4204__2;
    G__4204.cljs$core$IFn$_invoke$arity$3 = G__4204__3;
    G__4204.cljs$core$IFn$_invoke$arity$variadic = G__4204__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4204;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__4210 = null;
    var G__4210__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__4210__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__4210__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__4210__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__4210__4 = function() {
      var G__4211__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__4211 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4212__i = 0, G__4212__a = new Array(arguments.length - 3);
          while (G__4212__i < G__4212__a.length) {
            G__4212__a[G__4212__i] = arguments[G__4212__i + 3];
            ++G__4212__i;
          }
          args = new cljs.core.IndexedSeq(G__4212__a, 0, null);
        }
        return G__4211__delegate.call(this, x, y, z, args);
      };
      G__4211.cljs$lang$maxFixedArity = 3;
      G__4211.cljs$lang$applyTo = function(arglist__4213) {
        var x = cljs.core.first(arglist__4213);
        arglist__4213 = cljs.core.next(arglist__4213);
        var y = cljs.core.first(arglist__4213);
        arglist__4213 = cljs.core.next(arglist__4213);
        var z = cljs.core.first(arglist__4213);
        var args = cljs.core.rest(arglist__4213);
        return G__4211__delegate(x, y, z, args);
      };
      G__4211.cljs$core$IFn$_invoke$arity$variadic = G__4211__delegate;
      return G__4211;
    }();
    G__4210 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4210__0.call(this);
        case 1:
          return G__4210__1.call(this, x);
        case 2:
          return G__4210__2.call(this, x, y);
        case 3:
          return G__4210__3.call(this, x, y, z);
        default:
          var G__4214 = null;
          if (arguments.length > 3) {
            var G__4215__i = 0, G__4215__a = new Array(arguments.length - 3);
            while (G__4215__i < G__4215__a.length) {
              G__4215__a[G__4215__i] = arguments[G__4215__i + 3];
              ++G__4215__i;
            }
            G__4214 = new cljs.core.IndexedSeq(G__4215__a, 0, null);
          }
          return G__4210__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4214);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4210.cljs$lang$maxFixedArity = 3;
    G__4210.cljs$lang$applyTo = G__4210__4.cljs$lang$applyTo;
    G__4210.cljs$core$IFn$_invoke$arity$0 = G__4210__0;
    G__4210.cljs$core$IFn$_invoke$arity$1 = G__4210__1;
    G__4210.cljs$core$IFn$_invoke$arity$2 = G__4210__2;
    G__4210.cljs$core$IFn$_invoke$arity$3 = G__4210__3;
    G__4210.cljs$core$IFn$_invoke$arity$variadic = G__4210__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4210;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function() {
    var G__4216 = null;
    var G__4216__0 = function() {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4178_SHARP_, p2__4179_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4178_SHARP_, p2__4179_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__4179_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__4179_SHARP_.call(null));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__4216__1 = function(x) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4180_SHARP_, p2__4181_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4180_SHARP_, p2__4181_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__4181_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__4181_SHARP_.call(null, x));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__4216__2 = function(x, y) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4182_SHARP_, p2__4183_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4182_SHARP_, p2__4183_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__4183_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__4183_SHARP_.call(null, x, y));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__4216__3 = function(x, y, z) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4184_SHARP_, p2__4185_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4184_SHARP_, p2__4185_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__4185_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__4185_SHARP_.call(null, x, y, z));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__4216__4 = function() {
      var G__4217__delegate = function(x, y, z, args) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4186_SHARP_, p2__4187_SHARP_) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4186_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__4187_SHARP_, x, y, z, args));
        }, cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4217 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4218__i = 0, G__4218__a = new Array(arguments.length - 3);
          while (G__4218__i < G__4218__a.length) {
            G__4218__a[G__4218__i] = arguments[G__4218__i + 3];
            ++G__4218__i;
          }
          args = new cljs.core.IndexedSeq(G__4218__a, 0, null);
        }
        return G__4217__delegate.call(this, x, y, z, args);
      };
      G__4217.cljs$lang$maxFixedArity = 3;
      G__4217.cljs$lang$applyTo = function(arglist__4219) {
        var x = cljs.core.first(arglist__4219);
        arglist__4219 = cljs.core.next(arglist__4219);
        var y = cljs.core.first(arglist__4219);
        arglist__4219 = cljs.core.next(arglist__4219);
        var z = cljs.core.first(arglist__4219);
        var args = cljs.core.rest(arglist__4219);
        return G__4217__delegate(x, y, z, args);
      };
      G__4217.cljs$core$IFn$_invoke$arity$variadic = G__4217__delegate;
      return G__4217;
    }();
    G__4216 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4216__0.call(this);
        case 1:
          return G__4216__1.call(this, x);
        case 2:
          return G__4216__2.call(this, x, y);
        case 3:
          return G__4216__3.call(this, x, y, z);
        default:
          var G__4220 = null;
          if (arguments.length > 3) {
            var G__4221__i = 0, G__4221__a = new Array(arguments.length - 3);
            while (G__4221__i < G__4221__a.length) {
              G__4221__a[G__4221__i] = arguments[G__4221__i + 3];
              ++G__4221__i;
            }
            G__4220 = new cljs.core.IndexedSeq(G__4221__a, 0, null);
          }
          return G__4216__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4220);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4216.cljs$lang$maxFixedArity = 3;
    G__4216.cljs$lang$applyTo = G__4216__4.cljs$lang$applyTo;
    G__4216.cljs$core$IFn$_invoke$arity$0 = G__4216__0;
    G__4216.cljs$core$IFn$_invoke$arity$1 = G__4216__1;
    G__4216.cljs$core$IFn$_invoke$arity$2 = G__4216__2;
    G__4216.cljs$core$IFn$_invoke$arity$3 = G__4216__3;
    G__4216.cljs$core$IFn$_invoke$arity$variadic = G__4216__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4216;
  }();
};
cljs.core.juxt.cljs$lang$applyTo = function(seq4189) {
  var G__4190 = cljs.core.first(seq4189);
  var seq4189__$1 = cljs.core.next(seq4189);
  var G__4191 = cljs.core.first(seq4189__$1);
  var seq4189__$2 = cljs.core.next(seq4189__$1);
  var G__4192 = cljs.core.first(seq4189__$2);
  var seq4189__$3 = cljs.core.next(seq4189__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4190, G__4191, G__4192, seq4189__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var G__4223 = arguments.length;
  switch(G__4223) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var G__4225 = cljs.core.next(s);
      coll = G__4225;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__4226 = n - 1;
      var G__4227 = cljs.core.next(coll);
      n = G__4226;
      coll = G__4227;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var G__4229 = arguments.length;
  switch(G__4229) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (!(matches == null) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(matches[0], s)) {
      if (matches.length === 1) {
        return matches[0];
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (matches.length === 1) {
        return matches[0];
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq_STAR_ = function cljs$core$re_seq_STAR_(re, s) {
  var temp__5724__auto__ = re.exec(s);
  if (temp__5724__auto__ == null) {
    return null;
  } else {
    var matches = temp__5724__auto__;
    var match_str = matches[0];
    var match_vals = matches.length === 1 ? match_str : cljs.core.vec(matches);
    return cljs.core.cons(match_vals, new cljs.core.LazySeq(null, function() {
      var post_idx = matches.index + function() {
        var x__4214__auto__ = 1;
        var y__4215__auto__ = match_str.length;
        return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
      }();
      if (post_idx <= s.length) {
        var G__4231 = re;
        var G__4232 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, post_idx);
        return cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2(G__4231, G__4232) : cljs.core.re_seq_STAR_.call(null, G__4231, G__4232);
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  if (typeof s === "string") {
    return cljs.core.re_seq_STAR_(re, s);
  } else {
    throw new TypeError("re-seq must match against a string.");
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__4233 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4233, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4233, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, prefix == null ? 0 : prefix.length);
    return new RegExp(pattern, function() {
      var or__4126__auto__ = flags;
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR__orig_val__4236 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_level_STAR__temp_val__4237 = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__4237;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4126__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4126__auto__)) {
              return or__4126__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__4238_4244 = cljs.core.first(coll);
          var G__4239_4245 = writer;
          var G__4240_4246 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4238_4244, G__4239_4245, G__4240_4246) : print_one.call(null, G__4238_4244, G__4239_4245, G__4240_4246);
        } else {
        }
        var coll_4247__$1 = cljs.core.next(coll);
        var n_4248 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_4247__$1 && (n_4248 == null || !(n_4248 === 0))) {
            cljs.core._write(writer, sep);
            var G__4241_4249 = cljs.core.first(coll_4247__$1);
            var G__4242_4250 = writer;
            var G__4243_4251 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4241_4249, G__4242_4250, G__4243_4251) : print_one.call(null, G__4241_4249, G__4242_4250, G__4243_4251);
            var G__4252 = cljs.core.next(coll_4247__$1);
            var G__4253 = n_4248 - 1;
            coll_4247__$1 = G__4252;
            n_4248 = G__4253;
            continue;
          } else {
            if (cljs.core.seq(coll_4247__$1) && n_4248 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4126__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4126__auto__)) {
                  return or__4126__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__4236;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4260 = arguments.length;
  var i__4737__auto___4261 = 0;
  while (true) {
    if (i__4737__auto___4261 < len__4736__auto___4260) {
      args__4742__auto__.push(arguments[i__4737__auto___4261]);
      var G__4262 = i__4737__auto___4261 + 1;
      i__4737__auto___4261 = G__4262;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 1 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4743__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__4256 = cljs.core.seq(ss);
  var chunk__4257 = null;
  var count__4258 = 0;
  var i__4259 = 0;
  while (true) {
    if (i__4259 < count__4258) {
      var s = chunk__4257.cljs$core$IIndexed$_nth$arity$2(null, i__4259);
      cljs.core._write(writer, s);
      var G__4263 = seq__4256;
      var G__4264 = chunk__4257;
      var G__4265 = count__4258;
      var G__4266 = i__4259 + 1;
      seq__4256 = G__4263;
      chunk__4257 = G__4264;
      count__4258 = G__4265;
      i__4259 = G__4266;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__4256);
      if (temp__5720__auto__) {
        var seq__4256__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4256__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__4256__$1);
          var G__4267 = cljs.core.chunk_rest(seq__4256__$1);
          var G__4268 = c__4556__auto__;
          var G__4269 = cljs.core.count(c__4556__auto__);
          var G__4270 = 0;
          seq__4256 = G__4267;
          chunk__4257 = G__4268;
          count__4258 = G__4269;
          i__4259 = G__4270;
          continue;
        } else {
          var s = cljs.core.first(seq__4256__$1);
          cljs.core._write(writer, s);
          var G__4271 = cljs.core.next(seq__4256__$1);
          var G__4272 = null;
          var G__4273 = 0;
          var G__4274 = 0;
          seq__4256 = G__4271;
          chunk__4257 = G__4272;
          count__4258 = G__4273;
          i__4259 = G__4274;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq4254) {
  var G__4255 = cljs.core.first(seq4254);
  var seq4254__$1 = cljs.core.next(seq4254);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4255, seq4254__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  if (cljs.core._STAR_print_fn_STAR_ == null) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  } else {
  }
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj4276 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj4276;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return ['"', cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), '"'].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  if (cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)))) {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IMeta$ ? true : false : false) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      cljs.core.pr_writer(cljs.core.meta(obj), writer, opts);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IPrintWithWriter$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj)) {
        return cljs.core._pr_writer(obj, writer, opts);
      } else {
        if (obj === true || obj === false) {
          return cljs.core._write(writer, cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
        } else {
          if (typeof obj === "number") {
            return cljs.core._write(writer, isNaN(obj) ? "##NaN" : obj === Number.POSITIVE_INFINITY ? "##Inf" : obj === Number.NEGATIVE_INFINITY ? "##-Inf" : cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
          } else {
            if (cljs.core.object_QMARK_(obj)) {
              cljs.core._write(writer, "#js ");
              return cljs.core.print_map(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                return new cljs.core.MapEntry(function() {
                  var G__4282 = k;
                  if (!(cljs.core.re_matches(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/, k) == null)) {
                    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(G__4282);
                  } else {
                    return G__4282;
                  }
                }(), obj[k], null);
              }, cljs.core.js_keys(obj)), cljs.core.pr_writer, writer, opts);
            } else {
              if (cljs.core.array_QMARK_(obj)) {
                return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
              } else {
                if (goog.isString(obj)) {
                  if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                    return cljs.core._write(writer, cljs.core.quote_string(obj));
                  } else {
                    return cljs.core._write(writer, obj);
                  }
                } else {
                  if (goog.isFunction(obj)) {
                    var name = obj.name;
                    var name__$1 = name == null || goog.string.isEmpty(name) ? "Function" : name;
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, cljs.core.truth_(cljs.core._STAR_print_fn_bodies_STAR_) ? [' "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), '"'].join("") : "", "]"], 0));
                  } else {
                    if (obj instanceof Date) {
                      var normalize = function(n, len) {
                        var ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                        while (true) {
                          if (ns.length < len) {
                            var G__4285 = ["0", ns].join("");
                            ns = G__4285;
                            continue;
                          } else {
                            return ns;
                          }
                          break;
                        }
                      };
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#inst "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                    } else {
                      if (cljs.core.regexp_QMARK_(obj)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#"', obj.source, '"'], 0));
                      } else {
                        if (cljs.core.js_symbol_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", obj.toString(), "]"], 0));
                        } else {
                          if (cljs.core.truth_(function() {
                            var G__4283 = obj;
                            var G__4283__$1 = G__4283 == null ? null : G__4283.constructor;
                            if (G__4283__$1 == null) {
                              return null;
                            } else {
                              return G__4283__$1.cljs$lang$ctorStr;
                            }
                          }())) {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                          } else {
                            var name = function() {
                              var G__4284 = obj;
                              var G__4284__$1 = G__4284 == null ? null : G__4284.constructor;
                              if (G__4284__$1 == null) {
                                return null;
                              } else {
                                return G__4284__$1.name;
                              }
                            }();
                            var name__$1 = name == null || goog.string.isEmpty(name) ? "Object" : name;
                            if (obj.constructor == null) {
                              return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, "]"], 0));
                            } else {
                              return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "]"], 0));
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__5718__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var alt_impl = temp__5718__auto__;
    var G__4286 = obj;
    var G__4287 = writer;
    var G__4288 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__4286, G__4287, G__4288) : alt_impl.call(null, G__4286, G__4287, G__4288);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__4289 = cljs.core.seq(cljs.core.next(objs));
  var chunk__4290 = null;
  var count__4291 = 0;
  var i__4292 = 0;
  while (true) {
    if (i__4292 < count__4291) {
      var obj = chunk__4290.cljs$core$IIndexed$_nth$arity$2(null, i__4292);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__4293 = seq__4289;
      var G__4294 = chunk__4290;
      var G__4295 = count__4291;
      var G__4296 = i__4292 + 1;
      seq__4289 = G__4293;
      chunk__4290 = G__4294;
      count__4291 = G__4295;
      i__4292 = G__4296;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__4289);
      if (temp__5720__auto__) {
        var seq__4289__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4289__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__4289__$1);
          var G__4297 = cljs.core.chunk_rest(seq__4289__$1);
          var G__4298 = c__4556__auto__;
          var G__4299 = cljs.core.count(c__4556__auto__);
          var G__4300 = 0;
          seq__4289 = G__4297;
          chunk__4290 = G__4298;
          count__4291 = G__4299;
          i__4292 = G__4300;
          continue;
        } else {
          var obj = cljs.core.first(seq__4289__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__4301 = cljs.core.next(seq__4289__$1);
          var G__4302 = null;
          var G__4303 = 0;
          var G__4304 = 0;
          seq__4289 = G__4301;
          chunk__4290 = G__4302;
          count__4291 = G__4303;
          i__4292 = G__4304;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(objs, opts));
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var G__4306 = arguments.length;
  switch(G__4306) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4309 = arguments.length;
  var i__4737__auto___4310 = 0;
  while (true) {
    if (i__4737__auto___4310 < len__4736__auto___4309) {
      args__4742__auto__.push(arguments[i__4737__auto___4310]);
      var G__4311 = i__4737__auto___4310 + 1;
      i__4737__auto___4310 = G__4311;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq4308) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4308));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4313 = arguments.length;
  var i__4737__auto___4314 = 0;
  while (true) {
    if (i__4737__auto___4314 < len__4736__auto___4313) {
      args__4742__auto__.push(arguments[i__4737__auto___4314]);
      var G__4315 = i__4737__auto___4314 + 1;
      i__4737__auto___4314 = G__4315;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq4312) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4312));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4317 = arguments.length;
  var i__4737__auto___4318 = 0;
  while (true) {
    if (i__4737__auto___4318 < len__4736__auto___4317) {
      args__4742__auto__.push(arguments[i__4737__auto___4318]);
      var G__4319 = i__4737__auto___4318 + 1;
      i__4737__auto___4318 = G__4319;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq4316) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4316));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__4320__i = 0, G__4320__a = new Array(arguments.length - 0);
      while (G__4320__i < G__4320__a.length) {
        G__4320__a[G__4320__i] = arguments[G__4320__i + 0];
        ++G__4320__i;
      }
      objs = new cljs.core.IndexedSeq(G__4320__a, 0, null);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__4321) {
    var objs = cljs.core.seq(arglist__4321);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4323 = arguments.length;
  var i__4737__auto___4324 = 0;
  while (true) {
    if (i__4737__auto___4324 < len__4736__auto___4323) {
      args__4742__auto__.push(arguments[i__4737__auto___4324]);
      var G__4325 = i__4737__auto___4324 + 1;
      i__4737__auto___4324 = G__4325;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq4322) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4322));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4327 = arguments.length;
  var i__4737__auto___4328 = 0;
  while (true) {
    if (i__4737__auto___4328 < len__4736__auto___4327) {
      args__4742__auto__.push(arguments[i__4737__auto___4328]);
      var G__4329 = i__4737__auto___4328 + 1;
      i__4737__auto___4328 = G__4329;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq4326) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4326));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4331 = arguments.length;
  var i__4737__auto___4332 = 0;
  while (true) {
    if (i__4737__auto___4332 < len__4736__auto___4331) {
      args__4742__auto__.push(arguments[i__4737__auto___4332]);
      var G__4333 = i__4737__auto___4332 + 1;
      i__4737__auto___4332 = G__4333;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq4330) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4330));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4335 = arguments.length;
  var i__4737__auto___4336 = 0;
  while (true) {
    if (i__4737__auto___4336 < len__4736__auto___4335) {
      args__4742__auto__.push(arguments[i__4737__auto___4336]);
      var G__4337 = i__4737__auto___4336 + 1;
      i__4737__auto___4336 = G__4337;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq4334) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4334));
};
cljs.core.strip_ns = function cljs$core$strip_ns(named) {
  if (named instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  } else {
    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  }
};
cljs.core.lift_ns = function cljs$core$lift_ns(m) {
  if (cljs.core.truth_(cljs.core._STAR_print_namespace_maps_STAR_)) {
    var ns = null;
    var G__4344 = cljs.core.seq(m);
    var vec__4345 = G__4344;
    var seq__4346 = cljs.core.seq(vec__4345);
    var first__4347 = cljs.core.first(seq__4346);
    var seq__4346__$1 = cljs.core.next(seq__4346);
    var vec__4348 = first__4347;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4348, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4348, 1, null);
    var entry = vec__4348;
    var entries = seq__4346__$1;
    var lm = cljs.core.empty(m);
    var ns__$1 = ns;
    var G__4344__$1 = G__4344;
    var lm__$1 = lm;
    while (true) {
      var ns__$2 = ns__$1;
      var vec__4357 = G__4344__$1;
      var seq__4358 = cljs.core.seq(vec__4357);
      var first__4359 = cljs.core.first(seq__4358);
      var seq__4358__$1 = cljs.core.next(seq__4358);
      var vec__4360 = first__4359;
      var k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4360, 0, null);
      var v__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4360, 1, null);
      var entry__$1 = vec__4360;
      var entries__$1 = seq__4358__$1;
      var lm__$2 = lm__$1;
      if (cljs.core.truth_(entry__$1)) {
        if (k__$1 instanceof cljs.core.Keyword || k__$1 instanceof cljs.core.Symbol) {
          if (cljs.core.truth_(ns__$2)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns__$2, cljs.core.namespace(k__$1))) {
              var G__4363 = ns__$2;
              var G__4364 = entries__$1;
              var G__4365 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__4363;
              G__4344__$1 = G__4364;
              lm__$1 = G__4365;
              continue;
            } else {
              return null;
            }
          } else {
            var temp__5720__auto__ = cljs.core.namespace(k__$1);
            if (cljs.core.truth_(temp__5720__auto__)) {
              var new_ns = temp__5720__auto__;
              var G__4366 = new_ns;
              var G__4367 = entries__$1;
              var G__4368 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__4366;
              G__4344__$1 = G__4367;
              lm__$1 = G__4368;
              continue;
            } else {
              return null;
            }
          }
        } else {
          return null;
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$2, lm__$2], null);
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.print_prefix_map = function cljs$core$print_prefix_map(prefix, m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__4369_4375 = cljs.core.key(e);
    var G__4370_4376 = w;
    var G__4371_4377 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4369_4375, G__4370_4376, G__4371_4377) : print_one.call(null, G__4369_4375, G__4370_4376, G__4371_4377);
    cljs.core._write(w, " ");
    var G__4372 = cljs.core.val(e);
    var G__4373 = w;
    var G__4374 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4372, G__4373, G__4374) : print_one.call(null, G__4372, G__4373, G__4374);
  }, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), "{"].join(""), ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  var vec__4378 = cljs.core.map_QMARK_(m) ? cljs.core.lift_ns(m) : null;
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4378, 0, null);
  var lift_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4378, 1, null);
  if (cljs.core.truth_(ns)) {
    return cljs.core.print_prefix_map(["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(""), lift_map, print_one, writer, opts);
  } else {
    return cljs.core.print_prefix_map(null, m, print_one, writer, opts);
  }
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.MapEntry.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.BlackNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.RedNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4384 = arguments.length;
  var i__4737__auto___4385 = 0;
  while (true) {
    if (i__4737__auto___4385 < len__4736__auto___4384) {
      args__4742__auto__.push(arguments[i__4737__auto___4385]);
      var G__4386 = i__4737__auto___4385 + 1;
      i__4737__auto___4385 = G__4386;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 2 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4743__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq4381) {
  var G__4382 = cljs.core.first(seq4381);
  var seq4381__$1 = cljs.core.next(seq4381);
  var G__4383 = cljs.core.first(seq4381__$1);
  var seq4381__$2 = cljs.core.next(seq4381__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4382, G__4383, seq4381__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var G__4388 = arguments.length;
  switch(G__4388) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Delay ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), self__.f == null ? new cljs.core.Keyword(null, "ready", "ready", 1086465795) : new cljs.core.Keyword(null, "pending", "pending", -220036727), new cljs.core.Keyword(null, "val", "val", 128701612), self__.value], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__4390_SHARP_, p2__4391_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__4390_SHARP_, p2__4391_SHARP_) : rf.call(null, p1__4390_SHARP_, p2__4391_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function() {
    var G__4392 = null;
    var G__4392__0 = function() {
      return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
    };
    var G__4392__1 = function(result) {
      return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
    };
    var G__4392__2 = function(result, input) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
    };
    G__4392 = function(result, input) {
      switch(arguments.length) {
        case 0:
          return G__4392__0.call(this);
        case 1:
          return G__4392__1.call(this, result);
        case 2:
          return G__4392__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4392.cljs$core$IFn$_invoke$arity$0 = G__4392__0;
    G__4392.cljs$core$IFn$_invoke$arity$1 = G__4392__1;
    G__4392.cljs$core$IFn$_invoke$arity$2 = G__4392__2;
    return G__4392;
  }();
};
cljs.core.halt_when = function cljs$core$halt_when(var_args) {
  var G__4394 = arguments.length;
  switch(G__4394) {
    case 1:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(pred, null);
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 = function(pred, retf) {
  return function(rf) {
    return function() {
      var G__4398 = null;
      var G__4398__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4398__1 = function(result) {
        if (cljs.core.map_QMARK_(result) && cljs.core.contains_QMARK_(result, new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715))) {
          return (new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)).cljs$core$IFn$_invoke$arity$1(result);
        } else {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        }
      };
      var G__4398__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return cljs.core.reduced(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715), cljs.core.truth_(retf) ? function() {
            var G__4395 = rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
            var G__4396 = input;
            return retf.cljs$core$IFn$_invoke$arity$2 ? retf.cljs$core$IFn$_invoke$arity$2(G__4395, G__4396) : retf.call(null, G__4395, G__4396);
          }() : input], null));
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__4398 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4398__0.call(this);
          case 1:
            return G__4398__1.call(this, result);
          case 2:
            return G__4398__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4398.cljs$core$IFn$_invoke$arity$0 = G__4398__0;
      G__4398.cljs$core$IFn$_invoke$arity$1 = G__4398__1;
      G__4398.cljs$core$IFn$_invoke$arity$2 = G__4398__2;
      return G__4398;
    }();
  };
};
cljs.core.halt_when.cljs$lang$maxFixedArity = 2;
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var G__4400 = arguments.length;
  switch(G__4400) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function() {
      var G__4402 = null;
      var G__4402__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4402__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__4402__2 = function(result, input) {
        var prior = cljs.core.deref(pa);
        cljs.core.vreset_BANG_(pa, input);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__4402 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4402__0.call(this);
          case 1:
            return G__4402__1.call(this, result);
          case 2:
            return G__4402__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4402.cljs$core$IFn$_invoke$arity$0 = G__4402__0;
      G__4402.cljs$core$IFn$_invoke$arity$1 = G__4402__1;
      G__4402.cljs$core$IFn$_invoke$arity$2 = G__4402__2;
      return G__4402;
    }();
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var G__4404 = arguments.length;
  switch(G__4404) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__4406 = null;
  var G__4406__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__4406__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__4406 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4406__1.call(this, x);
      case 2:
        return G__4406__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4406.cljs$core$IFn$_invoke$arity$1 = G__4406__1;
  G__4406.cljs$core$IFn$_invoke$arity$2 = G__4406__2;
  return G__4406;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__4407 = null;
  var G__4407__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__4407__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__4407 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4407__1.call(this, x);
      case 2:
        return G__4407__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4407.cljs$core$IFn$_invoke$arity$1 = G__4407__1;
  G__4407.cljs$core$IFn$_invoke$arity$2 = G__4407__2;
  return G__4407;
}();
cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.TransformerIterator.create(self__.xform, cljs.core.iter(self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
goog.object.set(cljs.core.Eduction.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4409 = arguments.length;
  var i__4737__auto___4410 = 0;
  while (true) {
    if (i__4737__auto___4410 < len__4736__auto___4409) {
      args__4742__auto__.push(arguments[i__4737__auto___4410]);
      var G__4411 = i__4737__auto___4410 + 1;
      i__4737__auto___4410 = G__4411;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq4408) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4408));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4413_SHARP_, p2__4412_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__4412_SHARP_) : proc.call(null, p2__4412_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
var cljs$core$IEncodeJS$_clj__GT_js$dyn_4414 = function(x) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4429__auto__.call(null, x);
  } else {
    var m__4426__auto__ = cljs.core._clj__GT_js["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4426__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
    }
  }
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    return cljs$core$IEncodeJS$_clj__GT_js$dyn_4414(x);
  }
};
var cljs$core$IEncodeJS$_key__GT_js$dyn_4415 = function(x) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4429__auto__.call(null, x);
  } else {
    var m__4426__auto__ = cljs.core._key__GT_js["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4426__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    return cljs$core$IEncodeJS$_key__GT_js$dyn_4415(x);
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(var_args) {
  var G__4417 = arguments.length;
  switch(G__4417) {
    case 1:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1 = function(k) {
  return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, cljs.core.clj__GT_js);
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2 = function(k, primitive_fn) {
  if (!(k == null) ? false || cljs.core.PROTOCOL_SENTINEL === k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return primitive_fn.cljs$core$IFn$_invoke$arity$1 ? primitive_fn.cljs$core$IFn$_invoke$arity$1(k) : primitive_fn.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([k], 0));
    }
  }
};
cljs.core.key__GT_js.cljs$lang$maxFixedArity = 2;
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4471 = arguments.length;
  var i__4737__auto___4472 = 0;
  while (true) {
    if (i__4737__auto___4472 < len__4736__auto___4471) {
      args__4742__auto__.push(arguments[i__4737__auto___4472]);
      var G__4473 = i__4737__auto___4472 + 1;
      i__4737__auto___4472 = G__4473;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 1 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(1), 0, null) : null;
  return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4743__auto__);
};
cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic = function(x, p__4422) {
  var map__4423 = p__4422;
  var map__4423__$1 = (!(map__4423 == null) ? map__4423.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4423.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__4423) : map__4423;
  var options = map__4423__$1;
  var keyword_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__4423__$1, new cljs.core.Keyword(null, "keyword-fn", "keyword-fn", -64566675), cljs.core.name);
  var keyfn = function cljs$core$keyfn(k) {
    return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, thisfn);
  };
  var thisfn = function cljs$core$thisfn(x__$1) {
    if (x__$1 == null) {
      return null;
    } else {
      if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeJS$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1)) {
        return cljs.core._clj__GT_js(x__$1);
      } else {
        if (x__$1 instanceof cljs.core.Keyword) {
          return keyword_fn.cljs$core$IFn$_invoke$arity$1 ? keyword_fn.cljs$core$IFn$_invoke$arity$1(x__$1) : keyword_fn.call(null, x__$1);
        } else {
          if (x__$1 instanceof cljs.core.Symbol) {
            return cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
          } else {
            if (cljs.core.map_QMARK_(x__$1)) {
              var m = {};
              var seq__4451_4474 = cljs.core.seq(x__$1);
              var chunk__4452_4475 = null;
              var count__4453_4476 = 0;
              var i__4454_4477 = 0;
              while (true) {
                if (i__4454_4477 < count__4453_4476) {
                  var vec__4461_4478 = chunk__4452_4475.cljs$core$IIndexed$_nth$arity$2(null, i__4454_4477);
                  var k_4479 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4461_4478, 0, null);
                  var v_4480 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4461_4478, 1, null);
                  goog.object.set(m, keyfn(k_4479), cljs$core$thisfn(v_4480));
                  var G__4481 = seq__4451_4474;
                  var G__4482 = chunk__4452_4475;
                  var G__4483 = count__4453_4476;
                  var G__4484 = i__4454_4477 + 1;
                  seq__4451_4474 = G__4481;
                  chunk__4452_4475 = G__4482;
                  count__4453_4476 = G__4483;
                  i__4454_4477 = G__4484;
                  continue;
                } else {
                  var temp__5720__auto___4485 = cljs.core.seq(seq__4451_4474);
                  if (temp__5720__auto___4485) {
                    var seq__4451_4486__$1 = temp__5720__auto___4485;
                    if (cljs.core.chunked_seq_QMARK_(seq__4451_4486__$1)) {
                      var c__4556__auto___4487 = cljs.core.chunk_first(seq__4451_4486__$1);
                      var G__4488 = cljs.core.chunk_rest(seq__4451_4486__$1);
                      var G__4489 = c__4556__auto___4487;
                      var G__4490 = cljs.core.count(c__4556__auto___4487);
                      var G__4491 = 0;
                      seq__4451_4474 = G__4488;
                      chunk__4452_4475 = G__4489;
                      count__4453_4476 = G__4490;
                      i__4454_4477 = G__4491;
                      continue;
                    } else {
                      var vec__4464_4492 = cljs.core.first(seq__4451_4486__$1);
                      var k_4493 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4464_4492, 0, null);
                      var v_4494 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4464_4492, 1, null);
                      goog.object.set(m, keyfn(k_4493), cljs$core$thisfn(v_4494));
                      var G__4495 = cljs.core.next(seq__4451_4486__$1);
                      var G__4496 = null;
                      var G__4497 = 0;
                      var G__4498 = 0;
                      seq__4451_4474 = G__4495;
                      chunk__4452_4475 = G__4496;
                      count__4453_4476 = G__4497;
                      i__4454_4477 = G__4498;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return m;
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                var arr = [];
                var seq__4467_4499 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
                var chunk__4468_4500 = null;
                var count__4469_4501 = 0;
                var i__4470_4502 = 0;
                while (true) {
                  if (i__4470_4502 < count__4469_4501) {
                    var x_4503__$2 = chunk__4468_4500.cljs$core$IIndexed$_nth$arity$2(null, i__4470_4502);
                    arr.push(x_4503__$2);
                    var G__4504 = seq__4467_4499;
                    var G__4505 = chunk__4468_4500;
                    var G__4506 = count__4469_4501;
                    var G__4507 = i__4470_4502 + 1;
                    seq__4467_4499 = G__4504;
                    chunk__4468_4500 = G__4505;
                    count__4469_4501 = G__4506;
                    i__4470_4502 = G__4507;
                    continue;
                  } else {
                    var temp__5720__auto___4508 = cljs.core.seq(seq__4467_4499);
                    if (temp__5720__auto___4508) {
                      var seq__4467_4509__$1 = temp__5720__auto___4508;
                      if (cljs.core.chunked_seq_QMARK_(seq__4467_4509__$1)) {
                        var c__4556__auto___4510 = cljs.core.chunk_first(seq__4467_4509__$1);
                        var G__4511 = cljs.core.chunk_rest(seq__4467_4509__$1);
                        var G__4512 = c__4556__auto___4510;
                        var G__4513 = cljs.core.count(c__4556__auto___4510);
                        var G__4514 = 0;
                        seq__4467_4499 = G__4511;
                        chunk__4468_4500 = G__4512;
                        count__4469_4501 = G__4513;
                        i__4470_4502 = G__4514;
                        continue;
                      } else {
                        var x_4515__$2 = cljs.core.first(seq__4467_4509__$1);
                        arr.push(x_4515__$2);
                        var G__4516 = cljs.core.next(seq__4467_4509__$1);
                        var G__4517 = null;
                        var G__4518 = 0;
                        var G__4519 = 0;
                        seq__4467_4499 = G__4516;
                        chunk__4468_4500 = G__4517;
                        count__4469_4501 = G__4518;
                        i__4470_4502 = G__4519;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                return arr;
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    }
  };
  return thisfn(x);
};
cljs.core.clj__GT_js.cljs$lang$maxFixedArity = 1;
cljs.core.clj__GT_js.cljs$lang$applyTo = function(seq4420) {
  var G__4421 = cljs.core.first(seq4420);
  var seq4420__$1 = cljs.core.next(seq4420);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4421, seq4420__$1);
};
cljs.core.IEncodeClojure = function() {
};
var cljs$core$IEncodeClojure$_js__GT_clj$dyn_4520 = function(x, options) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4429__auto__.call(null, x, options);
  } else {
    var m__4426__auto__ = cljs.core._js__GT_clj["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4426__auto__.call(null, x, options);
    } else {
      throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
    }
  }
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    return cljs$core$IEncodeClojure$_js__GT_clj$dyn_4520(x, options);
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var G__4526 = arguments.length;
  switch(G__4526) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___4531 = arguments.length;
      var i__4737__auto___4532 = 0;
      while (true) {
        if (i__4737__auto___4532 < len__4736__auto___4531) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___4532]);
          var G__4533 = i__4737__auto___4532 + 1;
          i__4737__auto___4532 = G__4533;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4758__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__4527 = opts;
  var map__4527__$1 = (!(map__4527 == null) ? map__4527.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4527.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__4527) : map__4527;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4527__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function cljs$core$thisfn(x__$1) {
    if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
      return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
    } else {
      if (cljs.core.seq_QMARK_(x__$1)) {
        return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
      } else {
        if (cljs.core.map_entry_QMARK_(x__$1)) {
          return new cljs.core.MapEntry(cljs$core$thisfn(cljs.core.key(x__$1)), cljs$core$thisfn(cljs.core.val(x__$1)), null);
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs$core$thisfn), x__$1);
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4521_SHARP_, p2__4522_SHARP_) {
                return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(p1__4521_SHARP_, cljs$core$thisfn(p2__4522_SHARP_));
              }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(r, k) {
                  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(r, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(goog.object.get(x__$1, k)));
                }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), cljs.core.js_keys(x__$1)));
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    }
  };
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq4524) {
  var G__4525 = cljs.core.first(seq4524);
  var seq4524__$1 = cljs.core.next(seq4524);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4525, seq4524__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__4534__delegate = function(args) {
      var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(mem), args, cljs.core.lookup_sentinel);
      if (v === cljs.core.lookup_sentinel) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
        return ret;
      } else {
        return v;
      }
    };
    var G__4534 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__4535__i = 0, G__4535__a = new Array(arguments.length - 0);
        while (G__4535__i < G__4535__a.length) {
          G__4535__a[G__4535__i] = arguments[G__4535__i + 0];
          ++G__4535__i;
        }
        args = new cljs.core.IndexedSeq(G__4535__a, 0, null);
      }
      return G__4534__delegate.call(this, args);
    };
    G__4534.cljs$lang$maxFixedArity = 0;
    G__4534.cljs$lang$applyTo = function(arglist__4536) {
      var args = cljs.core.seq(arglist__4536);
      return G__4534__delegate(args);
    };
    G__4534.cljs$core$IFn$_invoke$arity$variadic = G__4534__delegate;
    return G__4534;
  }();
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var G__4540 = arguments.length;
  switch(G__4540) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___4542 = arguments.length;
      var i__4737__auto___4543 = 0;
      while (true) {
        if (i__4737__auto___4543 < len__4736__auto___4542) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___4543]);
          var G__4544 = i__4737__auto___4543 + 1;
          i__4737__auto___4543 = G__4544;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4758__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__4545 = ret;
      f = G__4545;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq4538) {
  var G__4539 = cljs.core.first(seq4538);
  var seq4538__$1 = cljs.core.next(seq4538);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4539, seq4538__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var G__4547 = arguments.length;
  switch(G__4547) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__4549 = Math.random() * n;
  return Math.floor(G__4549);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy());
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___4552 = arguments.length;
  var i__4737__auto___4553 = 0;
  while (true) {
    if (i__4737__auto___4553 < len__4736__auto___4552) {
      args__4742__auto__.push(arguments[i__4737__auto___4553]);
      var G__4554 = i__4737__auto___4553 + 1;
      i__4737__auto___4553 = G__4554;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 1 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4743__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq4550) {
  var G__4551 = cljs.core.first(seq4550);
  var seq4550__$1 = cljs.core.next(seq4550);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4551, seq4550__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var G__4556 = arguments.length;
  switch(G__4556) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4126__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    var or__4126__auto____$1 = cljs.core.contains_QMARK_(function() {
      var fexpr__4559 = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
      return fexpr__4559.cljs$core$IFn$_invoke$arity$1 ? fexpr__4559.cljs$core$IFn$_invoke$arity$1(child) : fexpr__4559.call(null, child);
    }(), parent);
    if (or__4126__auto____$1) {
      return or__4126__auto____$1;
    } else {
      if (cljs.core.vector_QMARK_(parent)) {
        if (cljs.core.vector_QMARK_(child)) {
          if (cljs.core.count(parent) === cljs.core.count(child)) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__4561 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__4562 = i + 1;
                ret = G__4561;
                i = G__4562;
                continue;
              }
              break;
            }
          } else {
            return false;
          }
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var G__4564 = arguments.length;
  switch(G__4564) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var G__4567 = arguments.length;
  switch(G__4567) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var G__4570 = arguments.length;
  switch(G__4570) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var G__4573 = arguments.length;
  switch(G__4573) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(m, source, sources, target, targets) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, k) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
    }, m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
  };
  var or__4126__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "already has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "as ancestor"].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error(["Cyclic derivation:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "as ancestor"].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var G__4579 = arguments.length;
  switch(G__4579) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__4575_SHARP_) {
    return cljs.core.cons(cljs.core.first(p1__4575_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__4575_SHARP_), cljs.core.second(p1__4575_SHARP_)));
  }, cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4576_SHARP_, p2__4577_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__4576_SHARP_, p2__4577_SHARP_);
    }, cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref(method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref(hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var fexpr__4581 = cljs.core.deref(prefer_table);
    return fexpr__4581.cljs$core$IFn$_invoke$arity$1 ? fexpr__4581.cljs$core$IFn$_invoke$arity$1(x) : fexpr__4581.call(null, x);
  }();
  var or__4126__auto__ = cljs.core.truth_(function() {
    var and__4115__auto__ = xprefs;
    if (cljs.core.truth_(and__4115__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4115__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    var or__4126__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(function() {
            var G__4585 = x;
            var G__4586 = cljs.core.first(ps);
            var G__4587 = prefer_table;
            return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__4585, G__4586, G__4587) : cljs.core.prefers_STAR_.call(null, G__4585, G__4586, G__4587);
          }())) {
          } else {
          }
          var G__4594 = cljs.core.rest(ps);
          ps = G__4594;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4126__auto____$1)) {
      return or__4126__auto____$1;
    } else {
      var or__4126__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(function() {
              var G__4591 = cljs.core.first(ps);
              var G__4592 = y;
              var G__4593 = prefer_table;
              return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__4591, G__4592, G__4593) : cljs.core.prefers_STAR_.call(null, G__4591, G__4592, G__4593);
            }())) {
            } else {
            }
            var G__4595 = cljs.core.rest(ps);
            ps = G__4595;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4126__auto____$2)) {
        return or__4126__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table, hierarchy) {
  var or__4126__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(hierarchy, x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__4596) {
    var vec__4597 = p__4596;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4597, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4597, 1, null);
    var e = vec__4597;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy), dispatch_val, k)) {
      var be2 = be == null || cljs.core.dominates(k, cljs.core.first(be), prefer_table, cljs.core.deref(hierarchy)) ? e : be;
      if (cljs.core.dominates(cljs.core.first(be2), k, prefer_table, cljs.core.deref(hierarchy))) {
      } else {
        throw new Error(["Multiple methods in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' match dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val), " -\x3e ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(be2)), ", and neither is preferred"].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref(method_table));
  var best_entry__$1 = function() {
    var temp__5718__auto__ = best_entry == null ? function() {
      var fexpr__4601 = cljs.core.deref(method_table);
      return fexpr__4601.cljs$core$IFn$_invoke$arity$1 ? fexpr__4601.cljs$core$IFn$_invoke$arity$1(default_dispatch_val) : fexpr__4601.call(null, default_dispatch_val);
    }() : false;
    if (cljs.core.truth_(temp__5718__auto__)) {
      var entry = temp__5718__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_dispatch_val, entry], null);
    } else {
      return best_entry;
    }
  }();
  if (cljs.core.truth_(best_entry__$1)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy), cljs.core.deref(hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry__$1));
      return cljs.core.second(best_entry__$1);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) : cljs.core.find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
var cljs$core$IMultiFn$_reset$dyn_4602 = function(mf) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._reset[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4429__auto__.call(null, mf);
  } else {
    var m__4426__auto__ = cljs.core._reset["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4426__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
    }
  }
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_reset$dyn_4602(mf);
  }
};
var cljs$core$IMultiFn$_add_method$dyn_4603 = function(mf, dispatch_val, method) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._add_method[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4429__auto__.call(null, mf, dispatch_val, method);
  } else {
    var m__4426__auto__ = cljs.core._add_method["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4426__auto__.call(null, mf, dispatch_val, method);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    return cljs$core$IMultiFn$_add_method$dyn_4603(mf, dispatch_val, method);
  }
};
var cljs$core$IMultiFn$_remove_method$dyn_4604 = function(mf, dispatch_val) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._remove_method[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4429__auto__.call(null, mf, dispatch_val);
  } else {
    var m__4426__auto__ = cljs.core._remove_method["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4426__auto__.call(null, mf, dispatch_val);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    return cljs$core$IMultiFn$_remove_method$dyn_4604(mf, dispatch_val);
  }
};
var cljs$core$IMultiFn$_prefer_method$dyn_4605 = function(mf, dispatch_val, dispatch_val_y) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._prefer_method[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4429__auto__.call(null, mf, dispatch_val, dispatch_val_y);
  } else {
    var m__4426__auto__ = cljs.core._prefer_method["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4426__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    return cljs$core$IMultiFn$_prefer_method$dyn_4605(mf, dispatch_val, dispatch_val_y);
  }
};
var cljs$core$IMultiFn$_get_method$dyn_4606 = function(mf, dispatch_val) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._get_method[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4429__auto__.call(null, mf, dispatch_val);
  } else {
    var m__4426__auto__ = cljs.core._get_method["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4426__auto__.call(null, mf, dispatch_val);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    return cljs$core$IMultiFn$_get_method$dyn_4606(mf, dispatch_val);
  }
};
var cljs$core$IMultiFn$_methods$dyn_4607 = function(mf) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._methods[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4429__auto__.call(null, mf);
  } else {
    var m__4426__auto__ = cljs.core._methods["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4426__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_methods$dyn_4607(mf);
  }
};
var cljs$core$IMultiFn$_prefers$dyn_4608 = function(mf) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._prefers[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4429__auto__.call(null, mf);
  } else {
    var m__4426__auto__ = cljs.core._prefers["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4426__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_prefers$dyn_4608(mf);
  }
};
var cljs$core$IMultiFn$_default_dispatch_val$dyn_4609 = function(mf) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4429__auto__.call(null, mf);
  } else {
    var m__4426__auto__ = cljs.core._default_dispatch_val["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4426__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_default_dispatch_val$dyn_4609(mf);
  }
};
var cljs$core$IMultiFn$_dispatch_fn$dyn_4610 = function(mf) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4429__auto__.call(null, mf);
  } else {
    var m__4426__auto__ = cljs.core._dispatch_fn["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4426__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_dispatch_fn$dyn_4610(mf);
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error(["No method in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__4613 = null;
  var G__4613__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__4613__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__4613__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__4613__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__4613__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__4613__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__4613__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__4613__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__4613__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__4613__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__4613__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__4613__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__4613__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__4613__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__4613__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__4613__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__4613__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__4613__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__4613__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__4613__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__4613__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__4613__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__4613 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__4613__1.call(this, self__);
      case 2:
        return G__4613__2.call(this, self__, a);
      case 3:
        return G__4613__3.call(this, self__, a, b);
      case 4:
        return G__4613__4.call(this, self__, a, b, c);
      case 5:
        return G__4613__5.call(this, self__, a, b, c, d);
      case 6:
        return G__4613__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__4613__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__4613__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__4613__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__4613__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__4613__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__4613__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__4613__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__4613__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__4613__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__4613__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__4613__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__4613__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__4613__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__4613__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__4613__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__4613__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4613.cljs$core$IFn$_invoke$arity$1 = G__4613__1;
  G__4613.cljs$core$IFn$_invoke$arity$2 = G__4613__2;
  G__4613.cljs$core$IFn$_invoke$arity$3 = G__4613__3;
  G__4613.cljs$core$IFn$_invoke$arity$4 = G__4613__4;
  G__4613.cljs$core$IFn$_invoke$arity$5 = G__4613__5;
  G__4613.cljs$core$IFn$_invoke$arity$6 = G__4613__6;
  G__4613.cljs$core$IFn$_invoke$arity$7 = G__4613__7;
  G__4613.cljs$core$IFn$_invoke$arity$8 = G__4613__8;
  G__4613.cljs$core$IFn$_invoke$arity$9 = G__4613__9;
  G__4613.cljs$core$IFn$_invoke$arity$10 = G__4613__10;
  G__4613.cljs$core$IFn$_invoke$arity$11 = G__4613__11;
  G__4613.cljs$core$IFn$_invoke$arity$12 = G__4613__12;
  G__4613.cljs$core$IFn$_invoke$arity$13 = G__4613__13;
  G__4613.cljs$core$IFn$_invoke$arity$14 = G__4613__14;
  G__4613.cljs$core$IFn$_invoke$arity$15 = G__4613__15;
  G__4613.cljs$core$IFn$_invoke$arity$16 = G__4613__16;
  G__4613.cljs$core$IFn$_invoke$arity$17 = G__4613__17;
  G__4613.cljs$core$IFn$_invoke$arity$18 = G__4613__18;
  G__4613.cljs$core$IFn$_invoke$arity$19 = G__4613__19;
  G__4613.cljs$core$IFn$_invoke$arity$20 = G__4613__20;
  G__4613.cljs$core$IFn$_invoke$arity$21 = G__4613__21;
  G__4613.cljs$core$IFn$_invoke$arity$22 = G__4613__22;
  return G__4613;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args4611) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4611)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error(["Preference conflict in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), "': ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y), " is already preferred to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(old) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy), cljs.core.deref(self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__5718__auto__ = function() {
    var fexpr__4612 = cljs.core.deref(self__.method_cache);
    return fexpr__4612.cljs$core$IFn$_invoke$arity$1 ? fexpr__4612.cljs$core$IFn$_invoke$arity$1(dispatch_val) : fexpr__4612.call(null, dispatch_val);
  }();
  if (cljs.core.truth_(temp__5718__auto__)) {
    var target_fn = temp__5718__auto__;
    return target_fn;
  } else {
    return cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy, self__.default_dispatch_val);
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid), '"'].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return goog.array.defaultCompare(self__.uuid, other.uuid);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  if (typeof s === "string") {
  } else {
    throw new Error("Assert failed: (string? s)");
  }
  return new cljs.core.UUID(s.toLowerCase(), null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", "4", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(rhex), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex())].join(""));
};
cljs.core.uuid_QMARK_ = function cljs$core$uuid_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IUUID$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var G__4616 = arguments.length;
  switch(G__4616) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 24, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), "null", new cljs.core.Symbol(null, "case*", "case*", -1938255072, null), "null", new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), "null", new cljs.core.Symbol(null, "try", "try", -1273693247, null), "null", new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), "null", new cljs.core.Symbol(null, 
  "finally", "finally", -1065347064, null), "null", new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), "null", new cljs.core.Symbol(null, "do", "do", 1686842252, null), "null", new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), "null", new cljs.core.Symbol(null, "if", "if", 1181717262, null), "null", new cljs.core.Symbol(null, "new", "new", -444906321, null), "null", new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), "null", new cljs.core.Symbol(null, "deftype*", 
  "deftype*", 962659890, null), "null", new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), "null", new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), "null", new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), "null", new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), "null", new cljs.core.Symbol(null, "set!", "set!", 250714521, null), "null", new cljs.core.Symbol(null, ".", ".", 1975675962, null), "null", new cljs.core.Symbol(null, "var", "var", 870848730, 
  null), "null", new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "null", new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), "null", new cljs.core.Symbol(null, "throw", "throw", 595905694, null), "null", new cljs.core.Symbol(null, "def", "def", 597100991, null), "null"], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__4618 = v;
  var G__4618__$1 = G__4618 instanceof cljs.core.Keyword ? G__4618.fqn : null;
  switch(G__4618__$1) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.tag), " "].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["arguments", "abstract", "await", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", 
"throw", "throws", "transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null", "constructor"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4620_SHARP_, p2__4621_SHARP_) {
      goog.object.set(p1__4620_SHARP_, p2__4621_SHARP_, true);
      return p1__4620_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__4624 = cljs.core.next(ks__$1);
          var G__4625 = [function() {
            var G__4623 = ret;
            if (!(ret === "")) {
              return [G__4623, "|"].join("");
            } else {
              return G__4623;
            }
          }(), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__4624;
          ret = G__4625;
          continue;
        } else {
          return [ret, "|\\$"].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_4626 = 0;
  while (true) {
    if (i_4626 < name.length) {
      var c_4627 = name.charAt(i_4626);
      var sub_4628 = goog.object.get(cljs.core.CHAR_MAP, c_4627);
      if (!(sub_4628 == null)) {
        sb.append(sub_4628);
      } else {
        sb.append(c_4627);
      }
      var G__4629 = i_4626 + 1;
      i_4626 = G__4629;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [name_SINGLEQUOTE_, "$"].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return name_SINGLEQUOTE___$1;
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = goog.string.endsWith(munged_name, "$") ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__5718__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var match = temp__5718__auto__;
      var vec__4633 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4633, 0, null);
      var G__4636 = [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__4637 = r.lastIndex;
      ret = G__4636;
      last_match_end = G__4637;
      continue;
    } else {
      return [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  var G__4639 = function() {
    var name_SINGLEQUOTE_ = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str(name_SINGLEQUOTE_);
    }
  }();
  var fexpr__4638 = name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str;
  return fexpr__4638.cljs$core$IFn$_invoke$arity$1 ? fexpr__4638.cljs$core$IFn$_invoke$arity$1(G__4639) : fexpr__4638.call(null, G__4639);
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.tapset !== "undefined") {
} else {
  cljs.core.tapset = null;
}
cljs.core.maybe_init_tapset = function cljs$core$maybe_init_tapset() {
  if (cljs.core.tapset == null) {
    return cljs.core.tapset = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);
  } else {
    return null;
  }
};
cljs.core.add_tap = function cljs$core$add_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.conj, f);
  return null;
};
cljs.core.remove_tap = function cljs$core$remove_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.disj, f);
  return null;
};
cljs.core.tap_GT_ = function cljs$core$tap_GT_(x) {
  cljs.core.maybe_init_tapset();
  return cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1(function() {
    var seq__4640 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__4641 = null;
    var count__4642 = 0;
    var i__4643 = 0;
    while (true) {
      if (i__4643 < count__4642) {
        var tap = chunk__4641.cljs$core$IIndexed$_nth$arity$2(null, i__4643);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e4646) {
          if (e4646 instanceof Error) {
            var ex_4648 = e4646;
          } else {
            throw e4646;
          }
        }
        var G__4649 = seq__4640;
        var G__4650 = chunk__4641;
        var G__4651 = count__4642;
        var G__4652 = i__4643 + 1;
        seq__4640 = G__4649;
        chunk__4641 = G__4650;
        count__4642 = G__4651;
        i__4643 = G__4652;
        continue;
      } else {
        var temp__5720__auto__ = cljs.core.seq(seq__4640);
        if (temp__5720__auto__) {
          var seq__4640__$1 = temp__5720__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__4640__$1)) {
            var c__4556__auto__ = cljs.core.chunk_first(seq__4640__$1);
            var G__4653 = cljs.core.chunk_rest(seq__4640__$1);
            var G__4654 = c__4556__auto__;
            var G__4655 = cljs.core.count(c__4556__auto__);
            var G__4656 = 0;
            seq__4640 = G__4653;
            chunk__4641 = G__4654;
            count__4642 = G__4655;
            i__4643 = G__4656;
            continue;
          } else {
            var tap = cljs.core.first(seq__4640__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e4647) {
              if (e4647 instanceof Error) {
                var ex_4657 = e4647;
              } else {
                throw e4647;
              }
            }
            var G__4658 = cljs.core.next(seq__4640__$1);
            var G__4659 = null;
            var G__4660 = 0;
            var G__4661 = 0;
            seq__4640 = G__4658;
            chunk__4641 = G__4659;
            count__4642 = G__4660;
            i__4643 = G__4661;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }) : cljs.core._STAR_exec_tap_fn_STAR_.call(null, function() {
    var seq__4640 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__4641 = null;
    var count__4642 = 0;
    var i__4643 = 0;
    while (true) {
      if (i__4643 < count__4642) {
        var tap = chunk__4641.cljs$core$IIndexed$_nth$arity$2(null, i__4643);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e4646) {
          if (e4646 instanceof Error) {
            var ex_4662 = e4646;
          } else {
            throw e4646;
          }
        }
        var G__4663 = seq__4640;
        var G__4664 = chunk__4641;
        var G__4665 = count__4642;
        var G__4666 = i__4643 + 1;
        seq__4640 = G__4663;
        chunk__4641 = G__4664;
        count__4642 = G__4665;
        i__4643 = G__4666;
        continue;
      } else {
        var temp__5720__auto__ = cljs.core.seq(seq__4640);
        if (temp__5720__auto__) {
          var seq__4640__$1 = temp__5720__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__4640__$1)) {
            var c__4556__auto__ = cljs.core.chunk_first(seq__4640__$1);
            var G__4667 = cljs.core.chunk_rest(seq__4640__$1);
            var G__4668 = c__4556__auto__;
            var G__4669 = cljs.core.count(c__4556__auto__);
            var G__4670 = 0;
            seq__4640 = G__4667;
            chunk__4641 = G__4668;
            count__4642 = G__4669;
            i__4643 = G__4670;
            continue;
          } else {
            var tap = cljs.core.first(seq__4640__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e4647) {
              if (e4647 instanceof Error) {
                var ex_4671 = e4647;
              } else {
                throw e4647;
              }
            }
            var G__4672 = cljs.core.next(seq__4640__$1);
            var G__4673 = null;
            var G__4674 = 0;
            var G__4675 = 0;
            seq__4640 = G__4672;
            chunk__4641 = G__4673;
            count__4642 = G__4674;
            i__4643 = G__4675;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name);
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__4676 = goog.object.get(ctxt, cljs.core.first(xs));
        var G__4677 = cljs.core.next(xs);
        ctxt = G__4676;
        xs = G__4677;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns));
  var segs = munged_ns.split(".");
  var G__4678 = cljs.core._STAR_target_STAR_;
  switch(G__4678) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var ctxt = eval(cljs.core.first(segs));
            if (cljs.core.truth_(function() {
              var and__4115__auto__ = ctxt;
              if (cljs.core.truth_(and__4115__auto__)) {
                return cljs.core.object_QMARK_(ctxt);
              } else {
                return and__4115__auto__;
              }
            }())) {
              return ctxt;
            } else {
              return null;
            }
          } catch (e4679) {
            if (e4679 instanceof ReferenceError) {
              var e = e4679;
              return null;
            } else {
              throw e4679;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      }
      break;
    case "default":
    case "webworker":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error(["find-ns-obj not supported for target ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core._STAR_target_STAR_)].join(""));
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function cljs$core$ns_interns_STAR__$_step(ret, k) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function() {
      return goog.object.get(ns_obj, k);
    }, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym), cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
  };
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var G__4682 = arguments.length;
  switch(G__4682) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
  var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([ns_str, "$macros"].join("")) : ns;
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns__$1);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
cljs.core.uri_QMARK_ = function cljs$core$uri_QMARK_(x) {
  return x instanceof goog.Uri;
};
cljs.core.maybe_enable_print_BANG_ = function cljs$core$maybe_enable_print_BANG_() {
  if (typeof console !== "undefined") {
    return cljs.core.enable_console_print_BANG_();
  } else {
    if (cljs.core._STAR_target_STAR_ === "nashorn" || cljs.core._STAR_target_STAR_ === "graaljs") {
      var system = Java.type("java.lang.System");
      cljs.core._STAR_print_newline_STAR_ = false;
      cljs.core.set_print_fn_BANG_(function() {
        var xs = arguments;
        var s = goog.array.clone(xs).join("");
        return system.out.println(s);
      });
      return cljs.core.set_print_err_fn_BANG_(function() {
        var xs = arguments;
        var s = goog.array.clone(xs).join("");
        return system.error.println(s);
      });
    } else {
      return null;
    }
  }
};
cljs.core.maybe_enable_print_BANG_();
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_eval_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_eval_STAR_ = function cljs$core$_STAR_eval_STAR_(_) {
    throw new Error("cljs.core/*eval* not bound");
  };
}
cljs.core.eval = function cljs$core$eval(form) {
  return cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1(form) : cljs.core._STAR_eval_STAR_.call(null, form);
};
if (COMPILED) {
  if ("nodejs" === cljs.core._STAR_target_STAR_) {
    goog.global = global;
  } else {
  }
  if ("window" === cljs.core._STAR_global_STAR_) {
    goog.global = window;
  } else {
    if ("self" === cljs.core._STAR_global_STAR_) {
      goog.global = self;
    } else {
      if ("global" === cljs.core._STAR_global_STAR_) {
        goog.global = global;
      } else {
      }
    }
  }
} else {
}
;goog.provide("process.env");
goog.require("cljs.core");
process.env.NODE_ENV = goog.define("process.env.NODE_ENV", "development");
goog.provide("goog.debug.errorcontext");
goog.debug.errorcontext.addErrorContext = function(err, contextKey, contextValue) {
  if (!err[goog.debug.errorcontext.CONTEXT_KEY_]) {
    err[goog.debug.errorcontext.CONTEXT_KEY_] = {};
  }
  err[goog.debug.errorcontext.CONTEXT_KEY_][contextKey] = contextValue;
};
goog.debug.errorcontext.getErrorContext = function(err) {
  return err[goog.debug.errorcontext.CONTEXT_KEY_] || {};
};
goog.debug.errorcontext.CONTEXT_KEY_ = "__closure__error__context__984382";
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.debug.errorcontext");
goog.require("goog.userAgent");
goog.debug.LOGGING_ENABLED = goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.debug.FORCE_SLOPPY_STACKS = goog.define("goog.debug.FORCE_SLOPPY_STACKS", false);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, lineNumber:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var uidsToCleanup = [];
  var ancestorUids = {};
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (obj === undefined) {
        str.push("undefined");
      } else {
        if (obj === null) {
          str.push("NULL");
        } else {
          if (typeof obj === "string") {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (!goog.hasUid(obj)) {
                  uidsToCleanup.push(obj);
                }
                var uid = goog.getUid(obj);
                if (ancestorUids[uid]) {
                  str.push("*** reference loop detected (id\x3d" + uid + ") ***");
                } else {
                  ancestorUids[uid] = true;
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace);
                  }
                  str.push("\n" + space + "}");
                  delete ancestorUids[uid];
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "");
  for (var i = 0; i < uidsToCleanup.length; i++) {
    goog.removeUid(uidsToCleanup[i]);
  }
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0; i < arr.length; i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (err == null) {
    err = 'Unknown Error of type "null/undefined"';
  }
  if (typeof err === "string") {
    return {"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    var message = err.message;
    if (message == null) {
      if (err.constructor && err.constructor instanceof Function) {
        var ctorName = err.constructor.name ? err.constructor.name : goog.debug.getFunctionName(err.constructor);
        message = 'Unknown Error of type "' + ctorName + '"';
      } else {
        message = "Unknown Error of unknown type";
      }
    }
    return {"message":message, "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (!(err instanceof Error)) {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.enhanceErrorWithContext = function(err, opt_context) {
  var error = goog.debug.enhanceError(err);
  if (opt_context) {
    for (var key in opt_context) {
      goog.debug.errorcontext.addErrorContext(error, key, opt_context[key]);
    }
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (!goog.debug.FORCE_SLOPPY_STACKS) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(fn) {
  var stack;
  if (!goog.debug.FORCE_SLOPPY_STACKS) {
    var contextFn = fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0; args && i < args.length; i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function\s+([^\(]+)/m.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.runtimeType = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.debug.fnNameCache_ = {};
goog.debug.freezeInternal_ = goog.DEBUG && Object.freeze || function(arg) {
  return arg;
};
goog.debug.freeze = function(arg) {
  return {valueOf:function() {
    return goog.debug.freezeInternal_(arg);
  }}.valueOf();
};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.debug.LogBuffer.CAPACITY = goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i]);
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.debug.Logger.ENABLE_HIERARCHY = goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
goog.debug.Logger.ENABLE_PROFILER_LOGGING = goog.define("goog.debug.Logger.ENABLE_PROFILER_LOGGING", false);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1000);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level; level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i]; i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0; i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length; ++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.debug.Logger.ENABLE_PROFILER_LOGGING) {
    var msWriteProfilerMark = goog.global["msWriteProfilerMark"];
    if (msWriteProfilerMark) {
      msWriteProfilerMark(msg);
      return;
    }
    var console = goog.global["console"];
    if (console && console["timeStamp"]) {
      console["timeStamp"](msg);
    }
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return !!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_);
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    logRecord.setException(opt_exception);
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  if (goog.debug.Logger.ENABLE_PROFILER_LOGGING) {
    goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  }
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler; handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler; handler = this.handlers_[i]; i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_;
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.log.ENABLED = goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.forwardDeclare("goog.net.xpc.CrossPageChannel");
goog.require("goog.log");
goog.net.xpc.TransportTypes = {UNDEFINED:0, NATIVE_MESSAGING:1, IFRAME_POLLING:2, DIRECT:3};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"IframePollingTransport", 3:"DirectTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion", DIRECT_TRANSPORT_SYNC_MODE:"directSyncMode"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while (length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength));
  }
  return s;
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.log.getLogger("goog.net.xpc");
goog.provide("goog.Thenable");
goog.forwardDeclare("goog.Promise");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return !!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return !!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.async.FreeList");
goog.async.FreeList = class {
  constructor(create, reset, limit) {
    this.limit_ = limit;
    this.create_ = create;
    this.reset_ = reset;
    this.occupants_ = 0;
    this.head_ = null;
  }
  get() {
    let item;
    if (this.occupants_ > 0) {
      this.occupants_--;
      item = this.head_;
      this.head_ = item.next;
      item.next = null;
    } else {
      item = this.create_();
    }
    return item;
  }
  put(item) {
    this.reset_(item);
    if (this.occupants_ < this.limit_) {
      this.occupants_++;
      item.next = this.head_;
      this.head_ = item;
    }
  }
  occupants() {
    return this.occupants_;
  }
};
goog.provide("goog.async.WorkItem");
goog.provide("goog.async.WorkQueue");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.async.WorkQueue = function() {
  this.workHead_ = null;
  this.workTail_ = null;
};
goog.async.WorkQueue.DEFAULT_MAX_UNUSED = goog.define("goog.async.WorkQueue.DEFAULT_MAX_UNUSED", 100);
goog.async.WorkQueue.freelist_ = new goog.async.FreeList(function() {
  return new goog.async.WorkItem;
}, function(item) {
  item.reset();
}, goog.async.WorkQueue.DEFAULT_MAX_UNUSED);
goog.async.WorkQueue.prototype.add = function(fn, scope) {
  var item = this.getUnusedItem_();
  item.set(fn, scope);
  if (this.workTail_) {
    this.workTail_.next = item;
    this.workTail_ = item;
  } else {
    goog.asserts.assert(!this.workHead_);
    this.workHead_ = item;
    this.workTail_ = item;
  }
};
goog.async.WorkQueue.prototype.remove = function() {
  var item = null;
  if (this.workHead_) {
    item = this.workHead_;
    this.workHead_ = this.workHead_.next;
    if (!this.workHead_) {
      this.workTail_ = null;
    }
    item.next = null;
  }
  return item;
};
goog.async.WorkQueue.prototype.returnUnused = function(item) {
  goog.async.WorkQueue.freelist_.put(item);
};
goog.async.WorkQueue.prototype.getUnusedItem_ = function() {
  return goog.async.WorkQueue.freelist_.get();
};
goog.async.WorkItem = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.async.WorkItem.prototype.set = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
  this.next = null;
};
goog.async.WorkItem.prototype.reset = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0; i < monitors.length; i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0; i < goog.debug.entryPointRegistry.refList_.length; i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0; i < goog.debug.entryPointRegistry.refList_.length; i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.functions");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.string.Const");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || goog.async.nextTick.useSetImmediate_())) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.useSetImmediate_ = function() {
  if (!goog.global.Window || !goog.global.Window.prototype) {
    return true;
  }
  if (goog.labs.userAgent.browser.isEdge() || goog.global.Window.prototype.setImmediate != goog.global.setImmediate) {
    return true;
  }
  return false;
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto()) {
    Channel = function() {
      var iframe = goog.dom.createElement(goog.dom.TagName.IFRAME);
      iframe.style.display = "none";
      goog.dom.safe.setIframeSrc(iframe, goog.html.TrustedResourceUrl.fromConstant(goog.string.Const.EMPTY));
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      goog.dom.safe.documentWrite(doc, goog.html.SafeHtml.EMPTY);
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (origin != "*" && e.origin != origin || e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined" && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      if (head.next !== undefined) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in goog.dom.createElement(goog.dom.TagName.SCRIPT)) {
    return function(cb) {
      var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("goog.async.run");
goog.require("goog.async.WorkQueue");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.ASSUME_NATIVE_PROMISE = goog.define("goog.ASSUME_NATIVE_PROMISE", false);
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.add(callback, opt_context);
};
goog.async.run.initializeRunner_ = function() {
  if (goog.ASSUME_NATIVE_PROMISE || goog.global.Promise && goog.global.Promise.resolve) {
    var promise = goog.global.Promise.resolve(undefined);
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function(opt_realSetTimeout) {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
    if (opt_realSetTimeout) {
      opt_realSetTimeout(goog.async.run.processWorkQueue);
    }
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = new goog.async.WorkQueue;
if (goog.DEBUG) {
  goog.async.run.resetQueue = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = new goog.async.WorkQueue;
  };
}
goog.async.run.processWorkQueue = function() {
  var item = null;
  while (item = goog.async.run.workQueue_.remove()) {
    try {
      item.fn.call(item.scope);
    } catch (e) {
      goog.async.throwException(e);
    }
    goog.async.run.workQueue_.returnUnused(item);
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.provide("goog.promise.Resolver");
goog.forwardDeclare("goog.Promise");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.callbackEntriesTail_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  if (resolver != goog.nullFunction) {
    try {
      var self = this;
      resolver.call(opt_context, function(value) {
        self.resolve_(goog.Promise.State_.FULFILLED, value);
      }, function(reason) {
        if (goog.DEBUG && !(reason instanceof goog.Promise.CancellationError)) {
          try {
            if (reason instanceof Error) {
              throw reason;
            } else {
              throw new Error("Promise rejected.");
            }
          } catch (e) {
          }
        }
        self.resolve_(goog.Promise.State_.REJECTED, reason);
      });
    } catch (e) {
      this.resolve_(goog.Promise.State_.REJECTED, e);
    }
  }
};
goog.Promise.LONG_STACK_TRACES = goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.Promise.UNHANDLED_REJECTION_DELAY = goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_ = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.next = null;
  this.always = false;
};
goog.Promise.CallbackEntry_.prototype.reset = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.always = false;
};
goog.Promise.DEFAULT_MAX_UNUSED = goog.define("goog.Promise.DEFAULT_MAX_UNUSED", 100);
goog.Promise.freelist_ = new goog.async.FreeList(function() {
  return new goog.Promise.CallbackEntry_;
}, function(item) {
  item.reset();
}, goog.Promise.DEFAULT_MAX_UNUSED);
goog.Promise.getCallbackEntry_ = function(onFulfilled, onRejected, context) {
  var entry = goog.Promise.freelist_.get();
  entry.onFulfilled = onFulfilled;
  entry.onRejected = onRejected;
  entry.context = context;
  return entry;
};
goog.Promise.returnEntry_ = function(entry) {
  goog.Promise.freelist_.put(entry);
};
goog.Promise.resolve = function(opt_value) {
  if (opt_value instanceof goog.Promise) {
    return opt_value;
  }
  var promise = new goog.Promise(goog.nullFunction);
  promise.resolve_(goog.Promise.State_.FULFILLED, opt_value);
  return promise;
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.resolveThen_ = function(value, onFulfilled, onRejected) {
  var isThenable = goog.Promise.maybeThen_(value, onFulfilled, onRejected, null);
  if (!isThenable) {
    goog.async.run(goog.partial(onFulfilled, value));
  }
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.allSettled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toSettle = promises.length;
    var results = [];
    if (!toSettle) {
      resolve(results);
      return;
    }
    var onSettled = function(index, fulfilled, result) {
      toSettle--;
      results[index] = fulfilled ? {fulfilled:true, value:result} : {fulfilled:false, reason:result};
      if (toSettle == 0) {
        resolve(results);
      }
    };
    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, goog.partial(onSettled, i, true), goog.partial(onSettled, i, false));
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenVoid = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  this.addCallbackEntry_(goog.Promise.getCallbackEntry_(opt_onFulfilled || goog.nullFunction, opt_onRejected || null, opt_context));
};
goog.Promise.prototype.thenAlways = function(onSettled, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var entry = goog.Promise.getCallbackEntry_(onSettled, onSettled, opt_context);
  entry.always = true;
  this.addCallbackEntry_(entry);
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    var err = new goog.Promise.CancellationError(opt_message);
    goog.async.run(function() {
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
      this.parent_ = null;
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childEntry = null;
  var beforeChildEntry = null;
  for (var entry = this.callbackEntries_; entry; entry = entry.next) {
    if (!entry.always) {
      childCount++;
      if (entry.child == childPromise) {
        childEntry = entry;
      }
      if (childEntry && childCount > 1) {
        break;
      }
    }
    if (!childEntry) {
      beforeChildEntry = entry;
    }
  }
  if (childEntry) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      if (beforeChildEntry) {
        this.removeEntryAfter_(beforeChildEntry);
      } else {
        this.popEntry_();
      }
      this.executeCallback_(childEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if (!this.hasEntry_() && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  this.queueEntry_(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = goog.Promise.getCallbackEntry_(null, null, null);
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (result === undefined && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_(callbackEntry);
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this === x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  }
  this.state_ = goog.Promise.State_.BLOCKED;
  var isThenable = goog.Promise.maybeThen_(x, this.unblockAndFulfill_, this.unblockAndReject_, this);
  if (isThenable) {
    return;
  }
  this.result_ = x;
  this.state_ = state;
  this.parent_ = null;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.maybeThen_ = function(value, onFulfilled, onRejected, context) {
  if (value instanceof goog.Promise) {
    value.thenVoid(onFulfilled, onRejected, context);
    return true;
  } else {
    if (goog.Thenable.isImplementedBy(value)) {
      value = value;
      value.then(onFulfilled, onRejected, context);
      return true;
    } else {
      if (goog.isObject(value)) {
        try {
          var then = value["then"];
          if (goog.isFunction(then)) {
            goog.Promise.tryThen_(value, then, onFulfilled, onRejected, context);
            return true;
          }
        } catch (e) {
          onRejected.call(context, e);
          return true;
        }
      }
    }
  }
  return false;
};
goog.Promise.tryThen_ = function(thenable, then, onFulfilled, onRejected, context) {
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      onFulfilled.call(context, value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      onRejected.call(context, reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.hasEntry_ = function() {
  return !!this.callbackEntries_;
};
goog.Promise.prototype.queueEntry_ = function(entry) {
  goog.asserts.assert(entry.onFulfilled != null);
  if (this.callbackEntriesTail_) {
    this.callbackEntriesTail_.next = entry;
    this.callbackEntriesTail_ = entry;
  } else {
    this.callbackEntries_ = entry;
    this.callbackEntriesTail_ = entry;
  }
};
goog.Promise.prototype.popEntry_ = function() {
  var entry = null;
  if (this.callbackEntries_) {
    entry = this.callbackEntries_;
    this.callbackEntries_ = entry.next;
    entry.next = null;
  }
  if (!this.callbackEntries_) {
    this.callbackEntriesTail_ = null;
  }
  if (entry != null) {
    goog.asserts.assert(entry.onFulfilled != null);
  }
  return entry;
};
goog.Promise.prototype.removeEntryAfter_ = function(previous) {
  goog.asserts.assert(this.callbackEntries_);
  goog.asserts.assert(previous != null);
  if (previous.next == this.callbackEntriesTail_) {
    this.callbackEntriesTail_ = previous;
  }
  previous.next = previous.next.next;
};
goog.Promise.prototype.executeCallbacks_ = function() {
  var entry = null;
  while (entry = this.popEntry_()) {
    if (goog.Promise.LONG_STACK_TRACES) {
      this.currentStep_++;
    }
    this.executeCallback_(entry, this.state_, this.result_);
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.REJECTED && callbackEntry.onRejected && !callbackEntry.always) {
    this.removeUnhandledRejection_();
  }
  if (callbackEntry.child) {
    callbackEntry.child.parent_ = null;
    goog.Promise.invokeCallback_(callbackEntry, state, result);
  } else {
    try {
      callbackEntry.always ? callbackEntry.onFulfilled.call(callbackEntry.context) : goog.Promise.invokeCallback_(callbackEntry, state, result);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  }
  goog.Promise.returnEntry_(callbackEntry);
};
goog.Promise.invokeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled.call(callbackEntry.context, result);
  } else {
    if (callbackEntry.onRejected) {
      callbackEntry.onRejected.call(callbackEntry.context, result);
    }
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && typeof err.stack === "string") {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && typeof err.stack === "string" && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this; promise; promise = promise.parent_) {
      for (var i = this.currentStep_; i >= 0; i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this; p && p.unhandledRejectionId_; p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this; p && p.hadUnhandledRejection_; p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  this.creationStack;
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
  this.disposed_ = this.disposed_;
  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.Disposable.INCLUDE_STACK_ON_CREATION = goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw new Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF && this.onDisposeCallbacks_ && this.onDisposeCallbacks_.length > 0) {
        throw new Error(this + " did not empty its onDisposeCallbacks queue. This " + "probably means it overrode dispose() or disposeInternal() " + "without calling the superclass' method.");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (this.disposed_) {
    opt_scope !== undefined ? callback.call(opt_scope) : callback();
    return;
  }
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(opt_scope !== undefined ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length; i < len; ++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.scope(function() {
  goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
  goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
  (goog.global["navigator"]["maxTouchPoints"] || goog.global["navigator"]["msMaxTouchPoints"])), POINTER_EVENTS:"PointerEvent" in goog.global, MSPOINTER_EVENTS:"MSPointerEvent" in goog.global && !!(goog.global["navigator"] && goog.global["navigator"]["msPointerEnabled"]), PASSIVE_EVENTS:purify(function() {
    if (!goog.global.addEventListener || !Object.defineProperty) {
      return false;
    }
    var passive = false;
    var options = Object.defineProperty({}, "passive", {get:function() {
      passive = true;
    }});
    try {
      goog.global.addEventListener("test", goog.nullFunction, options);
      goog.global.removeEventListener("test", goog.nullFunction, options);
    } catch (e) {
    }
    return passive;
  })};
  function purify(fn) {
    return {valueOf:fn}.valueOf();
  }
});
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.provide("goog.events.MouseAsMouseEventType");
goog.provide("goog.events.MouseEvents");
goog.provide("goog.events.PointerAsMouseEventType");
goog.provide("goog.events.PointerAsTouchEventType");
goog.provide("goog.events.PointerFallbackEventType");
goog.provide("goog.events.PointerTouchFallbackEventType");
goog.require("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", AUXCLICK:"auxclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", MOUSECANCEL:"mousecancel", SELECTIONCHANGE:"selectionchange", SELECTSTART:"selectstart", WHEEL:"wheel", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:"focusin", FOCUSOUT:"focusout", 
CHANGE:"change", RESET:"reset", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DEVICECHANGE:"devicechange", DEVICEMOTION:"devicemotion", DEVICEORIENTATION:"deviceorientation", 
DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", CANPLAY:"canplay", CANPLAYTHROUGH:"canplaythrough", DURATIONCHANGE:"durationchange", EMPTIED:"emptied", ENDED:"ended", LOADEDDATA:"loadeddata", LOADEDMETADATA:"loadedmetadata", PAUSE:"pause", PLAY:"play", PLAYING:"playing", PROGRESS:"progress", RATECHANGE:"ratechange", 
SEEKED:"seeked", SEEKING:"seeking", STALLED:"stalled", SUSPEND:"suspend", TIMEUPDATE:"timeupdate", VOLUMECHANGE:"volumechange", WAITING:"waiting", SOURCEOPEN:"sourceopen", SOURCEENDED:"sourceended", SOURCECLOSED:"sourceclosed", ABORT:"abort", UPDATE:"update", UPDATESTART:"updatestart", UPDATEEND:"updateend", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", 
ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", INSTALL:"install", ACTIVATE:"activate", FETCH:"fetch", FOREIGNFETCH:"foreignfetch", MESSAGEERROR:"messageerror", STATECHANGE:"statechange", UPDATEFOUND:"updatefound", CONTROLLERCHANGE:"controllerchange", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), 
POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", 
MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXT:"text", TEXTINPUT:goog.userAgent.IE ? "textinput" : "textInput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", 
BEFOREINPUT:"beforeinput", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", 
DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified", BEFOREPRINT:"beforeprint", AFTERPRINT:"afterprint", BEFOREINSTALLPROMPT:"beforeinstallprompt", APPINSTALLED:"appinstalled"};
goog.events.getPointerFallbackEventName_ = function(pointerEventName, msPointerEventName, fallbackEventName) {
  if (goog.events.BrowserFeature.POINTER_EVENTS) {
    return pointerEventName;
  }
  if (goog.events.BrowserFeature.MSPOINTER_EVENTS) {
    return msPointerEventName;
  }
  return fallbackEventName;
};
goog.events.PointerFallbackEventType = {POINTERDOWN:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERDOWN, goog.events.EventType.MSPOINTERDOWN, goog.events.EventType.MOUSEDOWN), POINTERUP:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERUP, goog.events.EventType.MSPOINTERUP, goog.events.EventType.MOUSEUP), POINTERCANCEL:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERCANCEL, goog.events.EventType.MSPOINTERCANCEL, goog.events.EventType.MOUSECANCEL), 
POINTERMOVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERMOVE, goog.events.EventType.MSPOINTERMOVE, goog.events.EventType.MOUSEMOVE), POINTEROVER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROVER, goog.events.EventType.MSPOINTEROVER, goog.events.EventType.MOUSEOVER), POINTEROUT:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROUT, goog.events.EventType.MSPOINTEROUT, goog.events.EventType.MOUSEOUT), POINTERENTER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERENTER, 
goog.events.EventType.MSPOINTERENTER, goog.events.EventType.MOUSEENTER), POINTERLEAVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERLEAVE, goog.events.EventType.MSPOINTERLEAVE, goog.events.EventType.MOUSELEAVE)};
goog.events.PointerTouchFallbackEventType = {POINTERDOWN:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERDOWN, goog.events.EventType.MSPOINTERDOWN, goog.events.EventType.TOUCHSTART), POINTERUP:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERUP, goog.events.EventType.MSPOINTERUP, goog.events.EventType.TOUCHEND), POINTERCANCEL:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERCANCEL, goog.events.EventType.MSPOINTERCANCEL, goog.events.EventType.TOUCHCANCEL), 
POINTERMOVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERMOVE, goog.events.EventType.MSPOINTERMOVE, goog.events.EventType.TOUCHMOVE)};
goog.events.MouseEvents;
goog.events.PointerAsMouseEventType = {MOUSEDOWN:goog.events.PointerFallbackEventType.POINTERDOWN, MOUSEUP:goog.events.PointerFallbackEventType.POINTERUP, MOUSECANCEL:goog.events.PointerFallbackEventType.POINTERCANCEL, MOUSEMOVE:goog.events.PointerFallbackEventType.POINTERMOVE, MOUSEOVER:goog.events.PointerFallbackEventType.POINTEROVER, MOUSEOUT:goog.events.PointerFallbackEventType.POINTEROUT, MOUSEENTER:goog.events.PointerFallbackEventType.POINTERENTER, MOUSELEAVE:goog.events.PointerFallbackEventType.POINTERLEAVE};
goog.events.MouseAsMouseEventType = {MOUSEDOWN:goog.events.EventType.MOUSEDOWN, MOUSEUP:goog.events.EventType.MOUSEUP, MOUSECANCEL:goog.events.EventType.MOUSECANCEL, MOUSEMOVE:goog.events.EventType.MOUSEMOVE, MOUSEOVER:goog.events.EventType.MOUSEOVER, MOUSEOUT:goog.events.EventType.MOUSEOUT, MOUSEENTER:goog.events.EventType.MOUSEENTER, MOUSELEAVE:goog.events.EventType.MOUSELEAVE};
goog.events.PointerAsTouchEventType = {TOUCHCANCEL:goog.events.PointerTouchFallbackEventType.POINTERCANCEL, TOUCHEND:goog.events.PointerTouchFallbackEventType.POINTERUP, TOUCHMOVE:goog.events.PointerTouchFallbackEventType.POINTERMOVE, TOUCHSTART:goog.events.PointerTouchFallbackEventType.POINTERDOWN};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.provide("goog.events.BrowserEvent.PointerType");
goog.require("goog.debug");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.USE_LAYER_XY_AS_OFFSET_XY = goog.define("goog.events.USE_LAYER_XY_AS_OFFSET_XY", false);
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.key = "";
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.pointerId = 0;
  this.pointerType = "";
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.PointerType = {MOUSE:"mouse", PEN:"pen", TOUCH:"touch"};
goog.events.BrowserEvent.IEButtonMap = goog.debug.freeze([1, 4, 2]);
goog.events.BrowserEvent.IE_BUTTON_MAP = goog.events.BrowserEvent.IEButtonMap;
goog.events.BrowserEvent.IE_POINTER_TYPE_MAP = goog.debug.freeze({2:goog.events.BrowserEvent.PointerType.TOUCH, 3:goog.events.BrowserEvent.PointerType.PEN, 4:goog.events.BrowserEvent.PointerType.MOUSE});
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  var relevantTouch = e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : null;
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  if (relevantTouch) {
    this.clientX = relevantTouch.clientX !== undefined ? relevantTouch.clientX : relevantTouch.pageX;
    this.clientY = relevantTouch.clientY !== undefined ? relevantTouch.clientY : relevantTouch.pageY;
    this.screenX = relevantTouch.screenX || 0;
    this.screenY = relevantTouch.screenY || 0;
  } else {
    if (goog.events.USE_LAYER_XY_AS_OFFSET_XY) {
      this.offsetX = e.layerX !== undefined ? e.layerX : e.offsetX;
      this.offsetY = e.layerY !== undefined ? e.layerY : e.offsetY;
    } else {
      this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
      this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
    }
    this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
    this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
    this.screenX = e.screenX || 0;
    this.screenY = e.screenY || 0;
  }
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.key = e.key || "";
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.pointerId = e.pointerId || 0;
  this.pointerType = goog.events.BrowserEvent.getPointerType_(e);
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return !!(this.event_.button & goog.events.BrowserEvent.IE_BUTTON_MAP[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.getPointerType_ = function(e) {
  if (typeof e.pointerType === "string") {
    return e.pointerType;
  }
  return goog.events.BrowserEvent.IE_POINTER_TYPE_MAP[e.pointerType] || "";
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.forwardDeclare("goog.events.EventLike");
goog.forwardDeclare("goog.events.EventTarget");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1e6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return !!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return ++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.events.Listener.ENABLE_MONITORING = goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0; i < listenerArray.length; i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0; i < listenerArray.length; ++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = opt_type !== undefined;
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = opt_capture !== undefined;
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0; i < listenerArray.length; ++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0; i < listenerArray.length; ++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return -1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1e6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.events.CAPTURE_SIMULATION_MODE = goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_options, opt_handler) {
  if (opt_options && opt_options.once) {
    return goog.events.listenOnce(src, type, listener, opt_options, opt_handler);
  }
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      goog.events.listen(src, type[i], listener, opt_options, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
    return src.listen(type, listener, capture, opt_handler);
  } else {
    return goog.events.listen_(src, type, listener, false, opt_options, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_options, opt_handler) {
  if (!type) {
    throw new Error("Invalid event type");
  }
  var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, capture, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    if (!goog.events.BrowserFeature.PASSIVE_EVENTS) {
      opt_options = capture;
    }
    if (opt_options === undefined) {
      opt_options = false;
    }
    src.addEventListener(type.toString(), proxy, opt_options);
  } else {
    if (src.attachEvent) {
      src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
    } else {
      if (src.addListener && src.removeListener) {
        goog.asserts.assert(type === "change", "MediaQueryList only has a change event");
        src.addListener(proxy);
      } else {
        throw new Error("addEventListener and attachEvent are unavailable.");
      }
    }
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_options, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      goog.events.listenOnce(src, type[i], listener, opt_options, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
    return src.listenOnce(type, listener, capture, opt_handler);
  } else {
    return goog.events.listen_(src, type, listener, true, opt_options, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_options, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      goog.events.unlisten(src, type[i], listener, opt_options, opt_handler);
    }
    return null;
  }
  var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten(type, listener, capture, opt_handler);
  }
  if (!src) {
    return false;
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (listenerMap) {
    var listenerObj = listenerMap.getListener(type, listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (typeof key === "number") {
    return false;
  }
  var listener = key;
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    } else {
      if (src.addListener && src.removeListener) {
        src.removeListener(proxy);
      }
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_(src);
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_(obj);
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0; i < listeners.length; ++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return [];
    }
    var listenerMap = goog.events.getListenerMap_(obj);
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = type;
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_(obj);
  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = true;
  var listenerMap = goog.events.getListenerMap_(obj);
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0; i < listenerArray.length; i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          var result = goog.events.fireListener(listener, eventObject);
          retval = retval && result !== false;
        }
      }
    }
  }
  return retval;
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget; parent; parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1; !evt.propagationStopped_ && i >= 0; i--) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, true, evt);
          retval = retval && result;
        }
        for (var i = 0; !evt.propagationStopped_ && i < ancestors.length; i++) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, false, evt);
          retval = retval && result;
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || e.returnValue == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1e9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1000;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (; ancestor; ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0; i < listenerArray.length; ++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = opt_type !== undefined ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || e;
  if (typeof e === "string") {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1; !e.propagationStopped_ && i >= 0; i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0; !e.propagationStopped_ && i < opt_ancestorsTree.length; i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.Promise");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.INVALID_TIMEOUT_ID_ = -1;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.stop();
      this.start();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw new Error("Invalid listener argument");
    }
  }
  if (Number(opt_delay) > goog.Timer.MAX_TIMEOUT_) {
    return goog.Timer.INVALID_TIMEOUT_ID_;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.Timer.promise = function(delay, opt_result) {
  var timerKey = null;
  return (new goog.Promise(function(resolve, reject) {
    timerKey = goog.Timer.callOnce(function() {
      resolve(opt_result);
    }, delay);
    if (timerKey == goog.Timer.INVALID_TIMEOUT_ID_) {
      reject(new Error("Failed to schedule timer."));
    }
  })).thenCatch(function(error) {
    goog.Timer.clear(timerKey);
    throw error;
  });
};
goog.provide("goog.json.hybrid");
goog.require("goog.asserts");
goog.require("goog.json");
goog.json.hybrid.stringify = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["stringify"] : function(obj) {
  if (goog.global.JSON) {
    try {
      return goog.global.JSON.stringify(obj);
    } catch (e) {
    }
  }
  return goog.json.serialize(obj);
};
goog.json.hybrid.parse_ = function(jsonString, fallbackParser) {
  if (goog.global.JSON) {
    try {
      var obj = goog.global.JSON.parse(jsonString);
      goog.asserts.assert(typeof obj == "object");
      return obj;
    } catch (e) {
    }
  }
  return fallbackParser(jsonString);
};
goog.json.hybrid.parse = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["parse"] : function(jsonString) {
  return goog.json.hybrid.parse_(jsonString, goog.json.parse);
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress", DOWNLOAD_PROGRESS:"downloadprogress", UPLOAD_PROGRESS:"uploadprogress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTI_STATUS:207, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, PERMANENT_REDIRECT:308, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, 
REQUEST_TIMEOUT:408, CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, UNPROCESSABLE_ENTITY:422, LOCKED:423, FAILED_DEPENDENCY:424, PRECONDITION_REQUIRED:428, TOO_MANY_REQUESTS:429, REQUEST_HEADER_FIELDS_TOO_LARGE:431, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, 
INSUFFICIENT_STORAGE:507, NETWORK_AUTHENTICATION_REQUIRED:511, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    case goog.net.HttpStatus.CREATED:
    case goog.net.HttpStatus.ACCEPTED:
    case goog.net.HttpStatus.NO_CONTENT:
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    case goog.net.HttpStatus.NOT_MODIFIED:
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.response;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseType;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR = goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0; i < ACTIVE_X_IDENTS.length; i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw new Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_;
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.forwardDeclare("goog.Uri");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json.hybrid");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.scope(function() {
  goog.net.XhrIo = function(opt_xmlHttpFactory) {
    XhrIo.base(this, "constructor");
    this.headers = new goog.structs.Map;
    this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
    this.active_ = false;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    this.lastUri_ = "";
    this.lastMethod_ = "";
    this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
    this.lastError_ = "";
    this.errorDispatched_ = false;
    this.inSend_ = false;
    this.inOpen_ = false;
    this.inAbort_ = false;
    this.timeoutInterval_ = 0;
    this.timeoutId_ = null;
    this.responseType_ = ResponseType.DEFAULT;
    this.withCredentials_ = false;
    this.progressEventsEnabled_ = false;
    this.useXhr2Timeout_ = false;
  };
  goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
  var XhrIo = goog.net.XhrIo;
  goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
  var ResponseType = goog.net.XhrIo.ResponseType;
  goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
  goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
  goog.net.XhrIo.CONTENT_TRANSFER_ENCODING = "Content-Transfer-Encoding";
  goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
  goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
  goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
  goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
  goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
  goog.net.XhrIo.sendInstances_ = [];
  goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
    var x = new goog.net.XhrIo;
    goog.net.XhrIo.sendInstances_.push(x);
    if (opt_callback) {
      x.listen(goog.net.EventType.COMPLETE, opt_callback);
    }
    x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
    if (opt_timeoutInterval) {
      x.setTimeoutInterval(opt_timeoutInterval);
    }
    if (opt_withCredentials) {
      x.setWithCredentials(opt_withCredentials);
    }
    x.send(url, opt_method, opt_content, opt_headers);
    return x;
  };
  goog.net.XhrIo.cleanup = function() {
    var instances = goog.net.XhrIo.sendInstances_;
    while (instances.length) {
      instances.pop().dispose();
    }
  };
  goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
    goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
  };
  goog.net.XhrIo.prototype.cleanupSend_ = function() {
    this.dispose();
    goog.array.remove(goog.net.XhrIo.sendInstances_, this);
  };
  goog.net.XhrIo.prototype.getTimeoutInterval = function() {
    return this.timeoutInterval_;
  };
  goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
    this.timeoutInterval_ = Math.max(0, ms);
  };
  goog.net.XhrIo.prototype.setResponseType = function(type) {
    this.responseType_ = type;
  };
  goog.net.XhrIo.prototype.getResponseType = function() {
    return this.responseType_;
  };
  goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
    this.withCredentials_ = withCredentials;
  };
  goog.net.XhrIo.prototype.getWithCredentials = function() {
    return this.withCredentials_;
  };
  goog.net.XhrIo.prototype.setProgressEventsEnabled = function(enabled) {
    this.progressEventsEnabled_ = enabled;
  };
  goog.net.XhrIo.prototype.getProgressEventsEnabled = function() {
    return this.progressEventsEnabled_;
  };
  goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
    if (this.xhr_) {
      throw new Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
    }
    var method = opt_method ? opt_method.toUpperCase() : "GET";
    this.lastUri_ = url;
    this.lastError_ = "";
    this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
    this.lastMethod_ = method;
    this.errorDispatched_ = false;
    this.active_ = true;
    this.xhr_ = this.createXhr();
    this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
    this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
    if (this.getProgressEventsEnabled() && "onprogress" in this.xhr_) {
      this.xhr_.onprogress = goog.bind(function(e) {
        this.onProgressHandler_(e, true);
      }, this);
      if (this.xhr_.upload) {
        this.xhr_.upload.onprogress = goog.bind(this.onProgressHandler_, this);
      }
    }
    try {
      goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
      this.inOpen_ = true;
      this.xhr_.open(method, String(url), true);
      this.inOpen_ = false;
    } catch (err) {
      goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
      this.error_(goog.net.ErrorCode.EXCEPTION, err);
      return;
    }
    var content = opt_content || "";
    var headers = this.headers.clone();
    if (opt_headers) {
      goog.structs.forEach(opt_headers, function(value, key) {
        headers.set(key, value);
      });
    }
    var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
    var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
    if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
      headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
    }
    headers.forEach(function(value, key) {
      this.xhr_.setRequestHeader(key, value);
    }, this);
    if (this.responseType_) {
      this.xhr_.responseType = this.responseType_;
    }
    if ("withCredentials" in this.xhr_ && this.xhr_.withCredentials !== this.withCredentials_) {
      this.xhr_.withCredentials = this.withCredentials_;
    }
    try {
      this.cleanUpTimeoutTimer_();
      if (this.timeoutInterval_ > 0) {
        this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
        goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
        if (this.useXhr2Timeout_) {
          this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
          this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
        } else {
          this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
        }
      }
      goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
      this.inSend_ = true;
      this.xhr_.send(content);
      this.inSend_ = false;
    } catch (err) {
      goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
      this.error_(goog.net.ErrorCode.EXCEPTION, err);
    }
  };
  goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
    return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && typeof xhr[goog.net.XhrIo.XHR2_TIMEOUT_] === "number" && xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_] !== undefined;
  };
  goog.net.XhrIo.isContentTypeHeader_ = function(header) {
    return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
  };
  goog.net.XhrIo.prototype.createXhr = function() {
    return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
  };
  goog.net.XhrIo.prototype.timeout_ = function() {
    if (typeof goog == "undefined") {
    } else {
      if (this.xhr_) {
        this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
        this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
        goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
        this.dispatchEvent(goog.net.EventType.TIMEOUT);
        this.abort(goog.net.ErrorCode.TIMEOUT);
      }
    }
  };
  goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
    this.active_ = false;
    if (this.xhr_) {
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.lastError_ = err;
    this.lastErrorCode_ = errorCode;
    this.dispatchErrors_();
    this.cleanUpXhr_();
  };
  goog.net.XhrIo.prototype.dispatchErrors_ = function() {
    if (!this.errorDispatched_) {
      this.errorDispatched_ = true;
      this.dispatchEvent(goog.net.EventType.COMPLETE);
      this.dispatchEvent(goog.net.EventType.ERROR);
    }
  };
  goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
    if (this.xhr_ && this.active_) {
      goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
      this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
      this.dispatchEvent(goog.net.EventType.COMPLETE);
      this.dispatchEvent(goog.net.EventType.ABORT);
      this.cleanUpXhr_();
    }
  };
  goog.net.XhrIo.prototype.disposeInternal = function() {
    if (this.xhr_) {
      if (this.active_) {
        this.active_ = false;
        this.inAbort_ = true;
        this.xhr_.abort();
        this.inAbort_ = false;
      }
      this.cleanUpXhr_(true);
    }
    XhrIo.base(this, "disposeInternal");
  };
  goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
    if (this.isDisposed()) {
      return;
    }
    if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
      this.onReadyStateChangeEntryPoint_();
    } else {
      this.onReadyStateChangeHelper_();
    }
  };
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
    this.onReadyStateChangeHelper_();
  };
  goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
    if (!this.active_) {
      return;
    }
    if (typeof goog == "undefined") {
    } else {
      if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
        goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
      } else {
        if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
          goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
          return;
        }
        this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
        if (this.isComplete()) {
          goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
          this.active_ = false;
          try {
            if (this.isSuccess()) {
              this.dispatchEvent(goog.net.EventType.COMPLETE);
              this.dispatchEvent(goog.net.EventType.SUCCESS);
            } else {
              this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
              this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
              this.dispatchErrors_();
            }
          } finally {
            this.cleanUpXhr_();
          }
        }
      }
    }
  };
  goog.net.XhrIo.prototype.onProgressHandler_ = function(e, opt_isDownload) {
    goog.asserts.assert(e.type === goog.net.EventType.PROGRESS, "goog.net.EventType.PROGRESS is of the same type as raw XHR progress.");
    this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, goog.net.EventType.PROGRESS));
    this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, opt_isDownload ? goog.net.EventType.DOWNLOAD_PROGRESS : goog.net.EventType.UPLOAD_PROGRESS));
  };
  goog.net.XhrIo.buildProgressEvent_ = function(e, eventType) {
    return {type:eventType, lengthComputable:e.lengthComputable, loaded:e.loaded, total:e.total};
  };
  goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
    if (this.xhr_) {
      this.cleanUpTimeoutTimer_();
      var xhr = this.xhr_;
      var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
      this.xhr_ = null;
      this.xhrOptions_ = null;
      if (!opt_fromDispose) {
        this.dispatchEvent(goog.net.EventType.READY);
      }
      try {
        xhr.onreadystatechange = clearedOnReadyStateChange;
      } catch (e) {
        goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
      }
    }
  };
  goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
    if (this.xhr_ && this.useXhr2Timeout_) {
      this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
    }
    if (this.timeoutId_) {
      goog.Timer.clear(this.timeoutId_);
      this.timeoutId_ = null;
    }
  };
  goog.net.XhrIo.prototype.isActive = function() {
    return !!this.xhr_;
  };
  goog.net.XhrIo.prototype.isComplete = function() {
    return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
  };
  goog.net.XhrIo.prototype.isSuccess = function() {
    var status = this.getStatus();
    return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
  };
  goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
    var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
  };
  goog.net.XhrIo.prototype.getReadyState = function() {
    return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
  };
  goog.net.XhrIo.prototype.getStatus = function() {
    try {
      return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
    } catch (e) {
      return -1;
    }
  };
  goog.net.XhrIo.prototype.getStatusText = function() {
    try {
      return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
    } catch (e) {
      goog.log.fine(this.logger_, "Can not get status: " + e.message);
      return "";
    }
  };
  goog.net.XhrIo.prototype.getLastUri = function() {
    return String(this.lastUri_);
  };
  goog.net.XhrIo.prototype.getResponseText = function() {
    try {
      return this.xhr_ ? this.xhr_.responseText : "";
    } catch (e) {
      goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
      return "";
    }
  };
  goog.net.XhrIo.prototype.getResponseBody = function() {
    try {
      if (this.xhr_ && "responseBody" in this.xhr_) {
        return this.xhr_["responseBody"];
      }
    } catch (e) {
      goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
    }
    return null;
  };
  goog.net.XhrIo.prototype.getResponseXml = function() {
    try {
      return this.xhr_ ? this.xhr_.responseXML : null;
    } catch (e) {
      goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
      return null;
    }
  };
  goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
    if (!this.xhr_) {
      return undefined;
    }
    var responseText = this.xhr_.responseText;
    if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
      responseText = responseText.substring(opt_xssiPrefix.length);
    }
    return goog.json.hybrid.parse(responseText);
  };
  goog.net.XhrIo.prototype.getResponse = function() {
    try {
      if (!this.xhr_) {
        return null;
      }
      if ("response" in this.xhr_) {
        return this.xhr_.response;
      }
      switch(this.responseType_) {
        case ResponseType.DEFAULT:
        case ResponseType.TEXT:
          return this.xhr_.responseText;
        case ResponseType.ARRAY_BUFFER:
          if ("mozResponseArrayBuffer" in this.xhr_) {
            return this.xhr_.mozResponseArrayBuffer;
          }
      }
      goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
      return null;
    } catch (e) {
      goog.log.fine(this.logger_, "Can not get response: " + e.message);
      return null;
    }
  };
  goog.net.XhrIo.prototype.getResponseHeader = function(key) {
    if (!this.xhr_ || !this.isComplete()) {
      return undefined;
    }
    var value = this.xhr_.getResponseHeader(key);
    return value === null ? undefined : value;
  };
  goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
    return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() || "" : "";
  };
  goog.net.XhrIo.prototype.getResponseHeaders = function() {
    var headersObject = {};
    var headersArray = this.getAllResponseHeaders().split("\r\n");
    for (var i = 0; i < headersArray.length; i++) {
      if (goog.string.isEmptyOrWhitespace(headersArray[i])) {
        continue;
      }
      var keyValue = goog.string.splitLimit(headersArray[i], ":", 1);
      var key = keyValue[0];
      var value = keyValue[1];
      if (typeof value !== "string") {
        continue;
      }
      value = value.trim();
      var values = headersObject[key] || [];
      headersObject[key] = values;
      values.push(value);
    }
    return goog.object.map(headersObject, function(values) {
      return values.join(", ");
    });
  };
  goog.net.XhrIo.prototype.getStreamingResponseHeader = function(key) {
    return this.xhr_ ? this.xhr_.getResponseHeader(key) : null;
  };
  goog.net.XhrIo.prototype.getAllStreamingResponseHeaders = function() {
    return this.xhr_ ? this.xhr_.getAllResponseHeaders() : "";
  };
  goog.net.XhrIo.prototype.getLastErrorCode = function() {
    return this.lastErrorCode_;
  };
  goog.net.XhrIo.prototype.getLastError = function() {
    return typeof this.lastError_ === "string" ? this.lastError_ : String(this.lastError_);
  };
  goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
    return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
  };
  goog.debug.entryPointRegistry.register(function(transformer) {
    goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
  });
});
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CanceledError");
goog.require("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
  this.fired_ = false;
  this.hadError_ = false;
  this.result_ = undefined;
  this.blocked_ = false;
  this.blocking_ = false;
  this.silentlyCanceled_ = false;
  this.unhandledErrorId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if (goog.async.Deferred.LONG_STACK_TRACES) {
    this.constructorStack_ = null;
    if (Error.captureStackTrace) {
      var target = {stack:""};
      Error.captureStackTrace(target, goog.async.Deferred);
      if (typeof target.stack == "string") {
        this.constructorStack_ = target.stack.replace(/^[^\n]*\n/, "");
      }
    }
  }
};
goog.async.Deferred.STRICT_ERRORS = goog.define("goog.async.Deferred.STRICT_ERRORS", false);
goog.async.Deferred.LONG_STACK_TRACES = goog.define("goog.async.Deferred.LONG_STACK_TRACES", false);
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this);
    } else {
      this.silentlyCanceled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CanceledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res);
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result);
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.makeStackTraceLong_(opt_result);
  this.updateResult_(false, opt_result);
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {
  if (!goog.async.Deferred.LONG_STACK_TRACES) {
    return;
  }
  if (this.constructorStack_ && goog.isObject(error) && error.stack && /^[^\n]+(\n   [^\n]+)+/.test(error.stack)) {
    error.stack = error.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_;
  }
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.addFinally = function(f, opt_scope) {
  return this.addCallbacks(f, function(err) {
    var result = f.call(this, err);
    if (result === undefined) {
      throw err;
    }
    return result;
  }, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  var resolve, reject;
  var promise = new goog.Promise(function(res, rej) {
    resolve = res;
    reject = rej;
  });
  this.addCallbacks(resolve, function(reason) {
    if (reason instanceof goog.async.Deferred.CanceledError) {
      promise.cancel();
    } else {
      reject(reason);
    }
  });
  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);
};
goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  if (!(otherDeferred instanceof goog.async.Deferred)) {
    return this.addCallback(function() {
      return otherDeferred;
    });
  }
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledErrorId_ && this.hasFired() && this.hasErrback_()) {
    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);
    this.unhandledErrorId_ = 0;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while (this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (ret !== undefined) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (goog.Thenable.isImplementedBy(res) || typeof goog.global["Promise"] === "function" && res instanceof goog.global["Promise"]) {
          isNewlyBlocked = true;
          this.blocked_ = true;
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        this.makeStackTraceLong_(res);
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isNewlyBlocked) {
    var onCallback = goog.bind(this.continue_, this, true);
    var onErrback = goog.bind(this.continue_, this, false);
    if (res instanceof goog.async.Deferred) {
      res.addCallbacks(onCallback, onErrback);
      res.blocking_ = true;
    } else {
      res.then(onCallback, onErrback);
    }
  } else {
    if (goog.async.Deferred.STRICT_ERRORS && this.isError(res) && !(res instanceof goog.async.Deferred.CanceledError)) {
      this.hadError_ = true;
      unhandledException = true;
    }
  }
  if (unhandledException) {
    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d;
};
goog.async.Deferred.fromPromise = function(promise) {
  var d = new goog.async.Deferred;
  promise.then(function(value) {
    d.callback(value);
  }, function(error) {
    d.errback(error);
  });
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.canceled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
goog.async.Deferred.Error_ = function(error) {
  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);
  this.error_ = error;
};
goog.async.Deferred.Error_.prototype.throwError = function() {
  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], "Cannot throw an error that is not scheduled.");
  delete goog.async.Deferred.errorMap_[this.id_];
  throw this.error_;
};
goog.async.Deferred.Error_.prototype.resetTimer = function() {
  goog.global.clearTimeout(this.id_);
};
goog.async.Deferred.errorMap_ = {};
goog.async.Deferred.scheduleError_ = function(error) {
  var deferredError = new goog.async.Deferred.Error_(error);
  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;
  return deferredError.id_;
};
goog.async.Deferred.unscheduleError_ = function(id) {
  var error = goog.async.Deferred.errorMap_[id];
  if (error) {
    error.resetTimer();
    delete goog.async.Deferred.errorMap_[id];
  }
};
goog.async.Deferred.assertNoErrors = function() {
  var map = goog.async.Deferred.errorMap_;
  for (var key in map) {
    var error = map[key];
    error.resetTimer();
    error.throwError();
  }
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.async.Delay.base(this, "constructor");
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.base(this, "disposeInternal");
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, opt_interval !== undefined ? opt_interval : this.interval_);
};
goog.async.Delay.prototype.startIfNotActive = function(opt_interval) {
  if (!this.isActive()) {
    this.start(opt_interval);
  }
};
goog.async.Delay.prototype.stop = function() {
  if (this.isActive()) {
    goog.Timer.clear(this.id_);
  }
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if (this.listener_) {
    this.listener_.call(this.handler_);
  }
};
goog.provide("goog.events.EventHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.object");
goog.events.EventHandler = function(opt_scope) {
  goog.Disposable.call(this);
  this.handler_ = opt_scope;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_options) {
  var self = this;
  return self.listen_(src, type, opt_fn, opt_options);
};
goog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, options, scope) {
  var self = this;
  return self.listen_(src, type, fn, options, scope);
};
goog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_options, opt_scope) {
  var self = this;
  if (!goog.isArray(type)) {
    if (type) {
      goog.events.EventHandler.typeArray_[0] = type.toString();
    }
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0; i < type.length; i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || self.handleEvent, opt_options || false, opt_scope || self.handler_ || self);
    if (!listenerObj) {
      return self;
    }
    var key = listenerObj.key;
    self.keys_[key] = listenerObj;
  }
  return self;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_options) {
  var self = this;
  return self.listenOnce_(src, type, opt_fn, opt_options);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {
  var self = this;
  return self.listenOnce_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_options, opt_scope) {
  var self = this;
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      self.listenOnce_(src, type[i], opt_fn, opt_options, opt_scope);
    }
  } else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || self.handleEvent, opt_options, opt_scope || self.handler_ || self);
    if (!listenerObj) {
      return self;
    }
    var key = listenerObj.key;
    self.keys_[key] = listenerObj;
  }
  return self;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {
  var self = this;
  return self.listenWithWrapper_(src, wrapper, listener, opt_capt);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {
  var self = this;
  return self.listenWithWrapper_(src, wrapper, listener, capture, scope);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {
  var self = this;
  wrapper.listen(src, listener, opt_capt, opt_scope || self.handler_ || self, self);
  return self;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var count = 0;
  for (var key in this.keys_) {
    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {
      count++;
    }
  }
  return count;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_options, opt_scope) {
  var self = this;
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      self.unlisten(src, type[i], opt_fn, opt_options, opt_scope);
    }
  } else {
    var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
    var listener = goog.events.getListener(src, type, opt_fn || self.handleEvent, capture, opt_scope || self.handler_ || self);
    if (listener) {
      goog.events.unlistenByKey(listener);
      delete self.keys_[listener.key];
    }
  }
  return self;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {
  var self = this;
  wrapper.unlisten(src, listener, opt_capt, opt_scope || self.handler_ || self, self);
  return self;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, function(listenerObj, key) {
    if (this.keys_.hasOwnProperty(key)) {
      goog.events.unlistenByKey(listenerObj);
    }
  }, this);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw new Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.html.legacyconversions");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.html.legacyconversions.safeHtmlFromString = function(html) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, null);
};
goog.html.legacyconversions.safeScriptFromString = function(script) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);
};
goog.html.legacyconversions.safeStyleFromString = function(style) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.legacyconversions.safeStyleSheetFromString = function(styleSheet) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.legacyconversions.safeUrlFromString = function(url) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.legacyconversions.trustedResourceUrlFromString = function(url) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.legacyconversions.reportCallback_ = goog.nullFunction;
goog.html.legacyconversions.setReportCallback = function(callback) {
  goog.html.legacyconversions.reportCallback_ = callback;
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.messaging.AbstractChannel.base(this, "constructor");
  this.services_ = {};
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.log.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if (opt_connectCb) {
    opt_connectCb();
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true;
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload};
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback;
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if (!service) {
    return;
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if (decodedPayload != null) {
    service.callback(decodedPayload);
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if (service) {
    return service;
  } else {
    if (this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return {callback:callback, objectPayload:objectPayload};
    }
  }
  goog.log.warning(this.logger, 'Unknown service name "' + serviceName + '"');
  return null;
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if (objectPayload && typeof payload === "string") {
    try {
      return JSON.parse(payload);
    } catch (err) {
      goog.log.warning(this.logger, "Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null;
    }
  } else {
    if (!objectPayload && typeof payload !== "string") {
      return goog.json.serialize(payload);
    }
  }
  return payload;
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.messaging.AbstractChannel.base(this, "disposeInternal");
  delete this.services_;
  delete this.defaultService_;
};
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc.TransportNames");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType;
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow();
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[String(this.transportType)] || "";
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.DirectTransport");
goog.require("goog.Timer");
goog.require("goog.async.Deferred");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.object");
goog.scope(function() {
  var CfgFields = goog.net.xpc.CfgFields;
  var CrossPageChannelRole = goog.net.xpc.CrossPageChannelRole;
  var Deferred = goog.async.Deferred;
  var EventHandler = goog.events.EventHandler;
  var Timer = goog.Timer;
  var Transport = goog.net.xpc.Transport;
  goog.net.xpc.DirectTransport = function(channel, opt_domHelper) {
    goog.net.xpc.DirectTransport.base(this, "constructor", opt_domHelper);
    this.channel_ = channel;
    this.eventHandler_ = new EventHandler(this);
    this.registerDisposable(this.eventHandler_);
    this.maybeAttemptToConnectTimer_ = new Timer(DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_, this.getWindow());
    this.registerDisposable(this.maybeAttemptToConnectTimer_);
    this.setupAckReceived_ = new Deferred;
    this.setupAckSent_ = new Deferred;
    this.connected_ = new Deferred;
    this.endpointId_ = goog.net.xpc.getRandomString(10);
    this.peerEndpointId_ = null;
    this.asyncSendsMap_ = {};
    this.originalChannelName_ = this.channel_.name;
    this.channel_.updateChannelNameAndCatalog(DirectTransport.getRoledChannelName_(this.channel_.name, this.channel_.getRole()));
    this.initialized_ = false;
    this.connected_.awaitDeferred(this.setupAckReceived_);
    this.connected_.awaitDeferred(this.setupAckSent_);
    this.connected_.addCallback(this.notifyConnected_, this);
    this.connected_.callback(true);
    this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, Timer.TICK, this.maybeAttemptToConnect_);
    goog.log.info(goog.net.xpc.logger, "DirectTransport created. role\x3d" + this.channel_.getRole());
  };
  goog.inherits(goog.net.xpc.DirectTransport, Transport);
  var DirectTransport = goog.net.xpc.DirectTransport;
  DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_ = 100;
  DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ = 0;
  DirectTransport.isSupported = function(peerWindow) {
    try {
      return window.document.domain == peerWindow.document.domain;
    } catch (e) {
      return false;
    }
  };
  DirectTransport.activeCount_ = {};
  DirectTransport.GLOBAL_TRANPORT_PATH_ = "crosswindowmessaging.channel";
  DirectTransport.MESSAGE_DELIMITER_ = ",";
  DirectTransport.initialize_ = function(listenWindow) {
    var uid = goog.getUid(listenWindow);
    var value = DirectTransport.activeCount_[uid] || 0;
    if (value == 0) {
      var globalProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, listenWindow);
      if (globalProxy == null) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, DirectTransport.messageReceivedHandler_, listenWindow);
      }
    }
    DirectTransport.activeCount_[uid]++;
  };
  DirectTransport.getRoledChannelName_ = function(channelName, role) {
    return channelName + "_" + role;
  };
  DirectTransport.messageReceivedHandler_ = function(literal) {
    var msg = DirectTransport.Message_.fromLiteral(literal);
    var channelName = msg.channelName;
    var service = msg.service;
    var payload = msg.payload;
    goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
    var channel = goog.net.xpc.channels[channelName];
    if (channel) {
      channel.xpcDeliver(service, payload);
      return true;
    }
    var transportMessageType = DirectTransport.parseTransportPayload_(payload)[0];
    for (var staleChannelName in goog.net.xpc.channels) {
      var staleChannel = goog.net.xpc.channels[staleChannelName];
      if (staleChannel.getRole() == CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && transportMessageType == goog.net.xpc.SETUP) {
        staleChannel.updateChannelNameAndCatalog(channelName);
        staleChannel.xpcDeliver(service, payload);
        return true;
      }
    }
    goog.log.info(goog.net.xpc.logger, "channel name mismatch; message ignored.");
    return false;
  };
  DirectTransport.prototype.transportType = goog.net.xpc.TransportTypes.DIRECT;
  DirectTransport.prototype.transportServiceHandler = function(payload) {
    var transportParts = DirectTransport.parseTransportPayload_(payload);
    var transportMessageType = transportParts[0];
    var peerEndpointId = transportParts[1];
    switch(transportMessageType) {
      case goog.net.xpc.SETUP_ACK_:
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
        break;
      case goog.net.xpc.SETUP:
        this.sendSetupAckMessage_();
        if (this.peerEndpointId_ != null && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
        break;
    }
  };
  DirectTransport.prototype.sendSetupMessage_ = function() {
    var payload = goog.net.xpc.SETUP;
    payload += DirectTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  };
  DirectTransport.prototype.sendSetupAckMessage_ = function() {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    if (!this.setupAckSent_.hasFired()) {
      this.setupAckSent_.callback(true);
    }
  };
  DirectTransport.prototype.connect = function() {
    var win = this.getWindow();
    if (win) {
      DirectTransport.initialize_(win);
      this.initialized_ = true;
      this.maybeAttemptToConnect_();
    } else {
      goog.log.fine(goog.net.xpc.logger, "connect(): no window to initialize.");
    }
  };
  DirectTransport.prototype.maybeAttemptToConnect_ = function() {
    if (this.channel_.isConnected()) {
      this.maybeAttemptToConnectTimer_.stop();
      return;
    }
    this.maybeAttemptToConnectTimer_.start();
    this.sendSetupMessage_();
  };
  DirectTransport.prototype.send = function(service, payload) {
    if (!this.channel_.getPeerWindowObject()) {
      goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
      return;
    }
    var channelName = DirectTransport.getRoledChannelName_(this.originalChannelName_, this.getPeerRole_());
    var message = new DirectTransport.Message_(channelName, service, payload);
    if (this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE]) {
      this.executeScheduledSend_(message);
    } else {
      this.asyncSendsMap_[goog.getUid(message)] = Timer.callOnce(goog.bind(this.executeScheduledSend_, this, message), 0);
    }
  };
  DirectTransport.prototype.executeScheduledSend_ = function(message) {
    var messageId = goog.getUid(message);
    if (this.asyncSendsMap_[messageId]) {
      delete this.asyncSendsMap_[messageId];
    }
    try {
      var peerProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, this.channel_.getPeerWindowObject());
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Can't access other window, ignoring.", error);
      return;
    }
    if (peerProxy === null) {
      goog.log.warning(goog.net.xpc.logger, "Peer window had no global function.");
      return;
    }
    try {
      peerProxy(message.toLiteral());
      goog.log.info(goog.net.xpc.logger, "send(): channelName\x3d" + message.channelName + " service\x3d" + message.service + " payload\x3d" + message.payload);
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Error performing call, ignoring.", error);
    }
  };
  DirectTransport.prototype.getPeerRole_ = function() {
    var role = this.channel_.getRole();
    return role == goog.net.xpc.CrossPageChannelRole.OUTER ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  };
  DirectTransport.prototype.notifyConnected_ = function() {
    this.channel_.notifyConnected(this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE] ? DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ : 0);
  };
  DirectTransport.prototype.disposeInternal = function() {
    if (this.initialized_) {
      var listenWindow = this.getWindow();
      var uid = goog.getUid(listenWindow);
      var value = --DirectTransport.activeCount_[uid];
      if (value == 1) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, null, listenWindow);
      }
    }
    if (this.asyncSendsMap_) {
      goog.object.forEach(this.asyncSendsMap_, function(timerId) {
        Timer.clear(timerId);
      });
      this.asyncSendsMap_ = null;
    }
    if (this.setupAckReceived_) {
      this.setupAckReceived_.cancel();
      delete this.setupAckReceived_;
    }
    if (this.setupAckSent_) {
      this.setupAckSent_.cancel();
      delete this.setupAckSent_;
    }
    if (this.connected_) {
      this.connected_.cancel();
      delete this.connected_;
    }
    DirectTransport.base(this, "disposeInternal");
  };
  DirectTransport.parseTransportPayload_ = function(payload) {
    var transportParts = payload.split(DirectTransport.MESSAGE_DELIMITER_);
    transportParts[1] = transportParts[1] || null;
    return transportParts;
  };
  DirectTransport.Message_ = function(channelName, service, payload) {
    this.channelName = channelName;
    this.service = service;
    this.payload = payload;
  };
  DirectTransport.Message_.prototype.toLiteral = function() {
    return {"channelName":this.channelName, "service":this.service, "payload":this.payload};
  };
  DirectTransport.Message_.fromLiteral = function(literal) {
    return new DirectTransport.Message_(literal["channelName"], literal["service"], literal["payload"]);
  };
});
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.async.Deferred");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper, opt_oneSidedHandshake, opt_protocolVersion) {
  goog.net.xpc.NativeMessagingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.protocolVersion_ = opt_protocolVersion || 2;
  goog.asserts.assert(this.protocolVersion_ >= 1);
  goog.asserts.assert(this.protocolVersion_ <= 2);
  this.peerHostname_ = peerHostname || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!opt_oneSidedHandshake;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  if (this.oneSidedHandshake_) {
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.connected_.awaitDeferred(this.setupAckReceived_);
    } else {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  } else {
    this.connected_.awaitDeferred(this.setupAckReceived_);
    if (this.protocolVersion_ == 2) {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  }
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(true);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.log.info(goog.net.xpc.logger, "NativeMessagingTransport created.  " + "protocolVersion\x3d" + this.protocolVersion_ + ", oneSidedHandshake\x3d" + this.oneSidedHandshake_ + ", role\x3d" + this.channel_.getRole());
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.prototype.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(version) {
  return this.peerProtocolVersion_ == null || this.peerProtocolVersion_ == version;
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if (typeof value !== "number") {
    value = 0;
  }
  if (value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1;
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if (typeof data !== "string") {
    return false;
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if (headDelim == -1 || serviceDelim == -1) {
    return false;
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
  var channel = goog.net.xpc.channels[channelName];
  if (channel) {
    channel.xpcDeliver(service, payload, msgEvt.getBrowserEvent().origin);
    return true;
  }
  var transportMessageType = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload)[0];
  for (var staleChannelName in goog.net.xpc.channels) {
    var staleChannel = goog.net.xpc.channels[staleChannelName];
    if (staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && (transportMessageType == goog.net.xpc.SETUP || transportMessageType == goog.net.xpc.SETUP_NTPV2) && staleChannel.isMessageOriginAcceptable(msgEvt.getBrowserEvent().origin)) {
      staleChannel.updateChannelNameAndCatalog(channelName);
      staleChannel.xpcDeliver(service, payload);
      return true;
    }
  }
  goog.log.info(goog.net.xpc.logger, 'channel name mismatch; message ignored"');
  return false;
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  var transportParts = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload);
  var transportMessageType = transportParts[0];
  var peerEndpointId = transportParts[1];
  switch(transportMessageType) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      if (!this.setupAckReceived_.hasFired()) {
        this.setupAckReceived_.callback(true);
      }
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      if (this.protocolVersion_ == 2) {
        this.setPeerProtocolVersion_(2);
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
      }
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      if (this.protocolVersion_ == 2) {
        var prevPeerProtocolVersion = this.peerProtocolVersion_;
        this.setPeerProtocolVersion_(2);
        this.sendSetupAckMessage_(2);
        if ((prevPeerProtocolVersion == 1 || this.peerEndpointId_ != null) && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
      }
      break;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(this.protocolVersion_ == 1 && this.peerProtocolVersion_ == 2));
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2)) {
    var payload = goog.net.xpc.SETUP_NTPV2;
    payload += goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  }
  if (this.couldPeerVersionBe_(1)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(protocolVersion) {
  goog.asserts.assert(this.protocolVersion_ != 1 || protocolVersion != 2, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2) && protocolVersion == 2) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2);
  } else {
    if (this.couldPeerVersionBe_(1) && protocolVersion == 1) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    } else {
      return;
    }
  }
  if (!this.setupAckSent_.hasFired()) {
    this.setupAckSent_.callback(true);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(version) {
  if (version > this.peerProtocolVersion_) {
    this.peerProtocolVersion_ = version;
  }
  if (this.peerProtocolVersion_ == 1) {
    if (!this.setupAckSent_.hasFired() && !this.oneSidedHandshake_) {
      this.setupAckSent_.callback(true);
    }
    this.peerEndpointId_ = null;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.maybeAttemptToConnect_();
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var outerFrame = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  if (this.oneSidedHandshake_ && outerFrame || this.channel_.isConnected() || this.isDisposed()) {
    this.maybeAttemptToConnectTimer_.stop();
    return;
  }
  this.maybeAttemptToConnectTimer_.start();
  this.sendSetupMessage_();
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.getPeerWindowObject();
  if (!win) {
    goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
    return;
  }
  this.send = function(service, payload) {
    var transport = this;
    var channelName = this.channel_.name;
    var sendFunctor = function() {
      transport.sendTimerId_ = 0;
      try {
        var obj = win.postMessage ? win : win.document;
        if (!obj.postMessage) {
          goog.log.warning(goog.net.xpc.logger, "Peer window had no postMessage function.");
          return;
        }
        obj.postMessage(channelName + "|" + service + ":" + payload, transport.peerHostname_);
        goog.log.fine(goog.net.xpc.logger, "send(): service\x3d" + service + " payload\x3d" + payload + " to hostname\x3d" + transport.peerHostname_);
      } catch (error) {
        goog.log.warning(goog.net.xpc.logger, "Error performing postMessage, ignoring.", error);
      }
    };
    this.sendTimerId_ = goog.Timer.callOnce(sendFunctor, 0);
  };
  this.send(service, payload);
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  var delay = this.protocolVersion_ == 1 || this.peerProtocolVersion_ == 1 ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : undefined;
  this.channel_.notifyConnected(delay);
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if (this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if (value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
    }
  }
  if (this.sendTimerId_) {
    goog.Timer.clear(this.sendTimerId_);
    this.sendTimerId_ = 0;
  }
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.net.xpc.NativeMessagingTransport.base(this, "disposeInternal");
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(payload) {
  var transportParts = payload.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_);
  transportParts[1] = transportParts[1] || null;
  return transportParts;
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Uri");
goog.require("goog.async.Deferred");
goog.require("goog.async.Delay");
goog.require("goog.dispose");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventType");
goog.require("goog.html.legacyconversions");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.ChannelStates");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.DirectTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.net.xpc.UriCfgFields");
goog.require("goog.string");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.net.xpc.CrossPageChannel.base(this, "constructor");
  for (var i = 0, uriField; uriField = goog.net.xpc.UriCfgFields[i]; i++) {
    if (uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw new Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels[this.name] = this;
  if (!goog.events.getListener(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_)) {
    goog.events.listenOnce(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_);
  }
  goog.log.info(goog.net.xpc.logger, "CrossPageChannel created: " + this.name);
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED;
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.getConfig = function() {
  return this.cfg_;
};
goog.net.xpc.CrossPageChannel.prototype.getIframeElement = function() {
  return this.iframeElement_;
};
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject;
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_;
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return !!this.peerWindowObject_ && !this.peerWindowObject_.closed;
  } catch (e) {
    return false;
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if (goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
  } else {
    transportType = goog.net.xpc.TransportTypes.UNDEFINED;
  }
  return transportType;
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if (this.transport_) {
    return;
  }
  var CfgFields = goog.net.xpc.CfgFields;
  if (!this.cfg_[CfgFields.TRANSPORT]) {
    this.cfg_[CfgFields.TRANSPORT] = this.determineTransportType_();
  }
  if (goog.isFunction(this.cfg_[CfgFields.TRANSPORT])) {
    this.transport_ = new this.cfg_[CfgFields.TRANSPORT](this, this.domHelper_);
  } else {
    switch(this.cfg_[CfgFields.TRANSPORT]) {
      case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
        var protocolVersion = this.cfg_[CfgFields.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2;
        this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[CfgFields.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[CfgFields.ONE_SIDED_HANDSHAKE], protocolVersion);
        break;
      case goog.net.xpc.TransportTypes.DIRECT:
        if (this.peerWindowObject_ && goog.net.xpc.DirectTransport.isSupported(this.peerWindowObject_)) {
          this.transport_ = new goog.net.xpc.DirectTransport(this, this.domHelper_);
        } else {
          goog.log.info(goog.net.xpc.logger, "DirectTransport not supported for this window, peer window in" + " different security context or not set yet.");
        }
        break;
    }
  }
  if (this.transport_) {
    goog.log.info(goog.net.xpc.logger, "Transport created: " + this.transport_.getName());
  } else {
    throw new Error("CrossPageChannel: No suitable transport found! You may " + "try injecting a Transport constructor directly via the channel " + "config object.");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType();
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  peerCfg[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  }
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (role) {
    peerCfg[goog.net.xpc.CfgFields.ROLE] = role == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER;
  }
  return peerCfg;
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  goog.log.info(goog.net.xpc.logger, "createPeerIframe()");
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if (!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4);
  }
  var iframeElm = goog.dom.getDomHelper(parentElm).createElement(goog.dom.TagName.IFRAME);
  iframeElm.id = iframeElm.name = iframeId;
  if (opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm);
  } else {
    iframeElm.style.width = iframeElm.style.height = "100%";
  }
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(undefined, this);
  var peerUri = this.getPeerUri(opt_addCfgParam);
  this.peerLoadHandler_.listenOnceWithScope(iframeElm, "load", this.peerWindowDeferred_.callback, false, this.peerWindowDeferred_);
  if (goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    window.setTimeout(goog.bind(function() {
      parentElm.appendChild(iframeElm);
      goog.dom.safe.setIframeSrc(iframeElm, goog.html.legacyconversions.trustedResourceUrlFromString(peerUri.toString()));
      goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
    }, this), 1);
  } else {
    goog.dom.safe.setIframeSrc(iframeElm, goog.html.legacyconversions.trustedResourceUrlFromString(peerUri.toString()));
    parentElm.appendChild(iframeElm);
    goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
  }
  return iframeElm;
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.cancel();
    this.peerWindowDeferred_ = null;
  }
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(opt_addCfgParam) {
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if (typeof peerUri === "string") {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri);
  }
  if (opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()));
  }
  return peerUri;
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if (this.state_ == goog.net.xpc.ChannelStates.CLOSED) {
    this.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
  }
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.addCallback(this.continueConnection_);
  } else {
    this.continueConnection_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.log.info(goog.net.xpc.logger, "continueConnection_()");
  this.peerWindowDeferred_ = null;
  if (this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]);
  }
  if (this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if (!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]];
    }
    this.setPeerWindowObject(winObj);
  }
  if (!this.peerWindowObject_) {
    if (window == window.top) {
      throw new Error("CrossPageChannel: Can't connect, peer window-object not set.");
    } else {
      this.setPeerWindowObject(window.parent);
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while (this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()();
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.transport_ = null;
  this.connectCb_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" closed');
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(opt_delay) {
  if (this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive()) {
    return;
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" connected');
  goog.dispose(this.connectionDelay_);
  if (opt_delay !== undefined) {
    this.connectionDelay_ = new goog.async.Delay(this.connectCb_, opt_delay);
    this.connectionDelay_.start();
  } else {
    this.connectionDelay_ = null;
    this.connectCb_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError = function() {
  goog.log.info(goog.net.xpc.logger, "Transport Error");
  this.close();
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if (!this.isConnected()) {
    goog.log.error(goog.net.xpc.logger, "Can't send. Channel not connected.");
    return;
  }
  if (!this.isPeerAvailable()) {
    goog.log.error(goog.net.xpc.logger, "Peer has disappeared.");
    this.close();
    return;
  }
  if (goog.isObject(payload)) {
    payload = goog.json.serialize(payload);
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload);
};
goog.net.xpc.CrossPageChannel.prototype.xpcDeliver = function(serviceName, payload, opt_origin) {
  if (this.peerWindowDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.xpcDeliver, this, serviceName, payload, opt_origin));
    return;
  }
  if (!this.isMessageOriginAcceptable(opt_origin)) {
    goog.log.warning(goog.net.xpc.logger, 'Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return;
  }
  if (this.isDisposed() || this.state_ == goog.net.xpc.ChannelStates.CLOSED) {
    goog.log.warning(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Channel closed.");
  } else {
    if (!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload);
    } else {
      if (this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload);
      } else {
        goog.log.info(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Not connected.");
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name;
  }
  return name.replace(/[%:|]/g, encodeURIComponent);
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1);
  } else {
    return name;
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (typeof role === "number") {
    return role;
  } else {
    return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  }
};
goog.net.xpc.CrossPageChannel.prototype.updateChannelNameAndCatalog = function(name) {
  goog.log.fine(goog.net.xpc.logger, "changing channel name to " + name);
  delete goog.net.xpc.channels[this.name];
  this.name = name;
  goog.net.xpc.channels[name] = this;
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(opt_origin)) || goog.string.isEmptyOrWhitespace(goog.string.makeSafe(peerHostname)) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.net.xpc.CrossPageChannel.base(this, "disposeInternal");
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for (var name in goog.net.xpc.channels) {
    goog.dispose(goog.net.xpc.channels[name]);
  }
};
goog.provide("goog.net.WebSocket");
goog.provide("goog.net.WebSocket.ErrorEvent");
goog.provide("goog.net.WebSocket.EventType");
goog.provide("goog.net.WebSocket.MessageEvent");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.log");
goog.net.WebSocket = function(opt_params, opt_getNextReconnect) {
  goog.net.WebSocket.base(this, "constructor");
  if (typeof opt_params != "object") {
    opt_params = {autoReconnect:opt_params, getNextReconnect:opt_getNextReconnect};
  }
  this.autoReconnect_ = opt_params.autoReconnect != false;
  this.getNextReconnect_ = opt_params.getNextReconnect || goog.net.WebSocket.EXPONENTIAL_BACKOFF_;
  this.binaryType_ = opt_params.binaryType || goog.net.WebSocket.BinaryType.BLOB;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.inherits(goog.net.WebSocket, goog.events.EventTarget);
goog.net.WebSocket.BinaryType = {ARRAY_BUFFER:"arraybuffer", BLOB:"blob"};
goog.net.WebSocket.Options = function() {
  this.autoReconnect;
  this.getNextReconnect;
  this.binaryType;
};
goog.net.WebSocket.prototype.webSocket_ = null;
goog.net.WebSocket.prototype.url_ = null;
goog.net.WebSocket.prototype.protocol_ = undefined;
goog.net.WebSocket.prototype.closeExpected_ = false;
goog.net.WebSocket.prototype.reconnectAttempt_ = 0;
goog.net.WebSocket.prototype.reconnectTimer_ = null;
goog.net.WebSocket.prototype.logger_ = goog.log.getLogger("goog.net.WebSocket");
goog.net.WebSocket.EventType = {CLOSED:goog.events.getUniqueId("closed"), ERROR:goog.events.getUniqueId("error"), MESSAGE:goog.events.getUniqueId("message"), OPENED:goog.events.getUniqueId("opened")};
goog.net.WebSocket.ReadyState_ = {CONNECTING:0, OPEN:1, CLOSING:2, CLOSED:3};
goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_ = 60 * 1000;
goog.net.WebSocket.EXPONENTIAL_BACKOFF_ = function(attempt) {
  var time = Math.pow(2, attempt) * 1000;
  return Math.min(time, goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_);
};
goog.net.WebSocket.protectEntryPoints = function(errorHandler) {
  goog.net.WebSocket.prototype.onOpen_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onError_);
};
goog.net.WebSocket.prototype.open = function(url, opt_protocol) {
  goog.asserts.assert(goog.global["WebSocket"], "This browser does not support WebSocket");
  goog.asserts.assert(!this.isOpen(), "The WebSocket is already open");
  this.clearReconnectTimer_();
  this.url_ = url;
  this.protocol_ = opt_protocol;
  if (this.protocol_) {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_ + " with protocol " + this.protocol_);
    this.webSocket_ = new WebSocket(this.url_, this.protocol_);
  } else {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_);
    this.webSocket_ = new WebSocket(this.url_);
  }
  this.webSocket_.binaryType = this.binaryType_;
  this.webSocket_.onopen = goog.bind(this.onOpen_, this);
  this.webSocket_.onclose = goog.bind(this.onClose_, this);
  this.webSocket_.onmessage = goog.bind(this.onMessage_, this);
  this.webSocket_.onerror = goog.bind(this.onError_, this);
};
goog.net.WebSocket.prototype.close = function() {
  this.clearReconnectTimer_();
  if (this.webSocket_) {
    goog.log.info(this.logger_, "Closing the WebSocket.");
    this.closeExpected_ = true;
    this.webSocket_.close();
    this.webSocket_ = null;
  }
};
goog.net.WebSocket.prototype.send = function(message) {
  goog.asserts.assert(this.isOpen(), "Cannot send without an open socket");
  this.webSocket_.send(message);
};
goog.net.WebSocket.prototype.isOpen = function() {
  return !!this.webSocket_ && this.webSocket_.readyState == goog.net.WebSocket.ReadyState_.OPEN;
};
goog.net.WebSocket.prototype.getBufferedAmount = function() {
  return this.webSocket_.bufferedAmount;
};
goog.net.WebSocket.prototype.onOpen_ = function() {
  goog.log.info(this.logger_, "WebSocket opened on " + this.url_);
  this.dispatchEvent(goog.net.WebSocket.EventType.OPENED);
  this.reconnectAttempt_ = 0;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.net.WebSocket.prototype.onClose_ = function(event) {
  goog.log.info(this.logger_, "The WebSocket on " + this.url_ + " closed.");
  this.dispatchEvent(goog.net.WebSocket.EventType.CLOSED);
  this.webSocket_ = null;
  if (this.closeExpected_) {
    goog.log.info(this.logger_, "The WebSocket closed normally.");
    this.url_ = null;
    this.protocol_ = undefined;
  } else {
    goog.log.error(this.logger_, "The WebSocket disconnected unexpectedly: " + event.data);
    if (this.autoReconnect_) {
      var seconds = Math.floor(this.nextReconnect_ / 1000);
      goog.log.info(this.logger_, "Seconds until next reconnect attempt: " + seconds);
      this.reconnectTimer_ = goog.Timer.callOnce(goog.bind(this.open, this, this.url_, this.protocol_), this.nextReconnect_, this);
      this.reconnectAttempt_++;
      this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
    }
  }
  this.closeExpected_ = false;
};
goog.net.WebSocket.prototype.onMessage_ = function(event) {
  this.dispatchEvent(new goog.net.WebSocket.MessageEvent(event.data));
};
goog.net.WebSocket.prototype.onError_ = function(event) {
  var data = event.data;
  goog.log.error(this.logger_, "An error occurred: " + data);
  this.dispatchEvent(new goog.net.WebSocket.ErrorEvent(data));
};
goog.net.WebSocket.prototype.clearReconnectTimer_ = function() {
  if (this.reconnectTimer_ != null) {
    goog.Timer.clear(this.reconnectTimer_);
  }
  this.reconnectTimer_ = null;
};
goog.net.WebSocket.prototype.disposeInternal = function() {
  goog.net.WebSocket.base(this, "disposeInternal");
  this.close();
};
goog.net.WebSocket.MessageEvent = function(message) {
  goog.net.WebSocket.MessageEvent.base(this, "constructor", goog.net.WebSocket.EventType.MESSAGE);
  this.message = message;
};
goog.inherits(goog.net.WebSocket.MessageEvent, goog.events.Event);
goog.net.WebSocket.ErrorEvent = function(data) {
  goog.net.WebSocket.ErrorEvent.base(this, "constructor", goog.net.WebSocket.EventType.ERROR);
  this.data = data;
};
goog.inherits(goog.net.WebSocket.ErrorEvent, goog.events.Event);
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.WebSocket.prototype.onOpen_ = transformer(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = transformer(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = transformer(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = transformer(goog.net.WebSocket.prototype.onError_);
});
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
clojure.browser.event.IEventType = function() {
};
var clojure$browser$event$IEventType$event_types$dyn_7760 = function(this$) {
  var x__4428__auto__ = this$ == null ? null : this$;
  var m__4429__auto__ = clojure.browser.event.event_types[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, this$);
  } else {
    var m__4426__auto__ = clojure.browser.event.event_types["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol.call(null, "IEventType.event-types", this$);
    }
  }
};
clojure.browser.event.event_types = function clojure$browser$event$event_types(this$) {
  if (!(this$ == null) && !(this$.clojure$browser$event$IEventType$event_types$arity$1 == null)) {
    return this$.clojure$browser$event$IEventType$event_types$arity$1(this$);
  } else {
    return clojure$browser$event$IEventType$event_types$dyn_7760.call(null, this$);
  }
};
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$ = cljs.core.PROTOCOL_SENTINEL;
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__7761) {
    var vec__7762 = p__7761;
    var k = cljs.core.nth.call(null, vec__7762, 0, null);
    var v = cljs.core.nth.call(null, vec__7762, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
if (typeof Element !== "undefined") {
  Element.prototype.clojure$browser$event$IEventType$ = cljs.core.PROTOCOL_SENTINEL;
  Element.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
    var this$__$1 = this;
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__7765) {
      var vec__7766 = p__7765;
      var k = cljs.core.nth.call(null, vec__7766, 0, null);
      var v = cljs.core.nth.call(null, vec__7766, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
  };
} else {
}
clojure.browser.event.listen = function clojure$browser$event$listen(var_args) {
  var G__7770 = arguments.length;
  switch(G__7770) {
    case 3:
      return clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$3 = function(src, type, fn) {
  return clojure.browser.event.listen.call(null, src, type, fn, false);
};
clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$4 = function(src, type, fn, capture_QMARK_) {
  return goog.events.listen(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
};
clojure.browser.event.listen.cljs$lang$maxFixedArity = 4;
clojure.browser.event.listen_once = function clojure$browser$event$listen_once(var_args) {
  var G__7773 = arguments.length;
  switch(G__7773) {
    case 3:
      return clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$3 = function(src, type, fn) {
  return clojure.browser.event.listen_once.call(null, src, type, fn, false);
};
clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$4 = function(src, type, fn, capture_QMARK_) {
  return goog.events.listenOnce(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
};
clojure.browser.event.listen_once.cljs$lang$maxFixedArity = 4;
clojure.browser.event.unlisten = function clojure$browser$event$unlisten(var_args) {
  var G__7776 = arguments.length;
  switch(G__7776) {
    case 3:
      return clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$3 = function(src, type, fn) {
  return clojure.browser.event.unlisten.call(null, src, type, fn, false);
};
clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$4 = function(src, type, fn, capture_QMARK_) {
  return goog.events.unlisten(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
};
clojure.browser.event.unlisten.cljs$lang$maxFixedArity = 4;
clojure.browser.event.unlisten_by_key = function clojure$browser$event$unlisten_by_key(key) {
  return goog.events.unlistenByKey(key);
};
clojure.browser.event.dispatch_event = function clojure$browser$event$dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event);
};
clojure.browser.event.expose = function clojure$browser$event$expose(e) {
  return goog.events.expose(e);
};
clojure.browser.event.fire_listeners = function clojure$browser$event$fire_listeners(obj, type, capture, event) {
  return null;
};
clojure.browser.event.total_listener_count = function clojure$browser$event$total_listener_count() {
  return goog.events.getTotalListenerCount();
};
clojure.browser.event.get_listener = function clojure$browser$event$get_listener(src, type, listener, opt_capt, opt_handler) {
  return null;
};
clojure.browser.event.all_listeners = function clojure$browser$event$all_listeners(obj, type, capture) {
  return null;
};
clojure.browser.event.unique_event_id = function clojure$browser$event$unique_event_id(event_type) {
  return null;
};
clojure.browser.event.has_listener = function clojure$browser$event$has_listener(obj, opt_type, opt_capture) {
  return null;
};
clojure.browser.event.remove_all = function clojure$browser$event$remove_all(opt_obj, opt_type, opt_capt) {
  return null;
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("goog.json");
goog.require("goog.object");
goog.require("goog.net.XhrIo");
goog.require("goog.net.EventType");
goog.require("goog.net.WebSocket");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.Uri");
clojure.browser.net._STAR_timeout_STAR_ = 10000;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__7780) {
  var vec__7781 = p__7780;
  var k = cljs.core.nth.call(null, vec__7781, 0, null);
  var v = cljs.core.nth.call(null, vec__7781, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = function() {
};
var clojure$browser$net$IConnection$connect$dyn_7788 = function() {
  var G__7789 = null;
  var G__7789__1 = function(this$) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = clojure.browser.net.connect[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.call(null, this$);
    } else {
      var m__4426__auto__ = clojure.browser.net.connect["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
      }
    }
  };
  var G__7789__2 = function(this$, opt1) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = clojure.browser.net.connect[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.call(null, this$, opt1);
    } else {
      var m__4426__auto__ = clojure.browser.net.connect["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.call(null, this$, opt1);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
      }
    }
  };
  var G__7789__3 = function(this$, opt1, opt2) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = clojure.browser.net.connect[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.call(null, this$, opt1, opt2);
    } else {
      var m__4426__auto__ = clojure.browser.net.connect["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.call(null, this$, opt1, opt2);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
      }
    }
  };
  var G__7789__4 = function(this$, opt1, opt2, opt3) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = clojure.browser.net.connect[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.call(null, this$, opt1, opt2, opt3);
    } else {
      var m__4426__auto__ = clojure.browser.net.connect["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.call(null, this$, opt1, opt2, opt3);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
      }
    }
  };
  G__7789 = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return G__7789__1.call(this, this$);
      case 2:
        return G__7789__2.call(this, this$, opt1);
      case 3:
        return G__7789__3.call(this, this$, opt1, opt2);
      case 4:
        return G__7789__4.call(this, this$, opt1, opt2, opt3);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7789.cljs$core$IFn$_invoke$arity$1 = G__7789__1;
  G__7789.cljs$core$IFn$_invoke$arity$2 = G__7789__2;
  G__7789.cljs$core$IFn$_invoke$arity$3 = G__7789__3;
  G__7789.cljs$core$IFn$_invoke$arity$4 = G__7789__4;
  return G__7789;
}();
clojure.browser.net.connect = function clojure$browser$net$connect(var_args) {
  var G__7785 = arguments.length;
  switch(G__7785) {
    case 1:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$connect$arity$1 == null)) {
    return this$.clojure$browser$net$IConnection$connect$arity$1(this$);
  } else {
    return clojure$browser$net$IConnection$connect$dyn_7788.call(null, this$);
  }
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$2 = function(this$, opt1) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$connect$arity$2 == null)) {
    return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1);
  } else {
    return clojure$browser$net$IConnection$connect$dyn_7788.call(null, this$, opt1);
  }
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$3 = function(this$, opt1, opt2) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$connect$arity$3 == null)) {
    return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2);
  } else {
    return clojure$browser$net$IConnection$connect$dyn_7788.call(null, this$, opt1, opt2);
  }
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$4 = function(this$, opt1, opt2, opt3) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$connect$arity$4 == null)) {
    return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3);
  } else {
    return clojure$browser$net$IConnection$connect$dyn_7788.call(null, this$, opt1, opt2, opt3);
  }
};
clojure.browser.net.connect.cljs$lang$maxFixedArity = 4;
var clojure$browser$net$IConnection$transmit$dyn_7791 = function() {
  var G__7792 = null;
  var G__7792__2 = function(this$, opt) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.call(null, this$, opt);
    } else {
      var m__4426__auto__ = clojure.browser.net.transmit["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.call(null, this$, opt);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  };
  var G__7792__3 = function(this$, opt, opt2) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.call(null, this$, opt, opt2);
    } else {
      var m__4426__auto__ = clojure.browser.net.transmit["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.call(null, this$, opt, opt2);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  };
  var G__7792__4 = function(this$, opt, opt2, opt3) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.call(null, this$, opt, opt2, opt3);
    } else {
      var m__4426__auto__ = clojure.browser.net.transmit["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.call(null, this$, opt, opt2, opt3);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  };
  var G__7792__5 = function(this$, opt, opt2, opt3, opt4) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.call(null, this$, opt, opt2, opt3, opt4);
    } else {
      var m__4426__auto__ = clojure.browser.net.transmit["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.call(null, this$, opt, opt2, opt3, opt4);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  };
  var G__7792__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.call(null, this$, opt, opt2, opt3, opt4, opt5);
    } else {
      var m__4426__auto__ = clojure.browser.net.transmit["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.call(null, this$, opt, opt2, opt3, opt4, opt5);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  };
  G__7792 = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return G__7792__2.call(this, this$, opt);
      case 3:
        return G__7792__3.call(this, this$, opt, opt2);
      case 4:
        return G__7792__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return G__7792__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return G__7792__6.call(this, this$, opt, opt2, opt3, opt4, opt5);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7792.cljs$core$IFn$_invoke$arity$2 = G__7792__2;
  G__7792.cljs$core$IFn$_invoke$arity$3 = G__7792__3;
  G__7792.cljs$core$IFn$_invoke$arity$4 = G__7792__4;
  G__7792.cljs$core$IFn$_invoke$arity$5 = G__7792__5;
  G__7792.cljs$core$IFn$_invoke$arity$6 = G__7792__6;
  return G__7792;
}();
clojure.browser.net.transmit = function clojure$browser$net$transmit(var_args) {
  var G__7787 = arguments.length;
  switch(G__7787) {
    case 2:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$2 = function(this$, opt) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$2 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt);
  } else {
    return clojure$browser$net$IConnection$transmit$dyn_7791.call(null, this$, opt);
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$3 = function(this$, opt, opt2) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$3 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2);
  } else {
    return clojure$browser$net$IConnection$transmit$dyn_7791.call(null, this$, opt, opt2);
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$4 = function(this$, opt, opt2, opt3) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$4 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3);
  } else {
    return clojure$browser$net$IConnection$transmit$dyn_7791.call(null, this$, opt, opt2, opt3);
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$5 = function(this$, opt, opt2, opt3, opt4) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$5 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4);
  } else {
    return clojure$browser$net$IConnection$transmit$dyn_7791.call(null, this$, opt, opt2, opt3, opt4);
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$6 = function(this$, opt, opt2, opt3, opt4, opt5) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$6 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5);
  } else {
    return clojure$browser$net$IConnection$transmit$dyn_7791.call(null, this$, opt, opt2, opt3, opt4, opt5);
  }
};
clojure.browser.net.transmit.cljs$lang$maxFixedArity = 6;
var clojure$browser$net$IConnection$close$dyn_7794 = function(this$) {
  var x__4428__auto__ = this$ == null ? null : this$;
  var m__4429__auto__ = clojure.browser.net.close[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, this$);
  } else {
    var m__4426__auto__ = clojure.browser.net.close["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
    }
  }
};
clojure.browser.net.close = function clojure$browser$net$close(this$) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$close$arity$1 == null)) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$);
  } else {
    return clojure$browser$net$IConnection$close$dyn_7794.call(null, this$);
  }
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  var this$__$1 = this;
  this$__$1.setTimeoutInterval(timeout);
  return this$__$1.send(uri, method, content, headers);
};
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__7795) {
    var vec__7796 = p__7795;
    var k = cljs.core.nth.call(null, vec__7796, 0, null);
    var v = cljs.core.nth.call(null, vec__7796, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__7799) {
  var vec__7800 = p__7799;
  var k = cljs.core.nth.call(null, vec__7800, 0, null);
  var v = cljs.core.nth.call(null, vec__7800, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function clojure$browser$net$xhr_connection() {
  return new goog.net.XhrIo;
};
clojure.browser.net.ICrossPageChannel = function() {
};
var clojure$browser$net$ICrossPageChannel$register_service$dyn_7805 = function() {
  var G__7806 = null;
  var G__7806__3 = function(this$, service_name, fn) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.call(null, this$, service_name, fn);
    } else {
      var m__4426__auto__ = clojure.browser.net.register_service["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.call(null, this$, service_name, fn);
      } else {
        throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
      }
    }
  };
  var G__7806__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.call(null, this$, service_name, fn, encode_json_QMARK_);
    } else {
      var m__4426__auto__ = clojure.browser.net.register_service["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.call(null, this$, service_name, fn, encode_json_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
      }
    }
  };
  G__7806 = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return G__7806__3.call(this, this$, service_name, fn);
      case 4:
        return G__7806__4.call(this, this$, service_name, fn, encode_json_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7806.cljs$core$IFn$_invoke$arity$3 = G__7806__3;
  G__7806.cljs$core$IFn$_invoke$arity$4 = G__7806__4;
  return G__7806;
}();
clojure.browser.net.register_service = function clojure$browser$net$register_service(var_args) {
  var G__7804 = arguments.length;
  switch(G__7804) {
    case 3:
      return clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$3 = function(this$, service_name, fn) {
  if (!(this$ == null) && !(this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3 == null)) {
    return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn);
  } else {
    return clojure$browser$net$ICrossPageChannel$register_service$dyn_7805.call(null, this$, service_name, fn);
  }
};
clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  if (!(this$ == null) && !(this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4 == null)) {
    return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_);
  } else {
    return clojure$browser$net$ICrossPageChannel$register_service$dyn_7805.call(null, this$, service_name, fn, encode_json_QMARK_);
  }
};
clojure.browser.net.register_service.cljs$lang$maxFixedArity = 4;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  var this$__$1 = this;
  return clojure.browser.net.register_service.call(null, this$__$1, service_name, fn, false);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  var this$__$1 = this;
  return this$__$1.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, null);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  var this$__$1 = this;
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, on_connect_fn, config_iframe_fn, document.body);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  var this$__$1 = this;
  this$__$1.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  var this$__$1 = this;
  return this$__$1.send(cljs.core.name.call(null, service_name), payload);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close();
};
clojure.browser.net.xpc_connection = function clojure$browser$net$xpc_connection(var_args) {
  var G__7809 = arguments.length;
  switch(G__7809) {
    case 0:
      return clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$0 = function() {
  var temp__5720__auto__ = (new goog.Uri(window.location.href)).getParameterValue("xpc");
  if (cljs.core.truth_(temp__5720__auto__)) {
    var config = temp__5720__auto__;
    return new goog.net.xpc.CrossPageChannel(goog.json.parse(config));
  } else {
    return null;
  }
};
clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$1 = function(config) {
  return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__7810) {
    var vec__7811 = p__7810;
    var k = cljs.core.nth.call(null, vec__7811, 0, null);
    var v = cljs.core.nth.call(null, vec__7811, 1, null);
    var temp__5718__auto__ = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, k);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var field = temp__5718__auto__;
      var G__7814 = sum;
      goog.object.set(G__7814, field, v);
      return G__7814;
    } else {
      return sum;
    }
  }, {}, config));
};
clojure.browser.net.xpc_connection.cljs$lang$maxFixedArity = 1;
clojure.browser.net.IWebSocket = function() {
};
var clojure$browser$net$IWebSocket$open_QMARK_$dyn_7818 = function(this$) {
  var x__4428__auto__ = this$ == null ? null : this$;
  var m__4429__auto__ = clojure.browser.net.open_QMARK_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, this$);
  } else {
    var m__4426__auto__ = clojure.browser.net.open_QMARK_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol.call(null, "IWebSocket.open?", this$);
    }
  }
};
clojure.browser.net.open_QMARK_ = function clojure$browser$net$open_QMARK_(this$) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IWebSocket$open_QMARK_$arity$1 == null)) {
    return this$.clojure$browser$net$IWebSocket$open_QMARK_$arity$1(this$);
  } else {
    return clojure$browser$net$IWebSocket$open_QMARK_$dyn_7818.call(null, this$);
  }
};
goog.net.WebSocket.prototype.clojure$browser$net$IWebSocket$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.WebSocket.prototype.clojure$browser$net$IWebSocket$open_QMARK_$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.isOpen(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, url) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, url, null);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, url, protocol) {
  var this$__$1 = this;
  return this$__$1.open(url, protocol);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, message) {
  var this$__$1 = this;
  return this$__$1.send(message);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__7819) {
    var vec__7820 = p__7819;
    var k = cljs.core.nth.call(null, vec__7820, 0, null);
    var v = cljs.core.nth.call(null, vec__7820, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.WebSocket.EventType))));
};
clojure.browser.net.websocket_connection = function clojure$browser$net$websocket_connection(var_args) {
  var G__7824 = arguments.length;
  switch(G__7824) {
    case 0:
      return clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$0 = function() {
  return clojure.browser.net.websocket_connection.call(null, null, null);
};
clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$1 = function(auto_reconnect_QMARK_) {
  return clojure.browser.net.websocket_connection.call(null, auto_reconnect_QMARK_, null);
};
clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$2 = function(auto_reconnect_QMARK_, next_reconnect_fn) {
  return new goog.net.WebSocket(auto_reconnect_QMARK_, next_reconnect_fn);
};
clojure.browser.net.websocket_connection.cljs$lang$maxFixedArity = 2;
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw new Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\- \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw new Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= Number(width)) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", Number(width) - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", Number(width) - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = parseFloat(value).toFixed(precision);
  }
  var sign;
  if (Number(value) < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (Number(value) >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= Number(width)) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(Number(value)).toString() : Math.abs(Number(value)).toFixed(precision);
  var padCount = Number(width) - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  var r = new RegExp(re.source, function() {
    var G__7828 = "g";
    var G__7828__$1 = cljs.core.truth_(re.ignoreCase) ? [G__7828, "i"].join("") : G__7828;
    var G__7828__$2 = cljs.core.truth_(re.multiline) ? [G__7828__$1, "m"].join("") : G__7828__$1;
    if (cljs.core.truth_(re.unicode)) {
      return [G__7828__$2, "u"].join("");
    } else {
      return G__7828__$2;
    }
  }());
  return s.replace(r, replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__7829__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__7829 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7830__i = 0, G__7830__a = new Array(arguments.length - 0);
        while (G__7830__i < G__7830__a.length) {
          G__7830__a[G__7830__i] = arguments[G__7830__i + 0];
          ++G__7830__i;
        }
        args = new cljs.core.IndexedSeq(G__7830__a, 0, null);
      }
      return G__7829__delegate.call(this, args);
    };
    G__7829.cljs$lang$maxFixedArity = 0;
    G__7829.cljs$lang$applyTo = function(arglist__7831) {
      var args = cljs.core.seq(arglist__7831);
      return G__7829__delegate(args);
    };
    G__7829.cljs$core$IFn$_invoke$arity$variadic = G__7829__delegate;
    return G__7829;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw ["Invalid match arg: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var G__7833 = arguments.length;
  switch(G__7833) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__7835 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1)));
      var G__7836 = cljs.core.next.call(null, coll__$1);
      sb = G__7835;
      coll__$1 = G__7836;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1)));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__7837 = sb;
      var G__7838 = coll__$2;
      sb = G__7837;
      coll__$1 = G__7838;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  return goog.string.capitalize(s);
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__7839 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__7839;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__7840 = cljs.core._EQ__EQ_;
    var expr__7841 = limit;
    if (cljs.core.truth_(pred__7840.call(null, 1, expr__7841))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__7840.call(null, 2, expr__7841))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var G__7844 = arguments.length;
  switch(G__7844) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === cljs.core.str.cljs$core$IFn$_invoke$arity$1(re) ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s).split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__7846 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__7847 = limit__$1 - 1;
          var G__7848 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__7846;
          limit__$1 = G__7847;
          parts = G__7848;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__7849 = index - 1;
        index = G__7849;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(s));
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement));
      } else {
        buffer.append(ch);
      }
      var G__7850 = index + 1;
      index = G__7850;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var G__7852 = arguments.length;
  switch(G__7852) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var G__7855 = arguments.length;
  switch(G__7855) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function clojure$walk$walk(inner, outer, form) {
  if (cljs.core.list_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.apply.call(null, cljs.core.list, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.map_entry_QMARK_.call(null, form)) {
      return outer.call(null, new cljs.core.MapEntry(inner.call(null, cljs.core.key.call(null, form)), inner.call(null, cljs.core.val.call(null, form)), null));
    } else {
      if (cljs.core.seq_QMARK_.call(null, form)) {
        return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
      } else {
        if (cljs.core.record_QMARK_.call(null, form)) {
          return outer.call(null, cljs.core.reduce.call(null, function(r, x) {
            return cljs.core.conj.call(null, r, inner.call(null, x));
          }, form, form));
        } else {
          if (cljs.core.coll_QMARK_.call(null, form)) {
            return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
          } else {
            return outer.call(null, form);
          }
        }
      }
    }
  }
};
clojure.walk.postwalk = function clojure$walk$postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.postwalk, f), f, form);
};
clojure.walk.prewalk = function clojure$walk$prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function clojure$walk$keywordize_keys(m) {
  var f = function(p__7859) {
    var vec__7860 = p__7859;
    var k = cljs.core.nth.call(null, vec__7860, 0, null);
    var v = cljs.core.nth.call(null, vec__7860, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
    } else {
      return x;
    }
  }, m);
};
clojure.walk.stringify_keys = function clojure$walk$stringify_keys(m) {
  var f = function(p__7863) {
    var vec__7864 = p__7863;
    var k = cljs.core.nth.call(null, vec__7864, 0, null);
    var v = cljs.core.nth.call(null, vec__7864, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
    } else {
      return x;
    }
  }, m);
};
clojure.walk.prewalk_replace = function clojure$walk$prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function clojure$walk$postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("cljs.spec.gen.alpha");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("goog.Uri");
cljs.spec.gen.alpha.LazyVar = function(f, cached) {
  this.f = f;
  this.cached = cached;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.spec.gen.alpha.LazyVar.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!(self__.cached == null)) {
    return self__.cached;
  } else {
    var x = self__.f.call(null);
    if (x == null) {
    } else {
      self__.cached = x;
    }
    return x;
  }
};
cljs.spec.gen.alpha.LazyVar.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cached", "cached", -1216707864, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.spec.gen.alpha.LazyVar.cljs$lang$type = true;
cljs.spec.gen.alpha.LazyVar.cljs$lang$ctorStr = "cljs.spec.gen.alpha/LazyVar";
cljs.spec.gen.alpha.LazyVar.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write.call(null, writer__4370__auto__, "cljs.spec.gen.alpha/LazyVar");
};
cljs.spec.gen.alpha.__GT_LazyVar = function cljs$spec$gen$alpha$__GT_LazyVar(f, cached) {
  return new cljs.spec.gen.alpha.LazyVar(f, cached);
};
cljs.spec.gen.alpha.quick_check_ref = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.quick_check !== "undefined") {
    return clojure.test.check.quick_check;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check", "quick-check", "clojure.test.check/quick-check", -810344251, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check", "quick-check", "clojure.test.check/quick-check", -810344251, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.quick_check = function cljs$spec$gen$alpha$quick_check(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7920 = arguments.length;
  var i__4737__auto___7921 = 0;
  while (true) {
    if (i__4737__auto___7921 < len__4736__auto___7920) {
      args__4742__auto__.push(arguments[i__4737__auto___7921]);
      var G__7922 = i__4737__auto___7921 + 1;
      i__4737__auto___7921 = G__7922;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.quick_check.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.quick_check.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, cljs.spec.gen.alpha.quick_check_ref), args);
};
cljs.spec.gen.alpha.quick_check.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.quick_check.cljs$lang$applyTo = function(seq7919) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7919));
};
cljs.spec.gen.alpha.for_all_STAR__ref = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.properties !== "undefined" && typeof clojure.test.check.properties.for_all_STAR_ !== "undefined") {
    return clojure.test.check.properties.for_all_STAR_;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.properties", "for-all*", "clojure.test.check.properties/for-all*", 67088845, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.properties", "for-all*", "clojure.test.check.properties/for-all*", 67088845, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.for_all_STAR_ = function cljs$spec$gen$alpha$for_all_STAR_(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7924 = arguments.length;
  var i__4737__auto___7925 = 0;
  while (true) {
    if (i__4737__auto___7925 < len__4736__auto___7924) {
      args__4742__auto__.push(arguments[i__4737__auto___7925]);
      var G__7926 = i__4737__auto___7925 + 1;
      i__4737__auto___7925 = G__7926;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.for_all_STAR_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.for_all_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, cljs.spec.gen.alpha.for_all_STAR__ref), args);
};
cljs.spec.gen.alpha.for_all_STAR_.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.for_all_STAR_.cljs$lang$applyTo = function(seq7923) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7923));
};
var g_QMARK__7927 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.generator_QMARK_ !== "undefined") {
    return clojure.test.check.generators.generator_QMARK_;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "generator?", "clojure.test.check.generators/generator?", -1378210460, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "generator?", "clojure.test.check.generators/generator?", -1378210460, null)), " never required"].join(""));
  }
}, null);
var g_7928 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.generate !== "undefined") {
    return clojure.test.check.generators.generate;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "generate", "clojure.test.check.generators/generate", -690390711, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "generate", "clojure.test.check.generators/generate", -690390711, null)), " never required"].join(""));
  }
}, null);
var mkg_7929 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.__GT_Generator !== "undefined") {
    return clojure.test.check.generators.__GT_Generator;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "-\x3eGenerator", "clojure.test.check.generators/-\x3eGenerator", -1179475051, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "-\x3eGenerator", "clojure.test.check.generators/-\x3eGenerator", -1179475051, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.generator_QMARK_ = function cljs$spec$gen$alpha$generator_QMARK_(x) {
  return cljs.core.deref.call(null, g_QMARK__7927).call(null, x);
};
cljs.spec.gen.alpha.generator = function cljs$spec$gen$alpha$generator(gfn) {
  return cljs.core.deref.call(null, mkg_7929).call(null, gfn);
};
cljs.spec.gen.alpha.generate = function cljs$spec$gen$alpha$generate(generator) {
  return cljs.core.deref.call(null, g_7928).call(null, generator);
};
cljs.spec.gen.alpha.delay_impl = function cljs$spec$gen$alpha$delay_impl(gfnd) {
  return cljs.spec.gen.alpha.generator.call(null, function(rnd, size) {
    return (new cljs.core.Keyword(null, "gen", "gen", 142575302)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, gfnd)).call(null, rnd, size);
  });
};
var g__7891__auto___7950 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.hash_map !== "undefined") {
    return clojure.test.check.generators.hash_map;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "hash-map", "clojure.test.check.generators/hash-map", 1961346626, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "hash-map", "clojure.test.check.generators/hash-map", 1961346626, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.hash_map = function cljs$spec$gen$alpha$hash_map(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7951 = arguments.length;
  var i__4737__auto___7952 = 0;
  while (true) {
    if (i__4737__auto___7952 < len__4736__auto___7951) {
      args__4742__auto__.push(arguments[i__4737__auto___7952]);
      var G__7953 = i__4737__auto___7952 + 1;
      i__4737__auto___7952 = G__7953;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___7950), args);
};
cljs.spec.gen.alpha.hash_map.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.hash_map.cljs$lang$applyTo = function(seq7930) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7930));
};
var g__7891__auto___7954 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.list !== "undefined") {
    return clojure.test.check.generators.list;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "list", "clojure.test.check.generators/list", 506971058, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "list", "clojure.test.check.generators/list", 506971058, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.list = function cljs$spec$gen$alpha$list(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7955 = arguments.length;
  var i__4737__auto___7956 = 0;
  while (true) {
    if (i__4737__auto___7956 < len__4736__auto___7955) {
      args__4742__auto__.push(arguments[i__4737__auto___7956]);
      var G__7957 = i__4737__auto___7956 + 1;
      i__4737__auto___7956 = G__7957;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.list.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.list.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___7954), args);
};
cljs.spec.gen.alpha.list.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.list.cljs$lang$applyTo = function(seq7931) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7931));
};
var g__7891__auto___7958 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.map !== "undefined") {
    return clojure.test.check.generators.map;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "map", "clojure.test.check.generators/map", 45738796, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "map", "clojure.test.check.generators/map", 45738796, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.map = function cljs$spec$gen$alpha$map(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7959 = arguments.length;
  var i__4737__auto___7960 = 0;
  while (true) {
    if (i__4737__auto___7960 < len__4736__auto___7959) {
      args__4742__auto__.push(arguments[i__4737__auto___7960]);
      var G__7961 = i__4737__auto___7960 + 1;
      i__4737__auto___7960 = G__7961;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.map.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.map.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___7958), args);
};
cljs.spec.gen.alpha.map.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.map.cljs$lang$applyTo = function(seq7932) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7932));
};
var g__7891__auto___7962 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.not_empty !== "undefined") {
    return clojure.test.check.generators.not_empty;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "not-empty", "clojure.test.check.generators/not-empty", -876211682, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "not-empty", "clojure.test.check.generators/not-empty", -876211682, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.not_empty = function cljs$spec$gen$alpha$not_empty(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7963 = arguments.length;
  var i__4737__auto___7964 = 0;
  while (true) {
    if (i__4737__auto___7964 < len__4736__auto___7963) {
      args__4742__auto__.push(arguments[i__4737__auto___7964]);
      var G__7965 = i__4737__auto___7964 + 1;
      i__4737__auto___7964 = G__7965;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.not_empty.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.not_empty.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___7962), args);
};
cljs.spec.gen.alpha.not_empty.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.not_empty.cljs$lang$applyTo = function(seq7933) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7933));
};
var g__7891__auto___7966 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.set !== "undefined") {
    return clojure.test.check.generators.set;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "set", "clojure.test.check.generators/set", -1027639543, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "set", "clojure.test.check.generators/set", -1027639543, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.set = function cljs$spec$gen$alpha$set(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7967 = arguments.length;
  var i__4737__auto___7968 = 0;
  while (true) {
    if (i__4737__auto___7968 < len__4736__auto___7967) {
      args__4742__auto__.push(arguments[i__4737__auto___7968]);
      var G__7969 = i__4737__auto___7968 + 1;
      i__4737__auto___7968 = G__7969;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.set.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.set.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___7966), args);
};
cljs.spec.gen.alpha.set.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.set.cljs$lang$applyTo = function(seq7934) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7934));
};
var g__7891__auto___7970 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.vector !== "undefined") {
    return clojure.test.check.generators.vector;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "vector", "clojure.test.check.generators/vector", 1081775325, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "vector", "clojure.test.check.generators/vector", 1081775325, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.vector = function cljs$spec$gen$alpha$vector(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7971 = arguments.length;
  var i__4737__auto___7972 = 0;
  while (true) {
    if (i__4737__auto___7972 < len__4736__auto___7971) {
      args__4742__auto__.push(arguments[i__4737__auto___7972]);
      var G__7973 = i__4737__auto___7972 + 1;
      i__4737__auto___7972 = G__7973;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___7970), args);
};
cljs.spec.gen.alpha.vector.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.vector.cljs$lang$applyTo = function(seq7935) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7935));
};
var g__7891__auto___7974 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.vector_distinct !== "undefined") {
    return clojure.test.check.generators.vector_distinct;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "vector-distinct", "clojure.test.check.generators/vector-distinct", 1656877834, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "vector-distinct", "clojure.test.check.generators/vector-distinct", 1656877834, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.vector_distinct = function cljs$spec$gen$alpha$vector_distinct(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7975 = arguments.length;
  var i__4737__auto___7976 = 0;
  while (true) {
    if (i__4737__auto___7976 < len__4736__auto___7975) {
      args__4742__auto__.push(arguments[i__4737__auto___7976]);
      var G__7977 = i__4737__auto___7976 + 1;
      i__4737__auto___7976 = G__7977;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.vector_distinct.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.vector_distinct.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___7974), args);
};
cljs.spec.gen.alpha.vector_distinct.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.vector_distinct.cljs$lang$applyTo = function(seq7936) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7936));
};
var g__7891__auto___7978 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.fmap !== "undefined") {
    return clojure.test.check.generators.fmap;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "fmap", "clojure.test.check.generators/fmap", 1957997092, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "fmap", "clojure.test.check.generators/fmap", 1957997092, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.fmap = function cljs$spec$gen$alpha$fmap(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7979 = arguments.length;
  var i__4737__auto___7980 = 0;
  while (true) {
    if (i__4737__auto___7980 < len__4736__auto___7979) {
      args__4742__auto__.push(arguments[i__4737__auto___7980]);
      var G__7981 = i__4737__auto___7980 + 1;
      i__4737__auto___7980 = G__7981;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.fmap.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.fmap.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___7978), args);
};
cljs.spec.gen.alpha.fmap.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.fmap.cljs$lang$applyTo = function(seq7937) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7937));
};
var g__7891__auto___7982 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.elements !== "undefined") {
    return clojure.test.check.generators.elements;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "elements", "clojure.test.check.generators/elements", 438991326, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "elements", "clojure.test.check.generators/elements", 438991326, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.elements = function cljs$spec$gen$alpha$elements(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7983 = arguments.length;
  var i__4737__auto___7984 = 0;
  while (true) {
    if (i__4737__auto___7984 < len__4736__auto___7983) {
      args__4742__auto__.push(arguments[i__4737__auto___7984]);
      var G__7985 = i__4737__auto___7984 + 1;
      i__4737__auto___7984 = G__7985;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.elements.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.elements.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___7982), args);
};
cljs.spec.gen.alpha.elements.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.elements.cljs$lang$applyTo = function(seq7938) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7938));
};
var g__7891__auto___7986 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.bind !== "undefined") {
    return clojure.test.check.generators.bind;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "bind", "clojure.test.check.generators/bind", -361313906, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "bind", "clojure.test.check.generators/bind", -361313906, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.bind = function cljs$spec$gen$alpha$bind(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7987 = arguments.length;
  var i__4737__auto___7988 = 0;
  while (true) {
    if (i__4737__auto___7988 < len__4736__auto___7987) {
      args__4742__auto__.push(arguments[i__4737__auto___7988]);
      var G__7989 = i__4737__auto___7988 + 1;
      i__4737__auto___7988 = G__7989;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.bind.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.bind.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___7986), args);
};
cljs.spec.gen.alpha.bind.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.bind.cljs$lang$applyTo = function(seq7939) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7939));
};
var g__7891__auto___7990 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.choose !== "undefined") {
    return clojure.test.check.generators.choose;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "choose", "clojure.test.check.generators/choose", 909997832, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "choose", "clojure.test.check.generators/choose", 909997832, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.choose = function cljs$spec$gen$alpha$choose(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7991 = arguments.length;
  var i__4737__auto___7992 = 0;
  while (true) {
    if (i__4737__auto___7992 < len__4736__auto___7991) {
      args__4742__auto__.push(arguments[i__4737__auto___7992]);
      var G__7993 = i__4737__auto___7992 + 1;
      i__4737__auto___7992 = G__7993;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.choose.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.choose.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___7990), args);
};
cljs.spec.gen.alpha.choose.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.choose.cljs$lang$applyTo = function(seq7940) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7940));
};
var g__7891__auto___7994 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.one_of !== "undefined") {
    return clojure.test.check.generators.one_of;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "one-of", "clojure.test.check.generators/one-of", -183339191, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "one-of", "clojure.test.check.generators/one-of", -183339191, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.one_of = function cljs$spec$gen$alpha$one_of(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7995 = arguments.length;
  var i__4737__auto___7996 = 0;
  while (true) {
    if (i__4737__auto___7996 < len__4736__auto___7995) {
      args__4742__auto__.push(arguments[i__4737__auto___7996]);
      var G__7997 = i__4737__auto___7996 + 1;
      i__4737__auto___7996 = G__7997;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.one_of.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.one_of.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___7994), args);
};
cljs.spec.gen.alpha.one_of.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.one_of.cljs$lang$applyTo = function(seq7941) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7941));
};
var g__7891__auto___7998 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.such_that !== "undefined") {
    return clojure.test.check.generators.such_that;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "such-that", "clojure.test.check.generators/such-that", -1754178732, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "such-that", "clojure.test.check.generators/such-that", -1754178732, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.such_that = function cljs$spec$gen$alpha$such_that(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___7999 = arguments.length;
  var i__4737__auto___8000 = 0;
  while (true) {
    if (i__4737__auto___8000 < len__4736__auto___7999) {
      args__4742__auto__.push(arguments[i__4737__auto___8000]);
      var G__8001 = i__4737__auto___8000 + 1;
      i__4737__auto___8000 = G__8001;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.such_that.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.such_that.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___7998), args);
};
cljs.spec.gen.alpha.such_that.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.such_that.cljs$lang$applyTo = function(seq7942) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7942));
};
var g__7891__auto___8002 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.tuple !== "undefined") {
    return clojure.test.check.generators.tuple;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "tuple", "clojure.test.check.generators/tuple", -143711557, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "tuple", "clojure.test.check.generators/tuple", -143711557, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.tuple = function cljs$spec$gen$alpha$tuple(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8003 = arguments.length;
  var i__4737__auto___8004 = 0;
  while (true) {
    if (i__4737__auto___8004 < len__4736__auto___8003) {
      args__4742__auto__.push(arguments[i__4737__auto___8004]);
      var G__8005 = i__4737__auto___8004 + 1;
      i__4737__auto___8004 = G__8005;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.tuple.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.tuple.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___8002), args);
};
cljs.spec.gen.alpha.tuple.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.tuple.cljs$lang$applyTo = function(seq7943) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7943));
};
var g__7891__auto___8006 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.sample !== "undefined") {
    return clojure.test.check.generators.sample;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "sample", "clojure.test.check.generators/sample", -382944992, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "sample", "clojure.test.check.generators/sample", -382944992, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.sample = function cljs$spec$gen$alpha$sample(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8007 = arguments.length;
  var i__4737__auto___8008 = 0;
  while (true) {
    if (i__4737__auto___8008 < len__4736__auto___8007) {
      args__4742__auto__.push(arguments[i__4737__auto___8008]);
      var G__8009 = i__4737__auto___8008 + 1;
      i__4737__auto___8008 = G__8009;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.sample.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.sample.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___8006), args);
};
cljs.spec.gen.alpha.sample.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.sample.cljs$lang$applyTo = function(seq7944) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7944));
};
var g__7891__auto___8010 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.return$ !== "undefined") {
    return clojure.test.check.generators.return$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "return", "clojure.test.check.generators/return", 1744522038, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "return", "clojure.test.check.generators/return", 1744522038, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.return$ = function cljs$spec$gen$alpha$return(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8011 = arguments.length;
  var i__4737__auto___8012 = 0;
  while (true) {
    if (i__4737__auto___8012 < len__4736__auto___8011) {
      args__4742__auto__.push(arguments[i__4737__auto___8012]);
      var G__8013 = i__4737__auto___8012 + 1;
      i__4737__auto___8012 = G__8013;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.return$.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.return$.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___8010), args);
};
cljs.spec.gen.alpha.return$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.return$.cljs$lang$applyTo = function(seq7945) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7945));
};
var g__7891__auto___8014 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.large_integer_STAR_ !== "undefined") {
    return clojure.test.check.generators.large_integer_STAR_;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "large-integer*", "clojure.test.check.generators/large-integer*", -437830670, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "large-integer*", "clojure.test.check.generators/large-integer*", -437830670, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.large_integer_STAR_ = function cljs$spec$gen$alpha$large_integer_STAR_(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8015 = arguments.length;
  var i__4737__auto___8016 = 0;
  while (true) {
    if (i__4737__auto___8016 < len__4736__auto___8015) {
      args__4742__auto__.push(arguments[i__4737__auto___8016]);
      var G__8017 = i__4737__auto___8016 + 1;
      i__4737__auto___8016 = G__8017;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.large_integer_STAR_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.large_integer_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___8014), args);
};
cljs.spec.gen.alpha.large_integer_STAR_.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.large_integer_STAR_.cljs$lang$applyTo = function(seq7946) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7946));
};
var g__7891__auto___8018 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.double_STAR_ !== "undefined") {
    return clojure.test.check.generators.double_STAR_;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "double*", "clojure.test.check.generators/double*", 841542265, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "double*", "clojure.test.check.generators/double*", 841542265, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.double_STAR_ = function cljs$spec$gen$alpha$double_STAR_(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8019 = arguments.length;
  var i__4737__auto___8020 = 0;
  while (true) {
    if (i__4737__auto___8020 < len__4736__auto___8019) {
      args__4742__auto__.push(arguments[i__4737__auto___8020]);
      var G__8021 = i__4737__auto___8020 + 1;
      i__4737__auto___8020 = G__8021;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.double_STAR_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.double_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___8018), args);
};
cljs.spec.gen.alpha.double_STAR_.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.double_STAR_.cljs$lang$applyTo = function(seq7947) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7947));
};
var g__7891__auto___8022 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.frequency !== "undefined") {
    return clojure.test.check.generators.frequency;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "frequency", "clojure.test.check.generators/frequency", 2090703177, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "frequency", "clojure.test.check.generators/frequency", 2090703177, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.frequency = function cljs$spec$gen$alpha$frequency(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8023 = arguments.length;
  var i__4737__auto___8024 = 0;
  while (true) {
    if (i__4737__auto___8024 < len__4736__auto___8023) {
      args__4742__auto__.push(arguments[i__4737__auto___8024]);
      var G__8025 = i__4737__auto___8024 + 1;
      i__4737__auto___8024 = G__8025;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.frequency.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.frequency.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___8022), args);
};
cljs.spec.gen.alpha.frequency.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.frequency.cljs$lang$applyTo = function(seq7948) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7948));
};
var g__7891__auto___8026 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.shuffle !== "undefined") {
    return clojure.test.check.generators.shuffle;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "shuffle", "clojure.test.check.generators/shuffle", 1032401055, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "shuffle", "clojure.test.check.generators/shuffle", 1032401055, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.shuffle = function cljs$spec$gen$alpha$shuffle(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8027 = arguments.length;
  var i__4737__auto___8028 = 0;
  while (true) {
    if (i__4737__auto___8028 < len__4736__auto___8027) {
      args__4742__auto__.push(arguments[i__4737__auto___8028]);
      var G__8029 = i__4737__auto___8028 + 1;
      i__4737__auto___8028 = G__8029;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.shuffle.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.shuffle.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, g__7891__auto___8026), args);
};
cljs.spec.gen.alpha.shuffle.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.shuffle.cljs$lang$applyTo = function(seq7949) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7949));
};
var g__7904__auto___8051 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.any !== "undefined") {
    return clojure.test.check.generators.any;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "any", "clojure.test.check.generators/any", 1883743710, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "any", "clojure.test.check.generators/any", 1883743710, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.any = function cljs$spec$gen$alpha$any(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8052 = arguments.length;
  var i__4737__auto___8053 = 0;
  while (true) {
    if (i__4737__auto___8053 < len__4736__auto___8052) {
      args__4742__auto__.push(arguments[i__4737__auto___8053]);
      var G__8054 = i__4737__auto___8053 + 1;
      i__4737__auto___8053 = G__8054;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.any.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.any.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8051);
};
cljs.spec.gen.alpha.any.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.any.cljs$lang$applyTo = function(seq8030) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8030));
};
var g__7904__auto___8055 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.any_printable !== "undefined") {
    return clojure.test.check.generators.any_printable;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "any-printable", "clojure.test.check.generators/any-printable", -1570493991, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "any-printable", "clojure.test.check.generators/any-printable", -1570493991, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.any_printable = function cljs$spec$gen$alpha$any_printable(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8056 = arguments.length;
  var i__4737__auto___8057 = 0;
  while (true) {
    if (i__4737__auto___8057 < len__4736__auto___8056) {
      args__4742__auto__.push(arguments[i__4737__auto___8057]);
      var G__8058 = i__4737__auto___8057 + 1;
      i__4737__auto___8057 = G__8058;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.any_printable.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.any_printable.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8055);
};
cljs.spec.gen.alpha.any_printable.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.any_printable.cljs$lang$applyTo = function(seq8031) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8031));
};
var g__7904__auto___8059 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.boolean$ !== "undefined") {
    return clojure.test.check.generators.boolean$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "boolean", "clojure.test.check.generators/boolean", 1586992347, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "boolean", "clojure.test.check.generators/boolean", 1586992347, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.boolean$ = function cljs$spec$gen$alpha$boolean(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8060 = arguments.length;
  var i__4737__auto___8061 = 0;
  while (true) {
    if (i__4737__auto___8061 < len__4736__auto___8060) {
      args__4742__auto__.push(arguments[i__4737__auto___8061]);
      var G__8062 = i__4737__auto___8061 + 1;
      i__4737__auto___8061 = G__8062;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.boolean$.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.boolean$.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8059);
};
cljs.spec.gen.alpha.boolean$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.boolean$.cljs$lang$applyTo = function(seq8032) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8032));
};
var g__7904__auto___8063 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.char$ !== "undefined") {
    return clojure.test.check.generators.char$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char", "clojure.test.check.generators/char", -1426343459, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char", "clojure.test.check.generators/char", -1426343459, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.char$ = function cljs$spec$gen$alpha$char(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8064 = arguments.length;
  var i__4737__auto___8065 = 0;
  while (true) {
    if (i__4737__auto___8065 < len__4736__auto___8064) {
      args__4742__auto__.push(arguments[i__4737__auto___8065]);
      var G__8066 = i__4737__auto___8065 + 1;
      i__4737__auto___8065 = G__8066;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.char$.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.char$.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8063);
};
cljs.spec.gen.alpha.char$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char$.cljs$lang$applyTo = function(seq8033) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8033));
};
var g__7904__auto___8067 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.char_alpha !== "undefined") {
    return clojure.test.check.generators.char_alpha;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char-alpha", "clojure.test.check.generators/char-alpha", 615785796, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char-alpha", "clojure.test.check.generators/char-alpha", 615785796, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.char_alpha = function cljs$spec$gen$alpha$char_alpha(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8068 = arguments.length;
  var i__4737__auto___8069 = 0;
  while (true) {
    if (i__4737__auto___8069 < len__4736__auto___8068) {
      args__4742__auto__.push(arguments[i__4737__auto___8069]);
      var G__8070 = i__4737__auto___8069 + 1;
      i__4737__auto___8069 = G__8070;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.char_alpha.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.char_alpha.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8067);
};
cljs.spec.gen.alpha.char_alpha.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char_alpha.cljs$lang$applyTo = function(seq8034) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8034));
};
var g__7904__auto___8071 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.char_alphanumeric !== "undefined") {
    return clojure.test.check.generators.char_alphanumeric;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char-alphanumeric", "clojure.test.check.generators/char-alphanumeric", 1383091431, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char-alphanumeric", "clojure.test.check.generators/char-alphanumeric", 1383091431, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.char_alphanumeric = function cljs$spec$gen$alpha$char_alphanumeric(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8072 = arguments.length;
  var i__4737__auto___8073 = 0;
  while (true) {
    if (i__4737__auto___8073 < len__4736__auto___8072) {
      args__4742__auto__.push(arguments[i__4737__auto___8073]);
      var G__8074 = i__4737__auto___8073 + 1;
      i__4737__auto___8073 = G__8074;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.char_alphanumeric.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.char_alphanumeric.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8071);
};
cljs.spec.gen.alpha.char_alphanumeric.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char_alphanumeric.cljs$lang$applyTo = function(seq8035) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8035));
};
var g__7904__auto___8075 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.char_ascii !== "undefined") {
    return clojure.test.check.generators.char_ascii;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char-ascii", "clojure.test.check.generators/char-ascii", -899908538, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char-ascii", "clojure.test.check.generators/char-ascii", -899908538, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.char_ascii = function cljs$spec$gen$alpha$char_ascii(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8076 = arguments.length;
  var i__4737__auto___8077 = 0;
  while (true) {
    if (i__4737__auto___8077 < len__4736__auto___8076) {
      args__4742__auto__.push(arguments[i__4737__auto___8077]);
      var G__8078 = i__4737__auto___8077 + 1;
      i__4737__auto___8077 = G__8078;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.char_ascii.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.char_ascii.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8075);
};
cljs.spec.gen.alpha.char_ascii.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char_ascii.cljs$lang$applyTo = function(seq8036) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8036));
};
var g__7904__auto___8079 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.double$ !== "undefined") {
    return clojure.test.check.generators.double$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "double", "clojure.test.check.generators/double", 668331090, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "double", "clojure.test.check.generators/double", 668331090, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.double$ = function cljs$spec$gen$alpha$double(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8080 = arguments.length;
  var i__4737__auto___8081 = 0;
  while (true) {
    if (i__4737__auto___8081 < len__4736__auto___8080) {
      args__4742__auto__.push(arguments[i__4737__auto___8081]);
      var G__8082 = i__4737__auto___8081 + 1;
      i__4737__auto___8081 = G__8082;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.double$.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.double$.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8079);
};
cljs.spec.gen.alpha.double$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.double$.cljs$lang$applyTo = function(seq8037) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8037));
};
var g__7904__auto___8083 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.int$ !== "undefined") {
    return clojure.test.check.generators.int$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "int", "clojure.test.check.generators/int", 1756228469, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "int", "clojure.test.check.generators/int", 1756228469, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.int$ = function cljs$spec$gen$alpha$int(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8084 = arguments.length;
  var i__4737__auto___8085 = 0;
  while (true) {
    if (i__4737__auto___8085 < len__4736__auto___8084) {
      args__4742__auto__.push(arguments[i__4737__auto___8085]);
      var G__8086 = i__4737__auto___8085 + 1;
      i__4737__auto___8085 = G__8086;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.int$.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.int$.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8083);
};
cljs.spec.gen.alpha.int$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.int$.cljs$lang$applyTo = function(seq8038) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8038));
};
var g__7904__auto___8087 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.keyword !== "undefined") {
    return clojure.test.check.generators.keyword;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "keyword", "clojure.test.check.generators/keyword", 24530530, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "keyword", "clojure.test.check.generators/keyword", 24530530, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.keyword = function cljs$spec$gen$alpha$keyword(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8088 = arguments.length;
  var i__4737__auto___8089 = 0;
  while (true) {
    if (i__4737__auto___8089 < len__4736__auto___8088) {
      args__4742__auto__.push(arguments[i__4737__auto___8089]);
      var G__8090 = i__4737__auto___8089 + 1;
      i__4737__auto___8089 = G__8090;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.keyword.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.keyword.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8087);
};
cljs.spec.gen.alpha.keyword.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.keyword.cljs$lang$applyTo = function(seq8039) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8039));
};
var g__7904__auto___8091 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.keyword_ns !== "undefined") {
    return clojure.test.check.generators.keyword_ns;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "keyword-ns", "clojure.test.check.generators/keyword-ns", -1492628482, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "keyword-ns", "clojure.test.check.generators/keyword-ns", -1492628482, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.keyword_ns = function cljs$spec$gen$alpha$keyword_ns(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8092 = arguments.length;
  var i__4737__auto___8093 = 0;
  while (true) {
    if (i__4737__auto___8093 < len__4736__auto___8092) {
      args__4742__auto__.push(arguments[i__4737__auto___8093]);
      var G__8094 = i__4737__auto___8093 + 1;
      i__4737__auto___8093 = G__8094;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.keyword_ns.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.keyword_ns.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8091);
};
cljs.spec.gen.alpha.keyword_ns.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.keyword_ns.cljs$lang$applyTo = function(seq8040) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8040));
};
var g__7904__auto___8095 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.large_integer !== "undefined") {
    return clojure.test.check.generators.large_integer;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "large-integer", "clojure.test.check.generators/large-integer", -865967138, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "large-integer", "clojure.test.check.generators/large-integer", -865967138, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.large_integer = function cljs$spec$gen$alpha$large_integer(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8096 = arguments.length;
  var i__4737__auto___8097 = 0;
  while (true) {
    if (i__4737__auto___8097 < len__4736__auto___8096) {
      args__4742__auto__.push(arguments[i__4737__auto___8097]);
      var G__8098 = i__4737__auto___8097 + 1;
      i__4737__auto___8097 = G__8098;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.large_integer.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.large_integer.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8095);
};
cljs.spec.gen.alpha.large_integer.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.large_integer.cljs$lang$applyTo = function(seq8041) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8041));
};
var g__7904__auto___8099 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.ratio !== "undefined") {
    return clojure.test.check.generators.ratio;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "ratio", "clojure.test.check.generators/ratio", 1540966915, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "ratio", "clojure.test.check.generators/ratio", 1540966915, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.ratio = function cljs$spec$gen$alpha$ratio(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8100 = arguments.length;
  var i__4737__auto___8101 = 0;
  while (true) {
    if (i__4737__auto___8101 < len__4736__auto___8100) {
      args__4742__auto__.push(arguments[i__4737__auto___8101]);
      var G__8102 = i__4737__auto___8101 + 1;
      i__4737__auto___8101 = G__8102;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.ratio.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.ratio.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8099);
};
cljs.spec.gen.alpha.ratio.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.ratio.cljs$lang$applyTo = function(seq8042) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8042));
};
var g__7904__auto___8103 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.simple_type !== "undefined") {
    return clojure.test.check.generators.simple_type;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "simple-type", "clojure.test.check.generators/simple-type", 892572284, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "simple-type", "clojure.test.check.generators/simple-type", 892572284, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.simple_type = function cljs$spec$gen$alpha$simple_type(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8104 = arguments.length;
  var i__4737__auto___8105 = 0;
  while (true) {
    if (i__4737__auto___8105 < len__4736__auto___8104) {
      args__4742__auto__.push(arguments[i__4737__auto___8105]);
      var G__8106 = i__4737__auto___8105 + 1;
      i__4737__auto___8105 = G__8106;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.simple_type.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.simple_type.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8103);
};
cljs.spec.gen.alpha.simple_type.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.simple_type.cljs$lang$applyTo = function(seq8043) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8043));
};
var g__7904__auto___8107 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.simple_type_printable !== "undefined") {
    return clojure.test.check.generators.simple_type_printable;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "simple-type-printable", "clojure.test.check.generators/simple-type-printable", -58489962, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "simple-type-printable", "clojure.test.check.generators/simple-type-printable", -58489962, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.simple_type_printable = function cljs$spec$gen$alpha$simple_type_printable(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8108 = arguments.length;
  var i__4737__auto___8109 = 0;
  while (true) {
    if (i__4737__auto___8109 < len__4736__auto___8108) {
      args__4742__auto__.push(arguments[i__4737__auto___8109]);
      var G__8110 = i__4737__auto___8109 + 1;
      i__4737__auto___8109 = G__8110;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.simple_type_printable.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.simple_type_printable.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8107);
};
cljs.spec.gen.alpha.simple_type_printable.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.simple_type_printable.cljs$lang$applyTo = function(seq8044) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8044));
};
var g__7904__auto___8111 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.string !== "undefined") {
    return clojure.test.check.generators.string;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "string", "clojure.test.check.generators/string", -1704750979, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "string", "clojure.test.check.generators/string", -1704750979, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.string = function cljs$spec$gen$alpha$string(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8112 = arguments.length;
  var i__4737__auto___8113 = 0;
  while (true) {
    if (i__4737__auto___8113 < len__4736__auto___8112) {
      args__4742__auto__.push(arguments[i__4737__auto___8113]);
      var G__8114 = i__4737__auto___8113 + 1;
      i__4737__auto___8113 = G__8114;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.string.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.string.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8111);
};
cljs.spec.gen.alpha.string.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.string.cljs$lang$applyTo = function(seq8045) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8045));
};
var g__7904__auto___8115 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.string_ascii !== "undefined") {
    return clojure.test.check.generators.string_ascii;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "string-ascii", "clojure.test.check.generators/string-ascii", -2009877640, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "string-ascii", "clojure.test.check.generators/string-ascii", -2009877640, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.string_ascii = function cljs$spec$gen$alpha$string_ascii(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8116 = arguments.length;
  var i__4737__auto___8117 = 0;
  while (true) {
    if (i__4737__auto___8117 < len__4736__auto___8116) {
      args__4742__auto__.push(arguments[i__4737__auto___8117]);
      var G__8118 = i__4737__auto___8117 + 1;
      i__4737__auto___8117 = G__8118;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.string_ascii.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.string_ascii.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8115);
};
cljs.spec.gen.alpha.string_ascii.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.string_ascii.cljs$lang$applyTo = function(seq8046) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8046));
};
var g__7904__auto___8119 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.string_alphanumeric !== "undefined") {
    return clojure.test.check.generators.string_alphanumeric;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "string-alphanumeric", "clojure.test.check.generators/string-alphanumeric", 836374939, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "string-alphanumeric", "clojure.test.check.generators/string-alphanumeric", 836374939, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.string_alphanumeric = function cljs$spec$gen$alpha$string_alphanumeric(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8120 = arguments.length;
  var i__4737__auto___8121 = 0;
  while (true) {
    if (i__4737__auto___8121 < len__4736__auto___8120) {
      args__4742__auto__.push(arguments[i__4737__auto___8121]);
      var G__8122 = i__4737__auto___8121 + 1;
      i__4737__auto___8121 = G__8122;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.string_alphanumeric.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.string_alphanumeric.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8119);
};
cljs.spec.gen.alpha.string_alphanumeric.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.string_alphanumeric.cljs$lang$applyTo = function(seq8047) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8047));
};
var g__7904__auto___8123 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.symbol !== "undefined") {
    return clojure.test.check.generators.symbol;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "symbol", "clojure.test.check.generators/symbol", -1305461065, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "symbol", "clojure.test.check.generators/symbol", -1305461065, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.symbol = function cljs$spec$gen$alpha$symbol(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8124 = arguments.length;
  var i__4737__auto___8125 = 0;
  while (true) {
    if (i__4737__auto___8125 < len__4736__auto___8124) {
      args__4742__auto__.push(arguments[i__4737__auto___8125]);
      var G__8126 = i__4737__auto___8125 + 1;
      i__4737__auto___8125 = G__8126;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.symbol.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.symbol.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8123);
};
cljs.spec.gen.alpha.symbol.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.symbol.cljs$lang$applyTo = function(seq8048) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8048));
};
var g__7904__auto___8127 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.symbol_ns !== "undefined") {
    return clojure.test.check.generators.symbol_ns;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "symbol-ns", "clojure.test.check.generators/symbol-ns", -862629490, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "symbol-ns", "clojure.test.check.generators/symbol-ns", -862629490, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.symbol_ns = function cljs$spec$gen$alpha$symbol_ns(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8128 = arguments.length;
  var i__4737__auto___8129 = 0;
  while (true) {
    if (i__4737__auto___8129 < len__4736__auto___8128) {
      args__4742__auto__.push(arguments[i__4737__auto___8129]);
      var G__8130 = i__4737__auto___8129 + 1;
      i__4737__auto___8129 = G__8130;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.symbol_ns.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.symbol_ns.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8127);
};
cljs.spec.gen.alpha.symbol_ns.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.symbol_ns.cljs$lang$applyTo = function(seq8049) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8049));
};
var g__7904__auto___8131 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.uuid !== "undefined") {
    return clojure.test.check.generators.uuid;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "uuid", "clojure.test.check.generators/uuid", 1589373144, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "uuid", "clojure.test.check.generators/uuid", 1589373144, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.uuid = function cljs$spec$gen$alpha$uuid(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8132 = arguments.length;
  var i__4737__auto___8133 = 0;
  while (true) {
    if (i__4737__auto___8133 < len__4736__auto___8132) {
      args__4742__auto__.push(arguments[i__4737__auto___8133]);
      var G__8134 = i__4737__auto___8133 + 1;
      i__4737__auto___8133 = G__8134;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.uuid.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.uuid.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.deref.call(null, g__7904__auto___8131);
};
cljs.spec.gen.alpha.uuid.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.uuid.cljs$lang$applyTo = function(seq8050) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8050));
};
cljs.spec.gen.alpha.cat = function cljs$spec$gen$alpha$cat(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8137 = arguments.length;
  var i__4737__auto___8138 = 0;
  while (true) {
    if (i__4737__auto___8138 < len__4736__auto___8137) {
      args__4742__auto__.push(arguments[i__4737__auto___8138]);
      var G__8139 = i__4737__auto___8138 + 1;
      i__4737__auto___8138 = G__8139;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.cat.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.gen.alpha.cat.cljs$core$IFn$_invoke$arity$variadic = function(gens) {
  return cljs.spec.gen.alpha.fmap.call(null, function(p1__8135_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.concat, p1__8135_SHARP_);
  }, cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, gens));
};
cljs.spec.gen.alpha.cat.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.cat.cljs$lang$applyTo = function(seq8136) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8136));
};
cljs.spec.gen.alpha.qualified_QMARK_ = function cljs$spec$gen$alpha$qualified_QMARK_(ident) {
  return !(cljs.core.namespace.call(null, ident) == null);
};
cljs.spec.gen.alpha.gen_builtins = new cljs.core.Delay(function() {
  var simple = cljs.spec.gen.alpha.simple_type_printable.call(null);
  return cljs.core.PersistentHashMap.fromArrays([cljs.core.qualified_keyword_QMARK_, cljs.core.seq_QMARK_, cljs.core.vector_QMARK_, cljs.core.any_QMARK_, cljs.core.boolean_QMARK_, cljs.core.char_QMARK_, cljs.core.some_QMARK_, cljs.core.inst_QMARK_, cljs.core.simple_symbol_QMARK_, cljs.core.sequential_QMARK_, cljs.core.float_QMARK_, cljs.core.set_QMARK_, cljs.core.map_QMARK_, cljs.core.empty_QMARK_, cljs.core.string_QMARK_, cljs.core.uri_QMARK_, cljs.core.double_QMARK_, cljs.core.int_QMARK_, cljs.core.associative_QMARK_, 
  cljs.core.keyword_QMARK_, cljs.core.indexed_QMARK_, cljs.core.zero_QMARK_, cljs.core.simple_keyword_QMARK_, cljs.core.neg_int_QMARK_, cljs.core.nil_QMARK_, cljs.core.ident_QMARK_, cljs.core.qualified_ident_QMARK_, cljs.core.true_QMARK_, cljs.core.integer_QMARK_, cljs.core.nat_int_QMARK_, cljs.core.pos_int_QMARK_, cljs.core.uuid_QMARK_, cljs.core.false_QMARK_, cljs.core.list_QMARK_, cljs.core.simple_ident_QMARK_, cljs.core.number_QMARK_, cljs.core.qualified_symbol_QMARK_, cljs.core.seqable_QMARK_, 
  cljs.core.symbol_QMARK_, cljs.core.coll_QMARK_], [cljs.spec.gen.alpha.such_that.call(null, cljs.spec.gen.alpha.qualified_QMARK_, cljs.spec.gen.alpha.keyword_ns.call(null)), cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.vector.call(null, simple), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.return$.call(null, null), cljs.spec.gen.alpha.any_printable.call(null)], null)), cljs.spec.gen.alpha.boolean$.call(null), 
  cljs.spec.gen.alpha.char$.call(null), cljs.spec.gen.alpha.such_that.call(null, cljs.core.some_QMARK_, cljs.spec.gen.alpha.any_printable.call(null)), cljs.spec.gen.alpha.fmap.call(null, function(p1__8141_SHARP_) {
    return new Date(p1__8141_SHARP_);
  }, cljs.spec.gen.alpha.large_integer.call(null)), cljs.spec.gen.alpha.symbol.call(null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.vector.call(null, simple)], null)), cljs.spec.gen.alpha.double$.call(null), cljs.spec.gen.alpha.set.call(null, simple), cljs.spec.gen.alpha.map.call(null, simple, simple), cljs.spec.gen.alpha.elements.call(null, new cljs.core.PersistentVector(null, 
  5, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.List.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentHashSet.EMPTY], null)), cljs.spec.gen.alpha.string_alphanumeric.call(null), cljs.spec.gen.alpha.fmap.call(null, function(p1__8140_SHARP_) {
    return new goog.Uri(["http://", cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__8140_SHARP_), ".com"].join(""));
  }, cljs.spec.gen.alpha.uuid.call(null)), cljs.spec.gen.alpha.double$.call(null), cljs.spec.gen.alpha.large_integer.call(null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.map.call(null, simple, simple), cljs.spec.gen.alpha.vector.call(null, simple)], null)), cljs.spec.gen.alpha.keyword_ns.call(null), cljs.spec.gen.alpha.vector.call(null, simple), cljs.spec.gen.alpha.return$.call(null, 0), cljs.spec.gen.alpha.keyword.call(null), 
  cljs.spec.gen.alpha.large_integer_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max", "max", 61366548), -1], null)), cljs.spec.gen.alpha.return$.call(null, null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.keyword_ns.call(null), cljs.spec.gen.alpha.symbol_ns.call(null)], null)), cljs.spec.gen.alpha.such_that.call(null, cljs.spec.gen.alpha.qualified_QMARK_, 
  cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.keyword_ns.call(null), cljs.spec.gen.alpha.symbol_ns.call(null)], null))), cljs.spec.gen.alpha.return$.call(null, true), cljs.spec.gen.alpha.large_integer.call(null), cljs.spec.gen.alpha.large_integer_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 0], null)), cljs.spec.gen.alpha.large_integer_STAR_.call(null, 
  new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 1], null)), cljs.spec.gen.alpha.uuid.call(null), cljs.spec.gen.alpha.return$.call(null, false), cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.keyword.call(null), cljs.spec.gen.alpha.symbol.call(null)], null)), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.large_integer.call(null), cljs.spec.gen.alpha.double$.call(null)], null)), cljs.spec.gen.alpha.such_that.call(null, cljs.spec.gen.alpha.qualified_QMARK_, cljs.spec.gen.alpha.symbol_ns.call(null)), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.return$.call(null, null), cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.vector.call(null, 
  simple), cljs.spec.gen.alpha.map.call(null, simple, simple), cljs.spec.gen.alpha.set.call(null, simple), cljs.spec.gen.alpha.string_alphanumeric.call(null)], null)), cljs.spec.gen.alpha.symbol_ns.call(null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.map.call(null, simple, simple), cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.vector.call(null, simple), cljs.spec.gen.alpha.set.call(null, 
  simple)], null))]);
}, null);
cljs.spec.gen.alpha.gen_for_pred = function cljs$spec$gen$alpha$gen_for_pred(pred) {
  if (cljs.core.set_QMARK_.call(null, pred)) {
    return cljs.spec.gen.alpha.elements.call(null, pred);
  } else {
    return cljs.core.get.call(null, cljs.core.deref.call(null, cljs.spec.gen.alpha.gen_builtins), pred);
  }
};
goog.provide("cljs.spec.alpha");
goog.require("cljs.core");
goog.require("goog.object");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("cljs.spec.gen.alpha");
goog.require("clojure.string");
cljs.spec.alpha.MAX_INT = 9007199254740991;
cljs.spec.alpha._STAR_recursion_limit_STAR_ = 4;
cljs.spec.alpha._STAR_fspec_iterations_STAR_ = 21;
cljs.spec.alpha._STAR_coll_check_limit_STAR_ = 101;
cljs.spec.alpha._STAR_coll_error_limit_STAR_ = 20;
cljs.spec.alpha.Spec = function() {
};
var cljs$spec$alpha$Spec$conform_STAR_$dyn_8415 = function(spec, x) {
  var x__4428__auto__ = spec == null ? null : spec;
  var m__4429__auto__ = cljs.spec.alpha.conform_STAR_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, spec, x);
  } else {
    var m__4426__auto__ = cljs.spec.alpha.conform_STAR_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, spec, x);
    } else {
      throw cljs.core.missing_protocol.call(null, "Spec.conform*", spec);
    }
  }
};
cljs.spec.alpha.conform_STAR_ = function cljs$spec$alpha$conform_STAR_(spec, x) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$conform_STAR_$arity$2 == null)) {
    return spec.cljs$spec$alpha$Spec$conform_STAR_$arity$2(spec, x);
  } else {
    return cljs$spec$alpha$Spec$conform_STAR_$dyn_8415.call(null, spec, x);
  }
};
var cljs$spec$alpha$Spec$unform_STAR_$dyn_8416 = function(spec, y) {
  var x__4428__auto__ = spec == null ? null : spec;
  var m__4429__auto__ = cljs.spec.alpha.unform_STAR_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, spec, y);
  } else {
    var m__4426__auto__ = cljs.spec.alpha.unform_STAR_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, spec, y);
    } else {
      throw cljs.core.missing_protocol.call(null, "Spec.unform*", spec);
    }
  }
};
cljs.spec.alpha.unform_STAR_ = function cljs$spec$alpha$unform_STAR_(spec, y) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$unform_STAR_$arity$2 == null)) {
    return spec.cljs$spec$alpha$Spec$unform_STAR_$arity$2(spec, y);
  } else {
    return cljs$spec$alpha$Spec$unform_STAR_$dyn_8416.call(null, spec, y);
  }
};
var cljs$spec$alpha$Spec$explain_STAR_$dyn_8417 = function(spec, path, via, in$, x) {
  var x__4428__auto__ = spec == null ? null : spec;
  var m__4429__auto__ = cljs.spec.alpha.explain_STAR_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, spec, path, via, in$, x);
  } else {
    var m__4426__auto__ = cljs.spec.alpha.explain_STAR_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, spec, path, via, in$, x);
    } else {
      throw cljs.core.missing_protocol.call(null, "Spec.explain*", spec);
    }
  }
};
cljs.spec.alpha.explain_STAR_ = function cljs$spec$alpha$explain_STAR_(spec, path, via, in$, x) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$explain_STAR_$arity$5 == null)) {
    return spec.cljs$spec$alpha$Spec$explain_STAR_$arity$5(spec, path, via, in$, x);
  } else {
    return cljs$spec$alpha$Spec$explain_STAR_$dyn_8417.call(null, spec, path, via, in$, x);
  }
};
var cljs$spec$alpha$Spec$gen_STAR_$dyn_8418 = function(spec, overrides, path, rmap) {
  var x__4428__auto__ = spec == null ? null : spec;
  var m__4429__auto__ = cljs.spec.alpha.gen_STAR_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, spec, overrides, path, rmap);
  } else {
    var m__4426__auto__ = cljs.spec.alpha.gen_STAR_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, spec, overrides, path, rmap);
    } else {
      throw cljs.core.missing_protocol.call(null, "Spec.gen*", spec);
    }
  }
};
cljs.spec.alpha.gen_STAR_ = function cljs$spec$alpha$gen_STAR_(spec, overrides, path, rmap) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$gen_STAR_$arity$4 == null)) {
    return spec.cljs$spec$alpha$Spec$gen_STAR_$arity$4(spec, overrides, path, rmap);
  } else {
    return cljs$spec$alpha$Spec$gen_STAR_$dyn_8418.call(null, spec, overrides, path, rmap);
  }
};
var cljs$spec$alpha$Spec$with_gen_STAR_$dyn_8419 = function(spec, gfn) {
  var x__4428__auto__ = spec == null ? null : spec;
  var m__4429__auto__ = cljs.spec.alpha.with_gen_STAR_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, spec, gfn);
  } else {
    var m__4426__auto__ = cljs.spec.alpha.with_gen_STAR_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, spec, gfn);
    } else {
      throw cljs.core.missing_protocol.call(null, "Spec.with-gen*", spec);
    }
  }
};
cljs.spec.alpha.with_gen_STAR_ = function cljs$spec$alpha$with_gen_STAR_(spec, gfn) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 == null)) {
    return spec.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2(spec, gfn);
  } else {
    return cljs$spec$alpha$Spec$with_gen_STAR_$dyn_8419.call(null, spec, gfn);
  }
};
var cljs$spec$alpha$Spec$describe_STAR_$dyn_8420 = function(spec) {
  var x__4428__auto__ = spec == null ? null : spec;
  var m__4429__auto__ = cljs.spec.alpha.describe_STAR_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, spec);
  } else {
    var m__4426__auto__ = cljs.spec.alpha.describe_STAR_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, spec);
    } else {
      throw cljs.core.missing_protocol.call(null, "Spec.describe*", spec);
    }
  }
};
cljs.spec.alpha.describe_STAR_ = function cljs$spec$alpha$describe_STAR_(spec) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$describe_STAR_$arity$1 == null)) {
    return spec.cljs$spec$alpha$Spec$describe_STAR_$arity$1(spec);
  } else {
    return cljs$spec$alpha$Spec$describe_STAR_$dyn_8420.call(null, spec);
  }
};
if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.registry_ref !== "undefined") {
} else {
  cljs.spec.alpha.registry_ref = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
}
cljs.spec.alpha.deep_resolve = function cljs$spec$alpha$deep_resolve(reg, k) {
  var spec = k;
  while (true) {
    if (cljs.core.ident_QMARK_.call(null, spec)) {
      var G__8421 = cljs.core.get.call(null, reg, spec);
      spec = G__8421;
      continue;
    } else {
      return spec;
    }
    break;
  }
};
cljs.spec.alpha.reg_resolve = function cljs$spec$alpha$reg_resolve(k) {
  if (cljs.core.ident_QMARK_.call(null, k)) {
    var reg = cljs.core.deref.call(null, cljs.spec.alpha.registry_ref);
    var spec = cljs.core.get.call(null, reg, k);
    if (!cljs.core.ident_QMARK_.call(null, spec)) {
      return spec;
    } else {
      return cljs.spec.alpha.deep_resolve.call(null, reg, spec);
    }
  } else {
    return k;
  }
};
cljs.spec.alpha.reg_resolve_BANG_ = function cljs$spec$alpha$reg_resolve_BANG_(k) {
  if (cljs.core.ident_QMARK_.call(null, k)) {
    var or__4126__auto__ = cljs.spec.alpha.reg_resolve.call(null, k);
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      throw new Error(["Unable to resolve spec: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)].join(""));
    }
  } else {
    return k;
  }
};
cljs.spec.alpha.spec_QMARK_ = function cljs$spec$alpha$spec_QMARK_(x) {
  if (!(x == null) ? false || cljs.core.PROTOCOL_SENTINEL === x.cljs$spec$alpha$Spec$ ? true : false : false) {
    return x;
  } else {
    return null;
  }
};
cljs.spec.alpha.regex_QMARK_ = function cljs$spec$alpha$regex_QMARK_(x) {
  var and__4115__auto__ = (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(x);
  if (cljs.core.truth_(and__4115__auto__)) {
    return x;
  } else {
    return and__4115__auto__;
  }
};
cljs.spec.alpha.with_name = function cljs$spec$alpha$with_name(spec, name) {
  if (cljs.core.ident_QMARK_.call(null, spec)) {
    return spec;
  } else {
    if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, spec))) {
      return cljs.core.assoc.call(null, spec, new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570), name);
    } else {
      if (!(spec == null) ? spec.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === spec.cljs$core$IMeta$ ? true : false : false) {
        return cljs.core.with_meta.call(null, spec, cljs.core.assoc.call(null, cljs.core.meta.call(null, spec), new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570), name));
      } else {
        return null;
      }
    }
  }
};
cljs.spec.alpha.spec_name = function cljs$spec$alpha$spec_name(spec) {
  if (cljs.core.ident_QMARK_.call(null, spec)) {
    return spec;
  } else {
    if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, spec))) {
      return (new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570)).cljs$core$IFn$_invoke$arity$1(spec);
    } else {
      if (!(spec == null) ? spec.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === spec.cljs$core$IMeta$ ? true : false : false) {
        return (new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, spec));
      } else {
        return null;
      }
    }
  }
};
cljs.spec.alpha.maybe_spec = function cljs$spec$alpha$maybe_spec(spec_or_k) {
  var s = function() {
    var or__4126__auto__ = cljs.core.ident_QMARK_.call(null, spec_or_k) ? cljs.spec.alpha.reg_resolve.call(null, spec_or_k) : false;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      var or__4126__auto____$1 = cljs.spec.alpha.spec_QMARK_.call(null, spec_or_k);
      if (cljs.core.truth_(or__4126__auto____$1)) {
        return or__4126__auto____$1;
      } else {
        var or__4126__auto____$2 = cljs.spec.alpha.regex_QMARK_.call(null, spec_or_k);
        if (cljs.core.truth_(or__4126__auto____$2)) {
          return or__4126__auto____$2;
        } else {
          return null;
        }
      }
    }
  }();
  if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, s))) {
    return cljs.spec.alpha.with_name.call(null, cljs.spec.alpha.regex_spec_impl.call(null, s, null), cljs.spec.alpha.spec_name.call(null, s));
  } else {
    return s;
  }
};
cljs.spec.alpha.the_spec = function cljs$spec$alpha$the_spec(spec_or_k) {
  var or__4126__auto__ = cljs.spec.alpha.maybe_spec.call(null, spec_or_k);
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    if (cljs.core.ident_QMARK_.call(null, spec_or_k)) {
      throw new Error(["Unable to resolve spec: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec_or_k)].join(""));
    } else {
      return null;
    }
  }
};
cljs.spec.alpha.fn_sym = function cljs$spec$alpha$fn_sym(f_n) {
  if (clojure.string.blank_QMARK_.call(null, f_n)) {
    return null;
  } else {
    var xs = cljs.core.map.call(null, cljs.core.demunge, clojure.string.split.call(null, f_n, "$"));
    if (2 <= cljs.core.count.call(null, xs) && cljs.core.every_QMARK_.call(null, function(p1__8425_SHARP_) {
      return !clojure.string.blank_QMARK_.call(null, p1__8425_SHARP_);
    }, xs)) {
      var vec__8426 = cljs.core.juxt.call(null, cljs.core.butlast, cljs.core.last).call(null, xs);
      var xs__$1 = cljs.core.nth.call(null, vec__8426, 0, null);
      var y = cljs.core.nth.call(null, vec__8426, 1, null);
      return cljs.core.symbol.call(null, [clojure.string.join.call(null, ".", xs__$1), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
    } else {
      return null;
    }
  }
};
cljs.spec.alpha.Specize = function() {
};
var cljs$spec$alpha$Specize$specize_STAR_$dyn_8431 = function() {
  var G__8432 = null;
  var G__8432__1 = function(_) {
    var x__4428__auto__ = _ == null ? null : _;
    var m__4429__auto__ = cljs.spec.alpha.specize_STAR_[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.call(null, _);
    } else {
      var m__4426__auto__ = cljs.spec.alpha.specize_STAR_["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Specize.specize*", _);
      }
    }
  };
  var G__8432__2 = function(_, form) {
    var x__4428__auto__ = _ == null ? null : _;
    var m__4429__auto__ = cljs.spec.alpha.specize_STAR_[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.call(null, _, form);
    } else {
      var m__4426__auto__ = cljs.spec.alpha.specize_STAR_["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.call(null, _, form);
      } else {
        throw cljs.core.missing_protocol.call(null, "Specize.specize*", _);
      }
    }
  };
  G__8432 = function(_, form) {
    switch(arguments.length) {
      case 1:
        return G__8432__1.call(this, _);
      case 2:
        return G__8432__2.call(this, _, form);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8432.cljs$core$IFn$_invoke$arity$1 = G__8432__1;
  G__8432.cljs$core$IFn$_invoke$arity$2 = G__8432__2;
  return G__8432;
}();
cljs.spec.alpha.specize_STAR_ = function cljs$spec$alpha$specize_STAR_(var_args) {
  var G__8430 = arguments.length;
  switch(G__8430) {
    case 1:
      return cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$1 = function(_) {
  if (!(_ == null) && !(_.cljs$spec$alpha$Specize$specize_STAR_$arity$1 == null)) {
    return _.cljs$spec$alpha$Specize$specize_STAR_$arity$1(_);
  } else {
    return cljs$spec$alpha$Specize$specize_STAR_$dyn_8431.call(null, _);
  }
};
cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$2 = function(_, form) {
  if (!(_ == null) && !(_.cljs$spec$alpha$Specize$specize_STAR_$arity$2 == null)) {
    return _.cljs$spec$alpha$Specize$specize_STAR_$arity$2(_, form);
  } else {
    return cljs$spec$alpha$Specize$specize_STAR_$dyn_8431.call(null, _, form);
  }
};
cljs.spec.alpha.specize_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.Keyword.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(k) {
  var k__$1 = this;
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, k__$1));
};
cljs.core.Keyword.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(k, _) {
  var k__$1 = this;
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, k__$1));
};
cljs.core.Symbol.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
  var s__$1 = this;
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, s__$1));
};
cljs.core.Symbol.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
  var s__$1 = this;
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, s__$1));
};
cljs.core.PersistentHashSet.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
  var s__$1 = this;
  return cljs.spec.alpha.spec_impl.call(null, s__$1, s__$1, null, null);
};
cljs.core.PersistentHashSet.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, form) {
  var s__$1 = this;
  return cljs.spec.alpha.spec_impl.call(null, form, s__$1, null, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
  var s__$1 = this;
  return cljs.spec.alpha.spec_impl.call(null, s__$1, s__$1, null, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, form) {
  var s__$1 = this;
  return cljs.spec.alpha.spec_impl.call(null, form, s__$1, null, null);
};
goog.object.set(cljs.spec.alpha.Specize, "_", true);
goog.object.set(cljs.spec.alpha.specize_STAR_, "_", function() {
  var G__8434 = null;
  var G__8434__1 = function(o) {
    var temp__5718__auto__ = cljs.core.fn_QMARK_.call(null, o) ? cljs.spec.alpha.fn_sym.call(null, o.name) : false;
    if (cljs.core.truth_(temp__5718__auto__)) {
      var f_n = temp__5718__auto__;
      return cljs.spec.alpha.spec_impl.call(null, f_n, o, null, null);
    } else {
      return cljs.spec.alpha.spec_impl.call(null, new cljs.core.Keyword("cljs.spec.alpha", "unknown", "cljs.spec.alpha/unknown", 651034818), o, null, null);
    }
  };
  var G__8434__2 = function(o, form) {
    return cljs.spec.alpha.spec_impl.call(null, form, o, null, null);
  };
  G__8434 = function(o, form) {
    switch(arguments.length) {
      case 1:
        return G__8434__1.call(this, o);
      case 2:
        return G__8434__2.call(this, o, form);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8434.cljs$core$IFn$_invoke$arity$1 = G__8434__1;
  G__8434.cljs$core$IFn$_invoke$arity$2 = G__8434__2;
  return G__8434;
}());
cljs.spec.alpha.specize = function cljs$spec$alpha$specize(var_args) {
  var G__8436 = arguments.length;
  switch(G__8436) {
    case 1:
      return cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$1 = function(s) {
  var or__4126__auto__ = cljs.spec.alpha.spec_QMARK_.call(null, s);
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    return cljs.spec.alpha.specize_STAR_.call(null, s);
  }
};
cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$2 = function(s, form) {
  var or__4126__auto__ = cljs.spec.alpha.spec_QMARK_.call(null, s);
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    return cljs.spec.alpha.specize_STAR_.call(null, s, form);
  }
};
cljs.spec.alpha.specize.cljs$lang$maxFixedArity = 2;
cljs.spec.alpha.invalid_QMARK_ = function cljs$spec$alpha$invalid_QMARK_(ret) {
  return cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119), ret);
};
cljs.spec.alpha.conform = function cljs$spec$alpha$conform(spec, x) {
  return cljs.spec.alpha.conform_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec), x);
};
cljs.spec.alpha.unform = function cljs$spec$alpha$unform(spec, x) {
  return cljs.spec.alpha.unform_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec), x);
};
cljs.spec.alpha.form = function cljs$spec$alpha$form(spec) {
  return cljs.spec.alpha.describe_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec));
};
cljs.spec.alpha.abbrev = function cljs$spec$alpha$abbrev(form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return clojure.walk.postwalk.call(null, function(form__$1) {
      if (cljs.core.truth_(form__$1 instanceof cljs.core.Symbol ? cljs.core.namespace.call(null, form__$1) : false)) {
        return cljs.core.symbol.call(null, cljs.core.name.call(null, form__$1));
      } else {
        if (cljs.core.seq_QMARK_.call(null, form__$1) && cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "fn", "fn", 465265323, null), cljs.core.first.call(null, form__$1)) && cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "%", "%", -950237169, null)], null), cljs.core.second.call(null, form__$1))) {
          return cljs.core.last.call(null, form__$1);
        } else {
          return form__$1;
        }
      }
    }, form);
  } else {
    if (cljs.core.truth_(form instanceof cljs.core.Symbol ? cljs.core.namespace.call(null, form) : false)) {
      return cljs.core.symbol.call(null, cljs.core.name.call(null, form));
    } else {
      return form;
    }
  }
};
cljs.spec.alpha.describe = function cljs$spec$alpha$describe(spec) {
  return cljs.spec.alpha.abbrev.call(null, cljs.spec.alpha.form.call(null, spec));
};
cljs.spec.alpha.with_gen = function cljs$spec$alpha$with_gen(spec, gen_fn) {
  var spec__$1 = cljs.spec.alpha.reg_resolve.call(null, spec);
  if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, spec__$1))) {
    return cljs.core.assoc.call(null, spec__$1, new cljs.core.Keyword("cljs.spec.alpha", "gfn", "cljs.spec.alpha/gfn", -593120375), gen_fn);
  } else {
    return cljs.spec.alpha.with_gen_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec__$1), gen_fn);
  }
};
cljs.spec.alpha.explain_data_STAR_ = function cljs$spec$alpha$explain_data_STAR_(spec, path, via, in$, x) {
  var temp__5720__auto__ = cljs.spec.alpha.explain_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec), path, via, in$, x);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var probs = temp__5720__auto__;
    if (cljs.core.empty_QMARK_.call(null, probs)) {
      return null;
    } else {
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814), probs, new cljs.core.Keyword("cljs.spec.alpha", "spec", "cljs.spec.alpha/spec", 1947137578), spec, new cljs.core.Keyword("cljs.spec.alpha", "value", "cljs.spec.alpha/value", 1974786274), x], null);
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.explain_data = function cljs$spec$alpha$explain_data(spec, x) {
  return cljs.spec.alpha.explain_data_STAR_.call(null, spec, cljs.core.PersistentVector.EMPTY, function() {
    var temp__5718__auto__ = cljs.spec.alpha.spec_name.call(null, spec);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var name = temp__5718__auto__;
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null);
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }(), cljs.core.PersistentVector.EMPTY, x);
};
cljs.spec.alpha.explain_printer = function cljs$spec$alpha$explain_printer(ed) {
  if (cljs.core.truth_(ed)) {
    var problems = cljs.core.sort_by.call(null, function(p1__8439_SHARP_) {
      return -cljs.core.count.call(null, (new cljs.core.Keyword(null, "path", "path", -188191168)).cljs$core$IFn$_invoke$arity$1(p1__8439_SHARP_));
    }, cljs.core.sort_by.call(null, function(p1__8438_SHARP_) {
      return -cljs.core.count.call(null, (new cljs.core.Keyword(null, "in", "in", -1531184865)).cljs$core$IFn$_invoke$arity$1(p1__8438_SHARP_));
    }, (new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814)).cljs$core$IFn$_invoke$arity$1(ed)));
    return cljs.core.print.call(null, function() {
      var sb__4667__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR__orig_val__8440_8520 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR__orig_val__8441_8521 = cljs.core._STAR_print_fn_STAR_;
      var _STAR_print_newline_STAR__temp_val__8442_8522 = true;
      var _STAR_print_fn_STAR__temp_val__8443_8523 = function(x__4668__auto__) {
        return sb__4667__auto__.append(x__4668__auto__);
      };
      cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__8442_8522;
      cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__8443_8523;
      try {
        var seq__8444_8524 = cljs.core.seq.call(null, problems);
        var chunk__8445_8525 = null;
        var count__8446_8526 = 0;
        var i__8447_8527 = 0;
        while (true) {
          if (i__8447_8527 < count__8446_8526) {
            var map__8484_8528 = cljs.core._nth.call(null, chunk__8445_8525, i__8447_8527);
            var map__8484_8529__$1 = (!(map__8484_8528 == null) ? map__8484_8528.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8484_8528.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8484_8528) : map__8484_8528;
            var prob_8530 = map__8484_8529__$1;
            var path_8531 = cljs.core.get.call(null, map__8484_8529__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
            var pred_8532 = cljs.core.get.call(null, map__8484_8529__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397));
            var val_8533 = cljs.core.get.call(null, map__8484_8529__$1, new cljs.core.Keyword(null, "val", "val", 128701612));
            var reason_8534 = cljs.core.get.call(null, map__8484_8529__$1, new cljs.core.Keyword(null, "reason", "reason", -2070751759));
            var via_8535 = cljs.core.get.call(null, map__8484_8529__$1, new cljs.core.Keyword(null, "via", "via", -1904457336));
            var in_8536 = cljs.core.get.call(null, map__8484_8529__$1, new cljs.core.Keyword(null, "in", "in", -1531184865));
            cljs.core.pr.call(null, val_8533);
            cljs.core.print.call(null, " - failed: ");
            if (cljs.core.truth_(reason_8534)) {
              cljs.core.print.call(null, reason_8534);
            } else {
              cljs.core.pr.call(null, cljs.spec.alpha.abbrev.call(null, pred_8532));
            }
            if (cljs.core.empty_QMARK_.call(null, in_8536)) {
            } else {
              cljs.core.print.call(null, [" in: ", cljs.core.pr_str.call(null, in_8536)].join(""));
            }
            if (cljs.core.empty_QMARK_.call(null, path_8531)) {
            } else {
              cljs.core.print.call(null, [" at: ", cljs.core.pr_str.call(null, path_8531)].join(""));
            }
            if (cljs.core.empty_QMARK_.call(null, via_8535)) {
            } else {
              cljs.core.print.call(null, [" spec: ", cljs.core.pr_str.call(null, cljs.core.last.call(null, via_8535))].join(""));
            }
            var seq__8486_8537 = cljs.core.seq.call(null, prob_8530);
            var chunk__8487_8538 = null;
            var count__8488_8539 = 0;
            var i__8489_8540 = 0;
            while (true) {
              if (i__8489_8540 < count__8488_8539) {
                var vec__8496_8541 = cljs.core._nth.call(null, chunk__8487_8538, i__8489_8540);
                var k_8542 = cljs.core.nth.call(null, vec__8496_8541, 0, null);
                var v_8543 = cljs.core.nth.call(null, vec__8496_8541, 1, null);
                if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], null), 
                null)).call(null, k_8542))) {
                } else {
                  cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, k_8542), " ");
                  cljs.core.pr.call(null, v_8543);
                }
                var G__8544 = seq__8486_8537;
                var G__8545 = chunk__8487_8538;
                var G__8546 = count__8488_8539;
                var G__8547 = i__8489_8540 + 1;
                seq__8486_8537 = G__8544;
                chunk__8487_8538 = G__8545;
                count__8488_8539 = G__8546;
                i__8489_8540 = G__8547;
                continue;
              } else {
                var temp__5720__auto___8548 = cljs.core.seq.call(null, seq__8486_8537);
                if (temp__5720__auto___8548) {
                  var seq__8486_8549__$1 = temp__5720__auto___8548;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__8486_8549__$1)) {
                    var c__4556__auto___8550 = cljs.core.chunk_first.call(null, seq__8486_8549__$1);
                    var G__8551 = cljs.core.chunk_rest.call(null, seq__8486_8549__$1);
                    var G__8552 = c__4556__auto___8550;
                    var G__8553 = cljs.core.count.call(null, c__4556__auto___8550);
                    var G__8554 = 0;
                    seq__8486_8537 = G__8551;
                    chunk__8487_8538 = G__8552;
                    count__8488_8539 = G__8553;
                    i__8489_8540 = G__8554;
                    continue;
                  } else {
                    var vec__8499_8555 = cljs.core.first.call(null, seq__8486_8549__$1);
                    var k_8556 = cljs.core.nth.call(null, vec__8499_8555, 0, null);
                    var v_8557 = cljs.core.nth.call(null, vec__8499_8555, 1, null);
                    if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], null), 
                    null)).call(null, k_8556))) {
                    } else {
                      cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, k_8556), " ");
                      cljs.core.pr.call(null, v_8557);
                    }
                    var G__8558 = cljs.core.next.call(null, seq__8486_8549__$1);
                    var G__8559 = null;
                    var G__8560 = 0;
                    var G__8561 = 0;
                    seq__8486_8537 = G__8558;
                    chunk__8487_8538 = G__8559;
                    count__8488_8539 = G__8560;
                    i__8489_8540 = G__8561;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            cljs.core.newline.call(null);
            var G__8562 = seq__8444_8524;
            var G__8563 = chunk__8445_8525;
            var G__8564 = count__8446_8526;
            var G__8565 = i__8447_8527 + 1;
            seq__8444_8524 = G__8562;
            chunk__8445_8525 = G__8563;
            count__8446_8526 = G__8564;
            i__8447_8527 = G__8565;
            continue;
          } else {
            var temp__5720__auto___8566 = cljs.core.seq.call(null, seq__8444_8524);
            if (temp__5720__auto___8566) {
              var seq__8444_8567__$1 = temp__5720__auto___8566;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__8444_8567__$1)) {
                var c__4556__auto___8568 = cljs.core.chunk_first.call(null, seq__8444_8567__$1);
                var G__8569 = cljs.core.chunk_rest.call(null, seq__8444_8567__$1);
                var G__8570 = c__4556__auto___8568;
                var G__8571 = cljs.core.count.call(null, c__4556__auto___8568);
                var G__8572 = 0;
                seq__8444_8524 = G__8569;
                chunk__8445_8525 = G__8570;
                count__8446_8526 = G__8571;
                i__8447_8527 = G__8572;
                continue;
              } else {
                var map__8502_8573 = cljs.core.first.call(null, seq__8444_8567__$1);
                var map__8502_8574__$1 = (!(map__8502_8573 == null) ? map__8502_8573.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8502_8573.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8502_8573) : map__8502_8573;
                var prob_8575 = map__8502_8574__$1;
                var path_8576 = cljs.core.get.call(null, map__8502_8574__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
                var pred_8577 = cljs.core.get.call(null, map__8502_8574__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397));
                var val_8578 = cljs.core.get.call(null, map__8502_8574__$1, new cljs.core.Keyword(null, "val", "val", 128701612));
                var reason_8579 = cljs.core.get.call(null, map__8502_8574__$1, new cljs.core.Keyword(null, "reason", "reason", -2070751759));
                var via_8580 = cljs.core.get.call(null, map__8502_8574__$1, new cljs.core.Keyword(null, "via", "via", -1904457336));
                var in_8581 = cljs.core.get.call(null, map__8502_8574__$1, new cljs.core.Keyword(null, "in", "in", -1531184865));
                cljs.core.pr.call(null, val_8578);
                cljs.core.print.call(null, " - failed: ");
                if (cljs.core.truth_(reason_8579)) {
                  cljs.core.print.call(null, reason_8579);
                } else {
                  cljs.core.pr.call(null, cljs.spec.alpha.abbrev.call(null, pred_8577));
                }
                if (cljs.core.empty_QMARK_.call(null, in_8581)) {
                } else {
                  cljs.core.print.call(null, [" in: ", cljs.core.pr_str.call(null, in_8581)].join(""));
                }
                if (cljs.core.empty_QMARK_.call(null, path_8576)) {
                } else {
                  cljs.core.print.call(null, [" at: ", cljs.core.pr_str.call(null, path_8576)].join(""));
                }
                if (cljs.core.empty_QMARK_.call(null, via_8580)) {
                } else {
                  cljs.core.print.call(null, [" spec: ", cljs.core.pr_str.call(null, cljs.core.last.call(null, via_8580))].join(""));
                }
                var seq__8504_8582 = cljs.core.seq.call(null, prob_8575);
                var chunk__8505_8583 = null;
                var count__8506_8584 = 0;
                var i__8507_8585 = 0;
                while (true) {
                  if (i__8507_8585 < count__8506_8584) {
                    var vec__8514_8586 = cljs.core._nth.call(null, chunk__8505_8583, i__8507_8585);
                    var k_8587 = cljs.core.nth.call(null, vec__8514_8586, 0, null);
                    var v_8588 = cljs.core.nth.call(null, vec__8514_8586, 1, null);
                    if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], null), 
                    null)).call(null, k_8587))) {
                    } else {
                      cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, k_8587), " ");
                      cljs.core.pr.call(null, v_8588);
                    }
                    var G__8589 = seq__8504_8582;
                    var G__8590 = chunk__8505_8583;
                    var G__8591 = count__8506_8584;
                    var G__8592 = i__8507_8585 + 1;
                    seq__8504_8582 = G__8589;
                    chunk__8505_8583 = G__8590;
                    count__8506_8584 = G__8591;
                    i__8507_8585 = G__8592;
                    continue;
                  } else {
                    var temp__5720__auto___8593__$1 = cljs.core.seq.call(null, seq__8504_8582);
                    if (temp__5720__auto___8593__$1) {
                      var seq__8504_8594__$1 = temp__5720__auto___8593__$1;
                      if (cljs.core.chunked_seq_QMARK_.call(null, seq__8504_8594__$1)) {
                        var c__4556__auto___8595 = cljs.core.chunk_first.call(null, seq__8504_8594__$1);
                        var G__8596 = cljs.core.chunk_rest.call(null, seq__8504_8594__$1);
                        var G__8597 = c__4556__auto___8595;
                        var G__8598 = cljs.core.count.call(null, c__4556__auto___8595);
                        var G__8599 = 0;
                        seq__8504_8582 = G__8596;
                        chunk__8505_8583 = G__8597;
                        count__8506_8584 = G__8598;
                        i__8507_8585 = G__8599;
                        continue;
                      } else {
                        var vec__8517_8600 = cljs.core.first.call(null, seq__8504_8594__$1);
                        var k_8601 = cljs.core.nth.call(null, vec__8517_8600, 0, null);
                        var v_8602 = cljs.core.nth.call(null, vec__8517_8600, 1, null);
                        if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], 
                        null), null)).call(null, k_8601))) {
                        } else {
                          cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, k_8601), " ");
                          cljs.core.pr.call(null, v_8602);
                        }
                        var G__8603 = cljs.core.next.call(null, seq__8504_8594__$1);
                        var G__8604 = null;
                        var G__8605 = 0;
                        var G__8606 = 0;
                        seq__8504_8582 = G__8603;
                        chunk__8505_8583 = G__8604;
                        count__8506_8584 = G__8605;
                        i__8507_8585 = G__8606;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                cljs.core.newline.call(null);
                var G__8607 = cljs.core.next.call(null, seq__8444_8567__$1);
                var G__8608 = null;
                var G__8609 = 0;
                var G__8610 = 0;
                seq__8444_8524 = G__8607;
                chunk__8445_8525 = G__8608;
                count__8446_8526 = G__8609;
                i__8447_8527 = G__8610;
                continue;
              }
            } else {
            }
          }
          break;
        }
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__8441_8521;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__8440_8520;
      }
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4667__auto__);
    }());
  } else {
    return cljs.core.println.call(null, "Success!");
  }
};
cljs.spec.alpha._STAR_explain_out_STAR_ = cljs.spec.alpha.explain_printer;
cljs.spec.alpha.explain_out = function cljs$spec$alpha$explain_out(ed) {
  return cljs.spec.alpha._STAR_explain_out_STAR_.call(null, ed);
};
cljs.spec.alpha.explain = function cljs$spec$alpha$explain(spec, x) {
  return cljs.spec.alpha.explain_out.call(null, cljs.spec.alpha.explain_data.call(null, spec, x));
};
cljs.spec.alpha.explain_str = function cljs$spec$alpha$explain_str(spec, x) {
  var sb__4667__auto__ = new goog.string.StringBuffer;
  var _STAR_print_newline_STAR__orig_val__8611_8615 = cljs.core._STAR_print_newline_STAR_;
  var _STAR_print_fn_STAR__orig_val__8612_8616 = cljs.core._STAR_print_fn_STAR_;
  var _STAR_print_newline_STAR__temp_val__8613_8617 = true;
  var _STAR_print_fn_STAR__temp_val__8614_8618 = function(x__4668__auto__) {
    return sb__4667__auto__.append(x__4668__auto__);
  };
  cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__8613_8617;
  cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__8614_8618;
  try {
    cljs.spec.alpha.explain.call(null, spec, x);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__8612_8616;
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__8611_8615;
  }
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4667__auto__);
};
cljs.spec.alpha.gensub = function cljs$spec$alpha$gensub(spec, overrides, path, rmap, form) {
  var spec__$1 = cljs.spec.alpha.specize.call(null, spec);
  var temp__5718__auto__ = function() {
    var or__4126__auto__ = function() {
      var temp__5720__auto__ = function() {
        var or__4126__auto__ = cljs.core.get.call(null, overrides, function() {
          var or__4126__auto__ = cljs.spec.alpha.spec_name.call(null, spec__$1);
          if (cljs.core.truth_(or__4126__auto__)) {
            return or__4126__auto__;
          } else {
            return spec__$1;
          }
        }());
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.get.call(null, overrides, path);
        }
      }();
      if (cljs.core.truth_(temp__5720__auto__)) {
        var gfn = temp__5720__auto__;
        return gfn.call(null);
      } else {
        return null;
      }
    }();
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return cljs.spec.alpha.gen_STAR_.call(null, spec__$1, overrides, path, rmap);
    }
  }();
  if (cljs.core.truth_(temp__5718__auto__)) {
    var g = temp__5718__auto__;
    return cljs.spec.gen.alpha.such_that.call(null, function(p1__8619_SHARP_) {
      return cljs.spec.alpha.valid_QMARK_.call(null, spec__$1, p1__8619_SHARP_);
    }, g, 100);
  } else {
    throw new Error(["Unable to construct gen at: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(path), " for: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.abbrev.call(null, form))].join(""));
  }
};
cljs.spec.alpha.gen = function cljs$spec$alpha$gen(var_args) {
  var G__8621 = arguments.length;
  switch(G__8621) {
    case 1:
      return cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$1 = function(spec) {
  return cljs.spec.alpha.gen.call(null, spec, null);
};
cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$2 = function(spec, overrides) {
  return cljs.spec.alpha.gensub.call(null, spec, overrides, cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.spec.alpha", "recursion-limit", "cljs.spec.alpha/recursion-limit", 601284994), cljs.spec.alpha._STAR_recursion_limit_STAR_], null), spec);
};
cljs.spec.alpha.gen.cljs$lang$maxFixedArity = 2;
cljs.spec.alpha.def_impl = function cljs$spec$alpha$def_impl(k, form, spec) {
  if (cljs.core.truth_(cljs.core.ident_QMARK_.call(null, k) ? cljs.core.namespace.call(null, k) : false)) {
  } else {
    throw new Error(["Assert failed: ", "k must be namespaced keyword or resolveable symbol", "\n", "(c/and (ident? k) (namespace k))"].join(""));
  }
  if (spec == null) {
    cljs.core.swap_BANG_.call(null, cljs.spec.alpha.registry_ref, cljs.core.dissoc, k);
  } else {
    var spec_8623__$1 = cljs.core.truth_(function() {
      var or__4126__auto__ = cljs.spec.alpha.spec_QMARK_.call(null, spec);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = cljs.spec.alpha.regex_QMARK_.call(null, spec);
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          return cljs.core.get.call(null, cljs.core.deref.call(null, cljs.spec.alpha.registry_ref), spec);
        }
      }
    }()) ? spec : cljs.spec.alpha.spec_impl.call(null, form, spec, null, null);
    cljs.core.swap_BANG_.call(null, cljs.spec.alpha.registry_ref, cljs.core.assoc, k, cljs.spec.alpha.with_name.call(null, spec_8623__$1, k));
  }
  return k;
};
cljs.spec.alpha.registry = function cljs$spec$alpha$registry() {
  return cljs.core.deref.call(null, cljs.spec.alpha.registry_ref);
};
cljs.spec.alpha.__GT_sym = function cljs$spec$alpha$__GT_sym(x) {
  if (cljs.core.var_QMARK_.call(null, x)) {
    return x.sym;
  } else {
    return x;
  }
};
cljs.spec.alpha.get_spec = function cljs$spec$alpha$get_spec(k) {
  return cljs.core.get.call(null, cljs.spec.alpha.registry.call(null), k instanceof cljs.core.Keyword ? k : cljs.spec.alpha.__GT_sym.call(null, k));
};
cljs.spec.alpha.macroexpand_check = function cljs$spec$alpha$macroexpand_check(v, args) {
  var specs = cljs.spec.alpha.get_spec.call(null, v);
  var temp__5720__auto__ = (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(specs);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var arg_spec = temp__5720__auto__;
    if (cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.conform.call(null, arg_spec, args))) {
      var ed = cljs.core.assoc.call(null, cljs.spec.alpha.explain_data_STAR_.call(null, arg_spec, cljs.core.PersistentVector.EMPTY, function() {
        var temp__5718__auto__ = cljs.spec.alpha.spec_name.call(null, arg_spec);
        if (cljs.core.truth_(temp__5718__auto__)) {
          var name = temp__5718__auto__;
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null);
        } else {
          return cljs.core.PersistentVector.EMPTY;
        }
      }(), cljs.core.PersistentVector.EMPTY, args), new cljs.core.Keyword("cljs.spec.alpha", "args", "cljs.spec.alpha/args", 1870769783), args);
      throw cljs.core.ex_info.call(null, ["Call to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.__GT_sym.call(null, v)), " did not conform to spec."].join(""), ed);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.recur_limit_QMARK_ = function cljs$spec$alpha$recur_limit_QMARK_(rmap, id, path, k) {
  return cljs.core.get.call(null, rmap, id) > (new cljs.core.Keyword("cljs.spec.alpha", "recursion-limit", "cljs.spec.alpha/recursion-limit", 601284994)).cljs$core$IFn$_invoke$arity$1(rmap) && cljs.core.contains_QMARK_.call(null, cljs.core.set.call(null, path), k);
};
cljs.spec.alpha.inck = function cljs$spec$alpha$inck(m, k) {
  return cljs.core.assoc.call(null, m, k, function() {
    var or__4126__auto__ = cljs.core.get.call(null, m, k);
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return 0;
    }
  }() + 1);
};
cljs.spec.alpha.dt = function cljs$spec$alpha$dt(var_args) {
  var G__8625 = arguments.length;
  switch(G__8625) {
    case 3:
      return cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$3 = function(pred, x, form) {
  return cljs.spec.alpha.dt.call(null, pred, x, form, null);
};
cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$4 = function(pred, x, form, cpred_QMARK_) {
  if (cljs.core.truth_(pred)) {
    var temp__5718__auto__ = cljs.spec.alpha.the_spec.call(null, pred);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var spec = temp__5718__auto__;
      return cljs.spec.alpha.conform.call(null, spec, x);
    } else {
      if (cljs.core.ifn_QMARK_.call(null, pred)) {
        if (cljs.core.truth_(cpred_QMARK_)) {
          return pred.call(null, x);
        } else {
          if (cljs.core.truth_(pred.call(null, x))) {
            return x;
          } else {
            return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
          }
        }
      } else {
        throw new Error([cljs.core.pr_str.call(null, form), " is not a fn, expected predicate fn"].join(""));
      }
    }
  } else {
    return x;
  }
};
cljs.spec.alpha.dt.cljs$lang$maxFixedArity = 4;
cljs.spec.alpha.valid_QMARK_ = function cljs$spec$alpha$valid_QMARK_(var_args) {
  var G__8628 = arguments.length;
  switch(G__8628) {
    case 2:
      return cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(spec, x) {
  var spec__$1 = cljs.spec.alpha.specize.call(null, spec);
  return !cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.conform_STAR_.call(null, spec__$1, x));
};
cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(spec, x, form) {
  var spec__$1 = cljs.spec.alpha.specize.call(null, spec, form);
  return !cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.conform_STAR_.call(null, spec__$1, x));
};
cljs.spec.alpha.valid_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.pvalid_QMARK_ = function cljs$spec$alpha$pvalid_QMARK_(var_args) {
  var G__8631 = arguments.length;
  switch(G__8631) {
    case 2:
      return cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(pred, x) {
  return !cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.dt.call(null, pred, x, new cljs.core.Keyword("cljs.spec.alpha", "unknown", "cljs.spec.alpha/unknown", 651034818)));
};
cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(pred, x, form) {
  return !cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.dt.call(null, pred, x, form));
};
cljs.spec.alpha.pvalid_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.explain_1 = function cljs$spec$alpha$explain_1(form, pred, path, via, in$, v) {
  var pred__$1 = cljs.spec.alpha.maybe_spec.call(null, pred);
  if (cljs.core.truth_(cljs.spec.alpha.spec_QMARK_.call(null, pred__$1))) {
    return cljs.spec.alpha.explain_STAR_.call(null, pred__$1, path, function() {
      var temp__5718__auto__ = cljs.spec.alpha.spec_name.call(null, pred__$1);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var name = temp__5718__auto__;
        return cljs.core.conj.call(null, via, name);
      } else {
        return via;
      }
    }(), in$, v);
  } else {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), form, new cljs.core.Keyword(null, "val", "val", 128701612), v, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
  }
};
cljs.spec.alpha.k_gen = function cljs$spec$alpha$k_gen(f) {
  if (f instanceof cljs.core.Keyword) {
    return cljs.spec.gen.alpha.return$.call(null, f);
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.first.call(null, f))) {
      return cljs.spec.alpha.or_k_gen.call(null, 1, cljs.core.rest.call(null, f));
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.first.call(null, f))) {
        return cljs.spec.alpha.and_k_gen.call(null, cljs.core.rest.call(null, f));
      } else {
        return null;
      }
    }
  }
};
cljs.spec.alpha.or_k_gen = function cljs$spec$alpha$or_k_gen(var_args) {
  var G__8634 = arguments.length;
  switch(G__8634) {
    case 1:
      return cljs.spec.alpha.or_k_gen.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.or_k_gen.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.or_k_gen.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.spec.alpha.or_k_gen.call(null, 0, s);
};
cljs.spec.alpha.or_k_gen.cljs$core$IFn$_invoke$arity$2 = function(min_count, s) {
  return cljs.spec.gen.alpha.bind.call(null, cljs.spec.gen.alpha.tuple.call(null, cljs.spec.gen.alpha.choose.call(null, min_count, cljs.core.count.call(null, s)), cljs.spec.gen.alpha.shuffle.call(null, cljs.core.map.call(null, cljs.spec.alpha.k_gen, s))), function(p__8635) {
    var vec__8636 = p__8635;
    var n = cljs.core.nth.call(null, vec__8636, 0, null);
    var gens = cljs.core.nth.call(null, vec__8636, 1, null);
    return cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, cljs.core.take.call(null, n, gens));
  });
};
cljs.spec.alpha.or_k_gen.cljs$lang$maxFixedArity = 2;
cljs.spec.alpha.and_k_gen = function cljs$spec$alpha$and_k_gen(s) {
  return cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, cljs.core.map.call(null, cljs.spec.alpha.k_gen, s));
};
cljs.spec.alpha.map_spec_impl = function cljs$spec$alpha$map_spec_impl(p__8643) {
  var map__8644 = p__8643;
  var map__8644__$1 = (!(map__8644 == null) ? map__8644.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8644.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8644) : map__8644;
  var argm = map__8644__$1;
  var opt = cljs.core.get.call(null, map__8644__$1, new cljs.core.Keyword(null, "opt", "opt", -794706369));
  var req_un = cljs.core.get.call(null, map__8644__$1, new cljs.core.Keyword(null, "req-un", "req-un", 1074571008));
  var opt_un = cljs.core.get.call(null, map__8644__$1, new cljs.core.Keyword(null, "opt-un", "opt-un", 883442496));
  var gfn = cljs.core.get.call(null, map__8644__$1, new cljs.core.Keyword(null, "gfn", "gfn", 791517474));
  var pred_exprs = cljs.core.get.call(null, map__8644__$1, new cljs.core.Keyword(null, "pred-exprs", "pred-exprs", 1792271395));
  var keys_pred = cljs.core.get.call(null, map__8644__$1, new cljs.core.Keyword(null, "keys-pred", "keys-pred", 858984739));
  var opt_keys = cljs.core.get.call(null, map__8644__$1, new cljs.core.Keyword(null, "opt-keys", "opt-keys", 1262688261));
  var req_specs = cljs.core.get.call(null, map__8644__$1, new cljs.core.Keyword(null, "req-specs", "req-specs", 553962313));
  var req = cljs.core.get.call(null, map__8644__$1, new cljs.core.Keyword(null, "req", "req", -326448303));
  var req_keys = cljs.core.get.call(null, map__8644__$1, new cljs.core.Keyword(null, "req-keys", "req-keys", 514319221));
  var opt_specs = cljs.core.get.call(null, map__8644__$1, new cljs.core.Keyword(null, "opt-specs", "opt-specs", -384905450));
  var pred_forms = cljs.core.get.call(null, map__8644__$1, new cljs.core.Keyword(null, "pred-forms", "pred-forms", 172611832));
  var k__GT_s = cljs.core.zipmap.call(null, cljs.core.concat.call(null, req_keys, opt_keys), cljs.core.concat.call(null, req_specs, opt_specs));
  var keys__GT_specnames = function(p1__8640_SHARP_) {
    var or__4126__auto__ = k__GT_s.call(null, p1__8640_SHARP_);
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return p1__8640_SHARP_;
    }
  };
  var id = cljs.core.random_uuid.call(null);
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha8646 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha8646 = function(keys__GT_specnames, opt, p__8643, req_un, opt_un, gfn, pred_exprs, keys_pred, argm, opt_keys, req_specs, map__8644, req, id, req_keys, opt_specs, k__GT_s, pred_forms, meta8647) {
      this.keys__GT_specnames = keys__GT_specnames;
      this.opt = opt;
      this.p__8643 = p__8643;
      this.req_un = req_un;
      this.opt_un = opt_un;
      this.gfn = gfn;
      this.pred_exprs = pred_exprs;
      this.keys_pred = keys_pred;
      this.argm = argm;
      this.opt_keys = opt_keys;
      this.req_specs = req_specs;
      this.map__8644 = map__8644;
      this.req = req;
      this.id = id;
      this.req_keys = req_keys;
      this.opt_specs = opt_specs;
      this.k__GT_s = k__GT_s;
      this.pred_forms = pred_forms;
      this.meta8647 = meta8647;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8646.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8648, meta8647__$1) {
      var self__ = this;
      var _8648__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha8646(self__.keys__GT_specnames, self__.opt, self__.p__8643, self__.req_un, self__.opt_un, self__.gfn, self__.pred_exprs, self__.keys_pred, self__.argm, self__.opt_keys, self__.req_specs, self__.map__8644, self__.req, self__.id, self__.req_keys, self__.opt_specs, self__.k__GT_s, self__.pred_forms, meta8647__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8646.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8648) {
      var self__ = this;
      var _8648__$1 = this;
      return self__.meta8647;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8646.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8646.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8646.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8646.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8646.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, m) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.keys_pred.call(null, m))) {
        var reg = cljs.spec.alpha.registry.call(null);
        var ret = m;
        var G__8655 = m;
        var vec__8656 = G__8655;
        var seq__8657 = cljs.core.seq.call(null, vec__8656);
        var first__8658 = cljs.core.first.call(null, seq__8657);
        var seq__8657__$1 = cljs.core.next.call(null, seq__8657);
        var vec__8659 = first__8658;
        var k = cljs.core.nth.call(null, vec__8659, 0, null);
        var v = cljs.core.nth.call(null, vec__8659, 1, null);
        var ks = seq__8657__$1;
        var keys = vec__8656;
        var ret__$1 = ret;
        var G__8655__$1 = G__8655;
        while (true) {
          var ret__$2 = ret__$1;
          var vec__8662 = G__8655__$1;
          var seq__8663 = cljs.core.seq.call(null, vec__8662);
          var first__8664 = cljs.core.first.call(null, seq__8663);
          var seq__8663__$1 = cljs.core.next.call(null, seq__8663);
          var vec__8665 = first__8664;
          var k__$1 = cljs.core.nth.call(null, vec__8665, 0, null);
          var v__$1 = cljs.core.nth.call(null, vec__8665, 1, null);
          var ks__$1 = seq__8663__$1;
          var keys__$1 = vec__8662;
          if (cljs.core.truth_(keys__$1)) {
            var sname = self__.keys__GT_specnames.call(null, k__$1);
            var temp__5718__auto__ = cljs.core.get.call(null, reg, sname);
            if (cljs.core.truth_(temp__5718__auto__)) {
              var s = temp__5718__auto__;
              var cv = cljs.spec.alpha.conform.call(null, s, v__$1);
              if (cljs.spec.alpha.invalid_QMARK_.call(null, cv)) {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              } else {
                var G__8690 = cv === v__$1 ? ret__$2 : cljs.core.assoc.call(null, ret__$2, k__$1, cv);
                var G__8691 = ks__$1;
                ret__$1 = G__8690;
                G__8655__$1 = G__8691;
                continue;
              }
            } else {
              var G__8692 = ret__$2;
              var G__8693 = ks__$1;
              ret__$1 = G__8692;
              G__8655__$1 = G__8693;
              continue;
            }
          } else {
            return ret__$2;
          }
          break;
        }
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8646.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, m) {
      var self__ = this;
      var ___$1 = this;
      var reg = cljs.spec.alpha.registry.call(null);
      var ret = m;
      var G__8671 = cljs.core.keys.call(null, m);
      var vec__8672 = G__8671;
      var seq__8673 = cljs.core.seq.call(null, vec__8672);
      var first__8674 = cljs.core.first.call(null, seq__8673);
      var seq__8673__$1 = cljs.core.next.call(null, seq__8673);
      var k = first__8674;
      var ks = seq__8673__$1;
      var keys = vec__8672;
      var ret__$1 = ret;
      var G__8671__$1 = G__8671;
      while (true) {
        var ret__$2 = ret__$1;
        var vec__8678 = G__8671__$1;
        var seq__8679 = cljs.core.seq.call(null, vec__8678);
        var first__8680 = cljs.core.first.call(null, seq__8679);
        var seq__8679__$1 = cljs.core.next.call(null, seq__8679);
        var k__$1 = first__8680;
        var ks__$1 = seq__8679__$1;
        var keys__$1 = vec__8678;
        if (cljs.core.truth_(keys__$1)) {
          if (cljs.core.contains_QMARK_.call(null, reg, self__.keys__GT_specnames.call(null, k__$1))) {
            var cv = cljs.core.get.call(null, m, k__$1);
            var v = cljs.spec.alpha.unform.call(null, self__.keys__GT_specnames.call(null, k__$1), cv);
            var G__8694 = cv === v ? ret__$2 : cljs.core.assoc.call(null, ret__$2, k__$1, v);
            var G__8695 = ks__$1;
            ret__$1 = G__8694;
            G__8671__$1 = G__8695;
            continue;
          } else {
            var G__8696 = ret__$2;
            var G__8697 = ks__$1;
            ret__$1 = G__8696;
            G__8671__$1 = G__8697;
            continue;
          }
        } else {
          return ret__$2;
        }
        break;
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8646.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
      var self__ = this;
      var ___$1 = this;
      if (!cljs.core.map_QMARK_.call(null, x)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol("cljs.core", "map?", "cljs.core/map?", -1390345523, null), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), 
        in$], null)], null);
      } else {
        var reg = cljs.spec.alpha.registry.call(null);
        return cljs.core.apply.call(null, cljs.core.concat, function() {
          var temp__5720__auto__ = cljs.core.seq.call(null, cljs.core.keep.call(null, cljs.core.identity, cljs.core.map.call(null, function(pred, form) {
            if (cljs.core.truth_(pred.call(null, x))) {
              return null;
            } else {
              return form;
            }
          }, self__.pred_exprs, self__.pred_forms)));
          if (temp__5720__auto__) {
            var probs = temp__5720__auto__;
            return cljs.core.map.call(null, function(p1__8641_SHARP_) {
              return cljs.core.identity.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), p1__8641_SHARP_, new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null));
            }, probs);
          } else {
            return null;
          }
        }(), cljs.core.map.call(null, function(p__8681) {
          var vec__8682 = p__8681;
          var k = cljs.core.nth.call(null, vec__8682, 0, null);
          var v = cljs.core.nth.call(null, vec__8682, 1, null);
          if (!cljs.core.contains_QMARK_.call(null, reg, self__.keys__GT_specnames.call(null, k)) || cljs.spec.alpha.pvalid_QMARK_.call(null, self__.keys__GT_specnames.call(null, k), v, k)) {
            return null;
          } else {
            return cljs.spec.alpha.explain_1.call(null, self__.keys__GT_specnames.call(null, k), self__.keys__GT_specnames.call(null, k), cljs.core.conj.call(null, path, k), via, cljs.core.conj.call(null, in$, k), v);
          }
        }, cljs.core.seq.call(null, x)));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8646.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        var rmap__$1 = cljs.spec.alpha.inck.call(null, rmap, self__.id);
        var rgen = function(k, s) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.spec.alpha.gensub.call(null, s, overrides, cljs.core.conj.call(null, path, k), rmap__$1, k)], null);
        };
        var ogen = function(k, s) {
          if (cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, self__.id, path, k)) {
            return null;
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function() {
              return cljs.spec.alpha.gensub.call(null, s, overrides, cljs.core.conj.call(null, path, k), rmap__$1, k);
            }, null))], null);
          }
        };
        var reqs = cljs.core.map.call(null, rgen, self__.req_keys, self__.req_specs);
        var opts = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, ogen, self__.opt_keys, self__.opt_specs));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.second, reqs), cljs.core.map.call(null, cljs.core.second, opts)))) {
          return cljs.spec.gen.alpha.bind.call(null, cljs.spec.gen.alpha.tuple.call(null, cljs.spec.alpha.and_k_gen.call(null, self__.req), cljs.spec.alpha.or_k_gen.call(null, self__.opt), cljs.spec.alpha.and_k_gen.call(null, self__.req_un), cljs.spec.alpha.or_k_gen.call(null, self__.opt_un)), function(p__8685) {
            var vec__8686 = p__8685;
            var req_ks = cljs.core.nth.call(null, vec__8686, 0, null);
            var opt_ks = cljs.core.nth.call(null, vec__8686, 1, null);
            var req_un_ks = cljs.core.nth.call(null, vec__8686, 2, null);
            var opt_un_ks = cljs.core.nth.call(null, vec__8686, 3, null);
            var qks = cljs.core.flatten.call(null, cljs.core.concat.call(null, req_ks, opt_ks));
            var unqks = cljs.core.map.call(null, cljs.core.comp.call(null, cljs.core.keyword, cljs.core.name), cljs.core.flatten.call(null, cljs.core.concat.call(null, req_un_ks, opt_un_ks)));
            return cljs.core.apply.call(null, cljs.spec.gen.alpha.hash_map, cljs.core.apply.call(null, cljs.core.concat, cljs.core.filter.call(null, function(p1__8642_SHARP_) {
              return cljs.core.set.call(null, cljs.core.concat.call(null, qks, unqks)).call(null, cljs.core.first.call(null, p1__8642_SHARP_));
            }, cljs.core.into.call(null, reqs, opts))));
          });
        } else {
          return null;
        }
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8646.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.map_spec_impl.call(null, cljs.core.assoc.call(null, self__.argm, new cljs.core.Keyword(null, "gfn", "gfn", 791517474), gfn__$1));
    };
    cljs.spec.alpha.t_cljs$spec$alpha8646.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.cons.call(null, new cljs.core.Symbol("cljs.spec.alpha", "keys", "cljs.spec.alpha/keys", 1109346032, null), function() {
        var G__8689 = cljs.core.PersistentVector.EMPTY;
        var G__8689__$1 = cljs.core.truth_(self__.req) ? cljs.core.conj.call(null, G__8689, new cljs.core.Keyword(null, "req", "req", -326448303), self__.req) : G__8689;
        var G__8689__$2 = cljs.core.truth_(self__.opt) ? cljs.core.conj.call(null, G__8689__$1, new cljs.core.Keyword(null, "opt", "opt", -794706369), self__.opt) : G__8689__$1;
        var G__8689__$3 = cljs.core.truth_(self__.req_un) ? cljs.core.conj.call(null, G__8689__$2, new cljs.core.Keyword(null, "req-un", "req-un", 1074571008), self__.req_un) : G__8689__$2;
        if (cljs.core.truth_(self__.opt_un)) {
          return cljs.core.conj.call(null, G__8689__$3, new cljs.core.Keyword(null, "opt-un", "opt-un", 883442496), self__.opt_un);
        } else {
          return G__8689__$3;
        }
      }());
    };
    cljs.spec.alpha.t_cljs$spec$alpha8646.getBasis = function() {
      return new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "keys-\x3especnames", "keys-\x3especnames", 1791294693, null), new cljs.core.Symbol(null, "opt", "opt", 845825158, null), new cljs.core.Symbol(null, "p__8643", "p__8643", -1404865370, null), new cljs.core.Symbol(null, "req-un", "req-un", -1579864761, null), new cljs.core.Symbol(null, "opt-un", "opt-un", -1770993273, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, 
      null), new cljs.core.Symbol(null, "pred-exprs", "pred-exprs", -862164374, null), new cljs.core.Symbol(null, "keys-pred", "keys-pred", -1795451030, null), new cljs.core.Symbol(null, "argm", "argm", -181546357, null), new cljs.core.Symbol(null, "opt-keys", "opt-keys", -1391747508, null), new cljs.core.Symbol(null, "req-specs", "req-specs", -2100473456, null), new cljs.core.Symbol(null, "map__8644", "map__8644", 1826967184, null), new cljs.core.Symbol(null, "req", "req", 1314083224, null), new cljs.core.Symbol(null, 
      "id", "id", 252129435, null), new cljs.core.Symbol(null, "req-keys", "req-keys", -2140116548, null), new cljs.core.Symbol(null, "opt-specs", "opt-specs", 1255626077, null), new cljs.core.Symbol(null, "k-\x3es", "k-\x3es", -1685112801, null), new cljs.core.Symbol(null, "pred-forms", "pred-forms", 1813143359, null), new cljs.core.Symbol(null, "meta8647", "meta8647", 1958231513, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8646.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha8646.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha8646";
    cljs.spec.alpha.t_cljs$spec$alpha8646.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.spec.alpha/t_cljs$spec$alpha8646");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha8646 = function cljs$spec$alpha$map_spec_impl_$___GT_t_cljs$spec$alpha8646(keys__GT_specnames__$1, opt__$1, p__8643__$1, req_un__$1, opt_un__$1, gfn__$1, pred_exprs__$1, keys_pred__$1, argm__$1, opt_keys__$1, req_specs__$1, map__8644__$2, req__$1, id__$1, req_keys__$1, opt_specs__$1, k__GT_s__$1, pred_forms__$1, meta8647) {
      return new cljs.spec.alpha.t_cljs$spec$alpha8646(keys__GT_specnames__$1, opt__$1, p__8643__$1, req_un__$1, opt_un__$1, gfn__$1, pred_exprs__$1, keys_pred__$1, argm__$1, opt_keys__$1, req_specs__$1, map__8644__$2, req__$1, id__$1, req_keys__$1, opt_specs__$1, k__GT_s__$1, pred_forms__$1, meta8647);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha8646(keys__GT_specnames, opt, p__8643, req_un, opt_un, gfn, pred_exprs, keys_pred, argm, opt_keys, req_specs, map__8644__$1, req, id, req_keys, opt_specs, k__GT_s, pred_forms, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.spec_impl = function cljs$spec$alpha$spec_impl(var_args) {
  var G__8699 = arguments.length;
  switch(G__8699) {
    case 4:
      return cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4 = function(form, pred, gfn, cpred_QMARK_) {
  return cljs.spec.alpha.spec_impl.call(null, form, pred, gfn, cpred_QMARK_, null);
};
cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$5 = function(form, pred, gfn, cpred_QMARK_, unc) {
  if (cljs.core.truth_(cljs.spec.alpha.spec_QMARK_.call(null, pred))) {
    var G__8700 = pred;
    if (cljs.core.truth_(gfn)) {
      return cljs.spec.alpha.with_gen.call(null, G__8700, gfn);
    } else {
      return G__8700;
    }
  } else {
    if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, pred))) {
      return cljs.spec.alpha.regex_spec_impl.call(null, pred, gfn);
    } else {
      if (cljs.core.ident_QMARK_.call(null, pred)) {
        var G__8701 = cljs.spec.alpha.the_spec.call(null, pred);
        if (cljs.core.truth_(gfn)) {
          return cljs.spec.alpha.with_gen.call(null, G__8701, gfn);
        } else {
          return G__8701;
        }
      } else {
        if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha8702 !== "undefined") {
        } else {
          cljs.spec.alpha.t_cljs$spec$alpha8702 = function(form, pred, gfn, cpred_QMARK_, unc, meta8703) {
            this.form = form;
            this.pred = pred;
            this.gfn = gfn;
            this.cpred_QMARK_ = cpred_QMARK_;
            this.unc = unc;
            this.meta8703 = meta8703;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.spec.alpha.t_cljs$spec$alpha8702.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8704, meta8703__$1) {
            var self__ = this;
            var _8704__$1 = this;
            return new cljs.spec.alpha.t_cljs$spec$alpha8702(self__.form, self__.pred, self__.gfn, self__.cpred_QMARK_, self__.unc, meta8703__$1);
          };
          cljs.spec.alpha.t_cljs$spec$alpha8702.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8704) {
            var self__ = this;
            var _8704__$1 = this;
            return self__.meta8703;
          };
          cljs.spec.alpha.t_cljs$spec$alpha8702.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
          cljs.spec.alpha.t_cljs$spec$alpha8702.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
            var self__ = this;
            var s__$1 = this;
            return s__$1;
          };
          cljs.spec.alpha.t_cljs$spec$alpha8702.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
            var self__ = this;
            var s__$1 = this;
            return s__$1;
          };
          cljs.spec.alpha.t_cljs$spec$alpha8702.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
          cljs.spec.alpha.t_cljs$spec$alpha8702.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
            var self__ = this;
            var ___$1 = this;
            var ret = self__.pred.call(null, x);
            if (cljs.core.truth_(self__.cpred_QMARK_)) {
              return ret;
            } else {
              if (cljs.core.truth_(ret)) {
                return x;
              } else {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              }
            }
          };
          cljs.spec.alpha.t_cljs$spec$alpha8702.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
            var self__ = this;
            var ___$1 = this;
            if (cljs.core.truth_(self__.cpred_QMARK_)) {
              if (cljs.core.truth_(self__.unc)) {
                return self__.unc.call(null, x);
              } else {
                throw new Error("no unform fn for conformer");
              }
            } else {
              return x;
            }
          };
          cljs.spec.alpha.t_cljs$spec$alpha8702.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
            var self__ = this;
            var ___$1 = this;
            if (cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.dt.call(null, self__.pred, x, self__.form, self__.cpred_QMARK_))) {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), self__.form, new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
            } else {
              return null;
            }
          };
          cljs.spec.alpha.t_cljs$spec$alpha8702.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, ___$1, ___$2, ___$3) {
            var self__ = this;
            var ___$4 = this;
            if (cljs.core.truth_(self__.gfn)) {
              return self__.gfn.call(null);
            } else {
              return cljs.spec.gen.alpha.gen_for_pred.call(null, self__.pred);
            }
          };
          cljs.spec.alpha.t_cljs$spec$alpha8702.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
            var self__ = this;
            var ___$1 = this;
            return cljs.spec.alpha.spec_impl.call(null, self__.form, self__.pred, gfn__$1, self__.cpred_QMARK_, self__.unc);
          };
          cljs.spec.alpha.t_cljs$spec$alpha8702.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.form;
          };
          cljs.spec.alpha.t_cljs$spec$alpha8702.getBasis = function() {
            return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "cpred?", "cpred?", 35589515, null), new cljs.core.Symbol(null, "unc", "unc", -465250751, null), new cljs.core.Symbol(null, "meta8703", "meta8703", -1290890631, null)], null);
          };
          cljs.spec.alpha.t_cljs$spec$alpha8702.cljs$lang$type = true;
          cljs.spec.alpha.t_cljs$spec$alpha8702.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha8702";
          cljs.spec.alpha.t_cljs$spec$alpha8702.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
            return cljs.core._write.call(null, writer__4370__auto__, "cljs.spec.alpha/t_cljs$spec$alpha8702");
          };
          cljs.spec.alpha.__GT_t_cljs$spec$alpha8702 = function cljs$spec$alpha$__GT_t_cljs$spec$alpha8702(form__$1, pred__$1, gfn__$1, cpred_QMARK___$1, unc__$1, meta8703) {
            return new cljs.spec.alpha.t_cljs$spec$alpha8702(form__$1, pred__$1, gfn__$1, cpred_QMARK___$1, unc__$1, meta8703);
          };
        }
        return new cljs.spec.alpha.t_cljs$spec$alpha8702(form, pred, gfn, cpred_QMARK_, unc, cljs.core.PersistentArrayMap.EMPTY);
      }
    }
  }
};
cljs.spec.alpha.spec_impl.cljs$lang$maxFixedArity = 5;
cljs.spec.alpha.multi_spec_impl = function cljs$spec$alpha$multi_spec_impl(var_args) {
  var G__8712 = arguments.length;
  switch(G__8712) {
    case 3:
      return cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$3 = function(form, mmvar, retag) {
  return cljs.spec.alpha.multi_spec_impl.call(null, form, mmvar, retag, null);
};
cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$4 = function(form, mmvar, retag, gfn) {
  var id = cljs.core.random_uuid.call(null);
  var predx = function(p1__8706_SHARP_) {
    var mm = cljs.core.deref.call(null, mmvar);
    var and__4115__auto__ = cljs.core._get_method.call(null, mm, cljs.core._dispatch_fn.call(null, mm).call(null, p1__8706_SHARP_));
    if (cljs.core.truth_(and__4115__auto__)) {
      return mm.call(null, p1__8706_SHARP_);
    } else {
      return and__4115__auto__;
    }
  };
  var dval = function(p1__8707_SHARP_) {
    return cljs.core._dispatch_fn.call(null, cljs.core.deref.call(null, mmvar)).call(null, p1__8707_SHARP_);
  };
  var tag = retag instanceof cljs.core.Keyword ? function(p1__8708_SHARP_, p2__8709_SHARP_) {
    return cljs.core.assoc.call(null, p1__8708_SHARP_, retag, p2__8709_SHARP_);
  } : retag;
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha8713 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha8713 = function(form, mmvar, retag, gfn, id, predx, dval, tag, meta8714) {
      this.form = form;
      this.mmvar = mmvar;
      this.retag = retag;
      this.gfn = gfn;
      this.id = id;
      this.predx = predx;
      this.dval = dval;
      this.tag = tag;
      this.meta8714 = meta8714;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8713.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8715, meta8714__$1) {
      var self__ = this;
      var _8715__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha8713(self__.form, self__.mmvar, self__.retag, self__.gfn, self__.id, self__.predx, self__.dval, self__.tag, meta8714__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8713.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8715) {
      var self__ = this;
      var _8715__$1 = this;
      return self__.meta8714;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8713.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8713.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8713.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8713.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8713.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      var temp__5718__auto__ = self__.predx.call(null, x);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var pred = temp__5718__auto__;
        return cljs.spec.alpha.dt.call(null, pred, x, self__.form);
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8713.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      var temp__5718__auto__ = self__.predx.call(null, x);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var pred = temp__5718__auto__;
        return cljs.spec.alpha.unform.call(null, pred, x);
      } else {
        throw new Error(["No method of: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.form), " for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.dval.call(null, x))].join(""));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8713.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
      var self__ = this;
      var ___$1 = this;
      var dv = self__.dval.call(null, x);
      var path__$1 = cljs.core.conj.call(null, path, dv);
      var temp__5718__auto__ = self__.predx.call(null, x);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var pred = temp__5718__auto__;
        return cljs.spec.alpha.explain_1.call(null, self__.form, pred, path__$1, via, in$, x);
      } else {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397), self__.form, new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "no method", new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", 
        "in", -1531184865), in$], null)], null);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8713.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        var gen = function(p__8716) {
          var vec__8717 = p__8716;
          var k = cljs.core.nth.call(null, vec__8717, 0, null);
          var f = cljs.core.nth.call(null, vec__8717, 1, null);
          var p = f.call(null, null);
          var rmap__$1 = cljs.spec.alpha.inck.call(null, rmap, self__.id);
          if (cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, self__.id, path, k)) {
            return null;
          } else {
            return cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function() {
              return cljs.spec.gen.alpha.fmap.call(null, function(p1__8710_SHARP_) {
                return self__.tag.call(null, p1__8710_SHARP_, k);
              }, cljs.spec.alpha.gensub.call(null, p, overrides, cljs.core.conj.call(null, path, k), rmap__$1, new cljs.core.List(null, new cljs.core.Symbol(null, "method", "method", 1696235119, null), new cljs.core.List(null, self__.form, new cljs.core.List(null, k, null, 1, null), 2, null), 3, null)));
            }, null));
          }
        };
        var gs = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, gen, cljs.core.remove.call(null, function(p__8720) {
          var vec__8721 = p__8720;
          var k = cljs.core.nth.call(null, vec__8721, 0, null);
          return cljs.spec.alpha.invalid_QMARK_.call(null, k);
        }, cljs.core.methods$.call(null, cljs.core.deref.call(null, self__.mmvar)))));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, gs)) {
          return cljs.spec.gen.alpha.one_of.call(null, gs);
        } else {
          return null;
        }
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8713.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.multi_spec_impl.call(null, self__.form, self__.mmvar, self__.retag, gfn__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8713.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "multi-spec", "cljs.spec.alpha/multi-spec", 175821274, null), null, 1, null), new cljs.core.List(null, self__.form, null, 1, null), new cljs.core.List(null, self__.retag, null, 1, null))));
    };
    cljs.spec.alpha.t_cljs$spec$alpha8713.getBasis = function() {
      return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "mmvar", "mmvar", -1714325675, null), new cljs.core.Symbol(null, "retag", "retag", 528972725, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, "predx", "predx", 2063470948, null), new cljs.core.Symbol(null, "dval", 
      "dval", 835211877, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "meta8714", "meta8714", -730357214, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8713.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha8713.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha8713";
    cljs.spec.alpha.t_cljs$spec$alpha8713.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.spec.alpha/t_cljs$spec$alpha8713");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha8713 = function cljs$spec$alpha$__GT_t_cljs$spec$alpha8713(form__$1, mmvar__$1, retag__$1, gfn__$1, id__$1, predx__$1, dval__$1, tag__$1, meta8714) {
      return new cljs.spec.alpha.t_cljs$spec$alpha8713(form__$1, mmvar__$1, retag__$1, gfn__$1, id__$1, predx__$1, dval__$1, tag__$1, meta8714);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha8713(form, mmvar, retag, gfn, id, predx, dval, tag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.multi_spec_impl.cljs$lang$maxFixedArity = 4;
cljs.spec.alpha.tuple_impl = function cljs$spec$alpha$tuple_impl(var_args) {
  var G__8726 = arguments.length;
  switch(G__8726) {
    case 2:
      return cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2 = function(forms, preds) {
  return cljs.spec.alpha.tuple_impl.call(null, forms, preds, null);
};
cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$3 = function(forms, preds, gfn) {
  var specs = new cljs.core.Delay(function() {
    return cljs.core.mapv.call(null, cljs.spec.alpha.specize, preds, forms);
  }, null);
  var cnt = cljs.core.count.call(null, preds);
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha8727 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha8727 = function(forms, preds, gfn, specs, cnt, meta8728) {
      this.forms = forms;
      this.preds = preds;
      this.gfn = gfn;
      this.specs = specs;
      this.cnt = cnt;
      this.meta8728 = meta8728;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8727.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8729, meta8728__$1) {
      var self__ = this;
      var _8729__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha8727(self__.forms, self__.preds, self__.gfn, self__.specs, self__.cnt, meta8728__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8727.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8729) {
      var self__ = this;
      var _8729__$1 = this;
      return self__.meta8728;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8727.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8727.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8727.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8727.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8727.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      var specs__$1 = cljs.core.deref.call(null, self__.specs);
      if (!(cljs.core.vector_QMARK_.call(null, x) && cljs.core._EQ_.call(null, cljs.core.count.call(null, x), self__.cnt))) {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      } else {
        var ret = x;
        var i = 0;
        while (true) {
          if (cljs.core._EQ_.call(null, i, self__.cnt)) {
            return ret;
          } else {
            var v = x.call(null, i);
            var cv = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, i), v);
            if (cljs.spec.alpha.invalid_QMARK_.call(null, cv)) {
              return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
            } else {
              var G__8731 = cv === v ? ret : cljs.core.assoc.call(null, ret, i, cv);
              var G__8732 = i + 1;
              ret = G__8731;
              i = G__8732;
              continue;
            }
          }
          break;
        }
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8727.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.vector_QMARK_.call(null, x) && cljs.core._EQ_.call(null, cljs.core.count.call(null, x), cljs.core.count.call(null, self__.preds))) {
      } else {
        throw new Error("Assert failed: (c/and (vector? x) (\x3d (count x) (count preds)))");
      }
      var ret = x;
      var i = 0;
      while (true) {
        if (cljs.core._EQ_.call(null, i, cljs.core.count.call(null, x))) {
          return ret;
        } else {
          var cv = x.call(null, i);
          var v = cljs.spec.alpha.unform.call(null, self__.preds.call(null, i), cv);
          var G__8733 = cv === v ? ret : cljs.core.assoc.call(null, ret, i, v);
          var G__8734 = i + 1;
          ret = G__8733;
          i = G__8734;
          continue;
        }
        break;
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8727.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
      var self__ = this;
      var ___$1 = this;
      if (!cljs.core.vector_QMARK_.call(null, x)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol("cljs.core", "vector?", "cljs.core/vector?", -1550392028, null), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", 
        -1531184865), in$], null)], null);
      } else {
        if (cljs.core.not_EQ_.call(null, cljs.core.count.call(null, x), cljs.core.count.call(null, self__.preds))) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "\x3d", "cljs.core/\x3d", -1891498332, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, 
          cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.count.call(null, self__.preds), null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, 
          new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
        } else {
          return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(i, form, pred) {
            var v = x.call(null, i);
            if (cljs.spec.alpha.pvalid_QMARK_.call(null, pred, v)) {
              return null;
            } else {
              return cljs.spec.alpha.explain_1.call(null, form, pred, cljs.core.conj.call(null, path, i), via, cljs.core.conj.call(null, in$, i), v);
            }
          }, cljs.core.range.call(null, cljs.core.count.call(null, self__.preds)), self__.forms, self__.preds));
        }
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8727.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        var gen = function(i, p, f) {
          return cljs.spec.alpha.gensub.call(null, p, overrides, cljs.core.conj.call(null, path, i), rmap, f);
        };
        var gs = cljs.core.map.call(null, gen, cljs.core.range.call(null, cljs.core.count.call(null, self__.preds)), self__.preds, self__.forms);
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, gs)) {
          return cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, gs);
        } else {
          return null;
        }
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8727.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.tuple_impl.call(null, self__.forms, self__.preds, gfn__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8727.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "tuple", "cljs.spec.alpha/tuple", -415901908, null), null, 1, null), self__.forms)));
    };
    cljs.spec.alpha.t_cljs$spec$alpha8727.getBasis = function() {
      return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "specs", "specs", -1227865028, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta8728", "meta8728", -1929866083, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8727.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha8727.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha8727";
    cljs.spec.alpha.t_cljs$spec$alpha8727.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.spec.alpha/t_cljs$spec$alpha8727");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha8727 = function cljs$spec$alpha$__GT_t_cljs$spec$alpha8727(forms__$1, preds__$1, gfn__$1, specs__$1, cnt__$1, meta8728) {
      return new cljs.spec.alpha.t_cljs$spec$alpha8727(forms__$1, preds__$1, gfn__$1, specs__$1, cnt__$1, meta8728);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha8727(forms, preds, gfn, specs, cnt, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.tuple_impl.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.tagged_ret = function cljs$spec$alpha$tagged_ret(tag, ret) {
  return new cljs.core.MapEntry(tag, ret, null);
};
cljs.spec.alpha.or_spec_impl = function cljs$spec$alpha$or_spec_impl(keys, forms, preds, gfn) {
  var id = cljs.core.random_uuid.call(null);
  var kps = cljs.core.zipmap.call(null, keys, preds);
  var specs = new cljs.core.Delay(function() {
    return cljs.core.mapv.call(null, cljs.spec.alpha.specize, preds, forms);
  }, null);
  var cform = function() {
    var G__8735 = cljs.core.count.call(null, preds);
    switch(G__8735) {
      case 2:
        return function(x) {
          var specs__$1 = cljs.core.deref.call(null, specs);
          var ret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 0), x);
          if (cljs.spec.alpha.invalid_QMARK_.call(null, ret)) {
            var ret__$1 = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 1), x);
            if (cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1)) {
              return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
            } else {
              return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 1), ret__$1);
            }
          } else {
            return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 0), ret);
          }
        };
        break;
      case 3:
        return function(x) {
          var specs__$1 = cljs.core.deref.call(null, specs);
          var ret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 0), x);
          if (cljs.spec.alpha.invalid_QMARK_.call(null, ret)) {
            var ret__$1 = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 1), x);
            if (cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1)) {
              var ret__$2 = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 2), x);
              if (cljs.spec.alpha.invalid_QMARK_.call(null, ret__$2)) {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              } else {
                return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 2), ret__$2);
              }
            } else {
              return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 1), ret__$1);
            }
          } else {
            return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 0), ret);
          }
        };
        break;
      default:
        return function(x) {
          var specs__$1 = cljs.core.deref.call(null, specs);
          var i = 0;
          while (true) {
            if (i < cljs.core.count.call(null, specs__$1)) {
              var spec = specs__$1.call(null, i);
              var ret = cljs.spec.alpha.conform_STAR_.call(null, spec, x);
              if (cljs.spec.alpha.invalid_QMARK_.call(null, ret)) {
                var G__8744 = i + 1;
                i = G__8744;
                continue;
              } else {
                return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, i), ret);
              }
            } else {
              return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
            }
            break;
          }
        };
    }
  }();
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha8736 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha8736 = function(keys, forms, preds, gfn, id, kps, specs, cform, meta8737) {
      this.keys = keys;
      this.forms = forms;
      this.preds = preds;
      this.gfn = gfn;
      this.id = id;
      this.kps = kps;
      this.specs = specs;
      this.cform = cform;
      this.meta8737 = meta8737;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8736.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8738, meta8737__$1) {
      var self__ = this;
      var _8738__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha8736(self__.keys, self__.forms, self__.preds, self__.gfn, self__.id, self__.kps, self__.specs, self__.cform, meta8737__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8736.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8738) {
      var self__ = this;
      var _8738__$1 = this;
      return self__.meta8737;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8736.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8736.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8736.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8736.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8736.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      return self__.cform.call(null, x);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8736.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, p__8739) {
      var self__ = this;
      var vec__8740 = p__8739;
      var k = cljs.core.nth.call(null, vec__8740, 0, null);
      var x = cljs.core.nth.call(null, vec__8740, 1, null);
      var ___$1 = this;
      return cljs.spec.alpha.unform.call(null, self__.kps.call(null, k), x);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8736.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(this$, path, via, in$, x) {
      var self__ = this;
      var this$__$1 = this;
      if (cljs.spec.alpha.pvalid_QMARK_.call(null, this$__$1, x)) {
        return null;
      } else {
        return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(k, form, pred) {
          if (cljs.spec.alpha.pvalid_QMARK_.call(null, pred, x)) {
            return null;
          } else {
            return cljs.spec.alpha.explain_1.call(null, form, pred, cljs.core.conj.call(null, path, k), via, in$, x);
          }
        }, self__.keys, self__.forms, self__.preds));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8736.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        var gen = function(k, p, f) {
          var rmap__$1 = cljs.spec.alpha.inck.call(null, rmap, self__.id);
          if (cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, self__.id, path, k)) {
            return null;
          } else {
            return cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function() {
              return cljs.spec.alpha.gensub.call(null, p, overrides, cljs.core.conj.call(null, path, k), rmap__$1, f);
            }, null));
          }
        };
        var gs = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, gen, self__.keys, self__.preds, self__.forms));
        if (cljs.core.empty_QMARK_.call(null, gs)) {
          return null;
        } else {
          return cljs.spec.gen.alpha.one_of.call(null, gs);
        }
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8736.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.or_spec_impl.call(null, self__.keys, self__.forms, self__.preds, gfn__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8736.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "or", "cljs.spec.alpha/or", -831679639, null), null, 1, null), cljs.core.mapcat.call(null, cljs.core.vector, self__.keys, self__.forms))));
    };
    cljs.spec.alpha.t_cljs$spec$alpha8736.getBasis = function() {
      return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, "kps", "kps", -1157342767, null), new cljs.core.Symbol(null, "specs", 
      "specs", -1227865028, null), new cljs.core.Symbol(null, "cform", "cform", 1319506748, null), new cljs.core.Symbol(null, "meta8737", "meta8737", -1435385911, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8736.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha8736.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha8736";
    cljs.spec.alpha.t_cljs$spec$alpha8736.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.spec.alpha/t_cljs$spec$alpha8736");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha8736 = function cljs$spec$alpha$or_spec_impl_$___GT_t_cljs$spec$alpha8736(keys__$1, forms__$1, preds__$1, gfn__$1, id__$1, kps__$1, specs__$1, cform__$1, meta8737) {
      return new cljs.spec.alpha.t_cljs$spec$alpha8736(keys__$1, forms__$1, preds__$1, gfn__$1, id__$1, kps__$1, specs__$1, cform__$1, meta8737);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha8736(keys, forms, preds, gfn, id, kps, specs, cform, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.and_preds = function cljs$spec$alpha$and_preds(x, preds, forms) {
  var ret = x;
  var G__8751 = preds;
  var vec__8753 = G__8751;
  var seq__8754 = cljs.core.seq.call(null, vec__8753);
  var first__8755 = cljs.core.first.call(null, seq__8754);
  var seq__8754__$1 = cljs.core.next.call(null, seq__8754);
  var pred = first__8755;
  var preds__$1 = seq__8754__$1;
  var G__8752 = forms;
  var vec__8756 = G__8752;
  var seq__8757 = cljs.core.seq.call(null, vec__8756);
  var first__8758 = cljs.core.first.call(null, seq__8757);
  var seq__8757__$1 = cljs.core.next.call(null, seq__8757);
  var form = first__8758;
  var forms__$1 = seq__8757__$1;
  var ret__$1 = ret;
  var G__8751__$1 = G__8751;
  var G__8752__$1 = G__8752;
  while (true) {
    var ret__$2 = ret__$1;
    var vec__8759 = G__8751__$1;
    var seq__8760 = cljs.core.seq.call(null, vec__8759);
    var first__8761 = cljs.core.first.call(null, seq__8760);
    var seq__8760__$1 = cljs.core.next.call(null, seq__8760);
    var pred__$1 = first__8761;
    var preds__$2 = seq__8760__$1;
    var vec__8762 = G__8752__$1;
    var seq__8763 = cljs.core.seq.call(null, vec__8762);
    var first__8764 = cljs.core.first.call(null, seq__8763);
    var seq__8763__$1 = cljs.core.next.call(null, seq__8763);
    var form__$1 = first__8764;
    var forms__$2 = seq__8763__$1;
    if (cljs.core.truth_(pred__$1)) {
      var nret = cljs.spec.alpha.dt.call(null, pred__$1, ret__$2, form__$1);
      if (cljs.spec.alpha.invalid_QMARK_.call(null, nret)) {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      } else {
        var G__8765 = nret;
        var G__8766 = preds__$2;
        var G__8767 = forms__$2;
        ret__$1 = G__8765;
        G__8751__$1 = G__8766;
        G__8752__$1 = G__8767;
        continue;
      }
    } else {
      return ret__$2;
    }
    break;
  }
};
cljs.spec.alpha.explain_pred_list = function cljs$spec$alpha$explain_pred_list(forms, preds, path, via, in$, x) {
  var ret = x;
  var G__8774 = forms;
  var vec__8776 = G__8774;
  var seq__8777 = cljs.core.seq.call(null, vec__8776);
  var first__8778 = cljs.core.first.call(null, seq__8777);
  var seq__8777__$1 = cljs.core.next.call(null, seq__8777);
  var form = first__8778;
  var forms__$1 = seq__8777__$1;
  var G__8775 = preds;
  var vec__8779 = G__8775;
  var seq__8780 = cljs.core.seq.call(null, vec__8779);
  var first__8781 = cljs.core.first.call(null, seq__8780);
  var seq__8780__$1 = cljs.core.next.call(null, seq__8780);
  var pred = first__8781;
  var preds__$1 = seq__8780__$1;
  var ret__$1 = ret;
  var G__8774__$1 = G__8774;
  var G__8775__$1 = G__8775;
  while (true) {
    var ret__$2 = ret__$1;
    var vec__8782 = G__8774__$1;
    var seq__8783 = cljs.core.seq.call(null, vec__8782);
    var first__8784 = cljs.core.first.call(null, seq__8783);
    var seq__8783__$1 = cljs.core.next.call(null, seq__8783);
    var form__$1 = first__8784;
    var forms__$2 = seq__8783__$1;
    var vec__8785 = G__8775__$1;
    var seq__8786 = cljs.core.seq.call(null, vec__8785);
    var first__8787 = cljs.core.first.call(null, seq__8786);
    var seq__8786__$1 = cljs.core.next.call(null, seq__8786);
    var pred__$1 = first__8787;
    var preds__$2 = seq__8786__$1;
    if (cljs.core.truth_(pred__$1)) {
      var nret = cljs.spec.alpha.dt.call(null, pred__$1, ret__$2, form__$1);
      if (cljs.spec.alpha.invalid_QMARK_.call(null, nret)) {
        return cljs.spec.alpha.explain_1.call(null, form__$1, pred__$1, path, via, in$, ret__$2);
      } else {
        var G__8788 = nret;
        var G__8789 = forms__$2;
        var G__8790 = preds__$2;
        ret__$1 = G__8788;
        G__8774__$1 = G__8789;
        G__8775__$1 = G__8790;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.spec.alpha.and_spec_impl = function cljs$spec$alpha$and_spec_impl(forms, preds, gfn) {
  var specs = new cljs.core.Delay(function() {
    return cljs.core.mapv.call(null, cljs.spec.alpha.specize, preds, forms);
  }, null);
  var cform = function() {
    var G__8793 = cljs.core.count.call(null, preds);
    switch(G__8793) {
      case 2:
        return function(x) {
          var specs__$1 = cljs.core.deref.call(null, specs);
          var ret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 0), x);
          if (cljs.spec.alpha.invalid_QMARK_.call(null, ret)) {
            return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
          } else {
            return cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 1), ret);
          }
        };
        break;
      case 3:
        return function(x) {
          var specs__$1 = cljs.core.deref.call(null, specs);
          var ret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 0), x);
          if (cljs.spec.alpha.invalid_QMARK_.call(null, ret)) {
            return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
          } else {
            var ret__$1 = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 1), ret);
            if (cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1)) {
              return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
            } else {
              return cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 2), ret__$1);
            }
          }
        };
        break;
      default:
        return function(x) {
          var specs__$1 = cljs.core.deref.call(null, specs);
          var ret = x;
          var i = 0;
          while (true) {
            if (i < cljs.core.count.call(null, specs__$1)) {
              var nret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, i), ret);
              if (cljs.spec.alpha.invalid_QMARK_.call(null, nret)) {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              } else {
                var G__8798 = nret;
                var G__8799 = i + 1;
                ret = G__8798;
                i = G__8799;
                continue;
              }
            } else {
              return ret;
            }
            break;
          }
        };
    }
  }();
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha8794 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha8794 = function(forms, preds, gfn, specs, cform, meta8795) {
      this.forms = forms;
      this.preds = preds;
      this.gfn = gfn;
      this.specs = specs;
      this.cform = cform;
      this.meta8795 = meta8795;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8794.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8796, meta8795__$1) {
      var self__ = this;
      var _8796__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha8794(self__.forms, self__.preds, self__.gfn, self__.specs, self__.cform, meta8795__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8794.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8796) {
      var self__ = this;
      var _8796__$1 = this;
      return self__.meta8795;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8794.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8794.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8794.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8794.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8794.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      return self__.cform.call(null, x);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8794.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.reduce.call(null, function(p1__8792_SHARP_, p2__8791_SHARP_) {
        return cljs.spec.alpha.unform.call(null, p2__8791_SHARP_, p1__8792_SHARP_);
      }, x, cljs.core.reverse.call(null, self__.preds));
    };
    cljs.spec.alpha.t_cljs$spec$alpha8794.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.explain_pred_list.call(null, self__.forms, self__.preds, path, via, in$, x);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8794.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        return cljs.spec.alpha.gensub.call(null, cljs.core.first.call(null, self__.preds), overrides, path, rmap, cljs.core.first.call(null, self__.forms));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8794.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.and_spec_impl.call(null, self__.forms, self__.preds, gfn__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8794.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "and", "cljs.spec.alpha/and", -2060279705, null), null, 1, null), self__.forms)));
    };
    cljs.spec.alpha.t_cljs$spec$alpha8794.getBasis = function() {
      return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "specs", "specs", -1227865028, null), new cljs.core.Symbol(null, "cform", "cform", 1319506748, null), new cljs.core.Symbol(null, "meta8795", "meta8795", -582529103, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8794.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha8794.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha8794";
    cljs.spec.alpha.t_cljs$spec$alpha8794.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.spec.alpha/t_cljs$spec$alpha8794");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha8794 = function cljs$spec$alpha$and_spec_impl_$___GT_t_cljs$spec$alpha8794(forms__$1, preds__$1, gfn__$1, specs__$1, cform__$1, meta8795) {
      return new cljs.spec.alpha.t_cljs$spec$alpha8794(forms__$1, preds__$1, gfn__$1, specs__$1, cform__$1, meta8795);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha8794(forms, preds, gfn, specs, cform, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.coll_prob = function cljs$spec$alpha$coll_prob(x, kfn, kform, distinct, count, min_count, max_count, path, via, in$) {
  var pred = function() {
    var or__4126__auto__ = kfn;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return cljs.core.coll_QMARK_;
    }
  }();
  var kform__$1 = function() {
    var or__4126__auto__ = kform;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return new cljs.core.Symbol("cljs.core", "coll?", "cljs.core/coll?", 1208130522, null);
    }
  }();
  if (!cljs.spec.alpha.pvalid_QMARK_.call(null, pred, x)) {
    return cljs.spec.alpha.explain_1.call(null, kform__$1, pred, path, via, in$, x);
  } else {
    if (cljs.core.truth_(function() {
      var and__4115__auto__ = count;
      if (cljs.core.truth_(and__4115__auto__)) {
        return cljs.core.not_EQ_.call(null, count, cljs.core.bounded_count.call(null, count, x));
      } else {
        return and__4115__auto__;
      }
    }())) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "\x3d", "cljs.core/\x3d", -1891498332, null), null, 1, null), new cljs.core.List(null, count, null, 
      1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, 
      "in", "in", -1531184865), in$], null)], null);
    } else {
      if (cljs.core.truth_(function() {
        var and__4115__auto__ = function() {
          var or__4126__auto__ = min_count;
          if (cljs.core.truth_(or__4126__auto__)) {
            return or__4126__auto__;
          } else {
            return max_count;
          }
        }();
        if (cljs.core.truth_(and__4115__auto__)) {
          return !(function() {
            var or__4126__auto__ = min_count;
            if (cljs.core.truth_(or__4126__auto__)) {
              return or__4126__auto__;
            } else {
              return 0;
            }
          }() <= cljs.core.bounded_count.call(null, cljs.core.truth_(max_count) ? max_count + 1 : min_count, x) && cljs.core.bounded_count.call(null, cljs.core.truth_(max_count) ? max_count + 1 : min_count, x) <= function() {
            var or__4126__auto__ = max_count;
            if (cljs.core.truth_(or__4126__auto__)) {
              return or__4126__auto__;
            } else {
              return 9007199254740991;
            }
          }());
        } else {
          return and__4115__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "\x3c\x3d", "cljs.core/\x3c\x3d", 1677001748, null), null, 1, null), new cljs.core.List(null, function() {
          var or__4126__auto__ = min_count;
          if (cljs.core.truth_(or__4126__auto__)) {
            return or__4126__auto__;
          } else {
            return 0;
          }
        }(), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null), new cljs.core.List(null, function() {
          var or__4126__auto__ = max_count;
          if (cljs.core.truth_(or__4126__auto__)) {
            return or__4126__auto__;
          } else {
            return 9007199254740991;
          }
        }(), null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
      } else {
        if (cljs.core.truth_(function() {
          var and__4115__auto__ = distinct;
          if (cljs.core.truth_(and__4115__auto__)) {
            return !cljs.core.empty_QMARK_.call(null, x) && cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core.distinct_QMARK_, x));
          } else {
            return and__4115__auto__;
          }
        }())) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol(null, "distinct?", "distinct?", -1684357959, null), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), 
          in$], null)], null);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.spec.alpha.merge_spec_impl = function cljs$spec$alpha$merge_spec_impl(forms, preds, gfn) {
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha8808 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha8808 = function(forms, preds, gfn, meta8809) {
      this.forms = forms;
      this.preds = preds;
      this.gfn = gfn;
      this.meta8809 = meta8809;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8808.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8810, meta8809__$1) {
      var self__ = this;
      var _8810__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha8808(self__.forms, self__.preds, self__.gfn, meta8809__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8808.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8810) {
      var self__ = this;
      var _8810__$1 = this;
      return self__.meta8809;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8808.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8808.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8808.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8808.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8808.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      var ms = cljs.core.map.call(null, function(p1__8800_SHARP_, p2__8801_SHARP_) {
        return cljs.spec.alpha.dt.call(null, p1__8800_SHARP_, x, p2__8801_SHARP_);
      }, self__.preds, self__.forms);
      if (cljs.core.truth_(cljs.core.some.call(null, cljs.spec.alpha.invalid_QMARK_, ms))) {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      } else {
        return cljs.core.apply.call(null, cljs.core.merge, ms);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8808.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.apply.call(null, cljs.core.merge, cljs.core.map.call(null, function(p1__8802_SHARP_) {
        return cljs.spec.alpha.unform.call(null, p1__8802_SHARP_, x);
      }, cljs.core.reverse.call(null, self__.preds)));
    };
    cljs.spec.alpha.t_cljs$spec$alpha8808.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(p1__8803_SHARP_, p2__8804_SHARP_) {
        return cljs.spec.alpha.explain_1.call(null, p1__8803_SHARP_, p2__8804_SHARP_, path, via, in$, x);
      }, self__.forms, self__.preds));
    };
    cljs.spec.alpha.t_cljs$spec$alpha8808.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        return cljs.spec.gen.alpha.fmap.call(null, function(p1__8805_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.merge, p1__8805_SHARP_);
        }, cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, cljs.core.map.call(null, function(p1__8806_SHARP_, p2__8807_SHARP_) {
          return cljs.spec.alpha.gensub.call(null, p1__8806_SHARP_, overrides, path, rmap, p2__8807_SHARP_);
        }, self__.preds, self__.forms)));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8808.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.merge_spec_impl.call(null, self__.forms, self__.preds, gfn__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8808.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "merge", "cljs.spec.alpha/merge", 1420080689, null), null, 1, null), self__.forms)));
    };
    cljs.spec.alpha.t_cljs$spec$alpha8808.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "meta8809", "meta8809", -837616851, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8808.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha8808.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha8808";
    cljs.spec.alpha.t_cljs$spec$alpha8808.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.spec.alpha/t_cljs$spec$alpha8808");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha8808 = function cljs$spec$alpha$merge_spec_impl_$___GT_t_cljs$spec$alpha8808(forms__$1, preds__$1, gfn__$1, meta8809) {
      return new cljs.spec.alpha.t_cljs$spec$alpha8808(forms__$1, preds__$1, gfn__$1, meta8809);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha8808(forms, preds, gfn, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.empty_coll = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.core", "vector?", "cljs.core/vector?", -1550392028, null), cljs.core.PersistentVector.EMPTY, new cljs.core.Symbol("cljs.core", "set?", "cljs.core/set?", -1176684971, null), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Symbol("cljs.core", "list?", "cljs.core/list?", -684796618, null), cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "map?", "cljs.core/map?", -1390345523, null), cljs.core.PersistentArrayMap.EMPTY], 
null);
cljs.spec.alpha.every_impl = function cljs$spec$alpha$every_impl(var_args) {
  var G__8816 = arguments.length;
  switch(G__8816) {
    case 3:
      return cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$3 = function(form, pred, opts) {
  return cljs.spec.alpha.every_impl.call(null, form, pred, opts, null);
};
cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4 = function(form, pred, p__8817, gfn) {
  var map__8818 = p__8817;
  var map__8818__$1 = (!(map__8818 == null) ? map__8818.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8818.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8818) : map__8818;
  var opts = map__8818__$1;
  var max_count = cljs.core.get.call(null, map__8818__$1, new cljs.core.Keyword(null, "max-count", "max-count", 1539185305));
  var kind_form = cljs.core.get.call(null, map__8818__$1, new cljs.core.Keyword("cljs.spec.alpha", "kind-form", "cljs.spec.alpha/kind-form", -1047104697));
  var gen_max = cljs.core.get.call(null, map__8818__$1, new cljs.core.Keyword(null, "gen-max", "gen-max", -793680445), 20);
  var cpred = cljs.core.get.call(null, map__8818__$1, new cljs.core.Keyword("cljs.spec.alpha", "cpred", "cljs.spec.alpha/cpred", -693471218));
  var conform_keys = cljs.core.get.call(null, map__8818__$1, new cljs.core.Keyword(null, "conform-keys", "conform-keys", -1800041814));
  var describe_form = cljs.core.get.call(null, map__8818__$1, new cljs.core.Keyword("cljs.spec.alpha", "describe", "cljs.spec.alpha/describe", 1883026911));
  var distinct = cljs.core.get.call(null, map__8818__$1, new cljs.core.Keyword(null, "distinct", "distinct", -1788879121));
  var kfn = cljs.core.get.call(null, map__8818__$1, new cljs.core.Keyword("cljs.spec.alpha", "kfn", "cljs.spec.alpha/kfn", 672643897));
  var count = cljs.core.get.call(null, map__8818__$1, new cljs.core.Keyword(null, "count", "count", 2139924085));
  var min_count = cljs.core.get.call(null, map__8818__$1, new cljs.core.Keyword(null, "min-count", "min-count", 1594709013));
  var kind = cljs.core.get.call(null, map__8818__$1, new cljs.core.Keyword(null, "kind", "kind", -717265803));
  var conform_all = cljs.core.get.call(null, map__8818__$1, new cljs.core.Keyword("cljs.spec.alpha", "conform-all", "cljs.spec.alpha/conform-all", 45201917));
  var conform_into = cljs.core.get.call(null, map__8818__$1, new cljs.core.Keyword(null, "into", "into", -150836029));
  var gen_into = cljs.core.truth_(conform_into) ? cljs.core.empty.call(null, conform_into) : cljs.core.get.call(null, cljs.spec.alpha.empty_coll, kind_form);
  var spec = new cljs.core.Delay(function() {
    return cljs.spec.alpha.specize.call(null, pred);
  }, null);
  var check_QMARK_ = function(p1__8811_SHARP_) {
    return cljs.spec.alpha.valid_QMARK_.call(null, cljs.core.deref.call(null, spec), p1__8811_SHARP_);
  };
  var kfn__$1 = function() {
    var or__4126__auto__ = kfn;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return function(i, v) {
        return i;
      };
    }
  }();
  var addcv = function(ret, i, v, cv) {
    return cljs.core.conj.call(null, ret, cv);
  };
  var cfns = function(x) {
    if (cljs.core.vector_QMARK_.call(null, x) && (cljs.core.not.call(null, conform_into) || cljs.core.vector_QMARK_.call(null, conform_into))) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.identity, function(ret, i, v, cv) {
        if (v === cv) {
          return ret;
        } else {
          return cljs.core.assoc.call(null, ret, i, cv);
        }
      }, cljs.core.identity], null);
    } else {
      if (cljs.core.truth_(cljs.core.map_QMARK_.call(null, x) ? function() {
        var or__4126__auto__ = function() {
          var and__4115__auto__ = kind;
          if (cljs.core.truth_(and__4115__auto__)) {
            return cljs.core.not.call(null, conform_into);
          } else {
            return and__4115__auto__;
          }
        }();
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.map_QMARK_.call(null, conform_into);
        }
      }() : false)) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(conform_keys) ? cljs.core.empty : cljs.core.identity, function(ret, i, v, cv) {
          if (v === cv && cljs.core.not.call(null, conform_keys)) {
            return ret;
          } else {
            return cljs.core.assoc.call(null, ret, cljs.core.nth.call(null, cljs.core.truth_(conform_keys) ? cv : v, 0), cljs.core.nth.call(null, cv, 1));
          }
        }, cljs.core.identity], null);
      } else {
        if (cljs.core.list_QMARK_.call(null, conform_into) || cljs.core.seq_QMARK_.call(null, conform_into) || cljs.core.not.call(null, conform_into) && (cljs.core.list_QMARK_.call(null, x) || cljs.core.seq_QMARK_.call(null, x))) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.empty, addcv, cljs.core.reverse], null);
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(p1__8812_SHARP_) {
            return cljs.core.empty.call(null, function() {
              var or__4126__auto__ = conform_into;
              if (cljs.core.truth_(or__4126__auto__)) {
                return or__4126__auto__;
              } else {
                return p1__8812_SHARP_;
              }
            }());
          }, addcv, cljs.core.identity], null);
        }
      }
    }
  };
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha8820 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha8820 = function(form, max_count, check_QMARK_, p__8817, gfn, gen_max, pred, cpred, conform_keys, kind_form, addcv, cfns, describe_form, distinct, spec, map__8818, kfn, gen_into, count, min_count, opts, kind, conform_all, conform_into, meta8821) {
      this.form = form;
      this.max_count = max_count;
      this.check_QMARK_ = check_QMARK_;
      this.p__8817 = p__8817;
      this.gfn = gfn;
      this.gen_max = gen_max;
      this.pred = pred;
      this.cpred = cpred;
      this.conform_keys = conform_keys;
      this.kind_form = kind_form;
      this.addcv = addcv;
      this.cfns = cfns;
      this.describe_form = describe_form;
      this.distinct = distinct;
      this.spec = spec;
      this.map__8818 = map__8818;
      this.kfn = kfn;
      this.gen_into = gen_into;
      this.count = count;
      this.min_count = min_count;
      this.opts = opts;
      this.kind = kind;
      this.conform_all = conform_all;
      this.conform_into = conform_into;
      this.meta8821 = meta8821;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8820.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8822, meta8821__$1) {
      var self__ = this;
      var _8822__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha8820(self__.form, self__.max_count, self__.check_QMARK_, self__.p__8817, self__.gfn, self__.gen_max, self__.pred, self__.cpred, self__.conform_keys, self__.kind_form, self__.addcv, self__.cfns, self__.describe_form, self__.distinct, self__.spec, self__.map__8818, self__.kfn, self__.gen_into, self__.count, self__.min_count, self__.opts, self__.kind, self__.conform_all, self__.conform_into, meta8821__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8820.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8822) {
      var self__ = this;
      var _8822__$1 = this;
      return self__.meta8821;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8820.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8820.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8820.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8820.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8820.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      var spec__$1 = cljs.core.deref.call(null, self__.spec);
      if (cljs.core.not.call(null, self__.cpred.call(null, x))) {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      } else {
        if (cljs.core.truth_(self__.conform_all)) {
          var vec__8823 = self__.cfns.call(null, x);
          var init = cljs.core.nth.call(null, vec__8823, 0, null);
          var add = cljs.core.nth.call(null, vec__8823, 1, null);
          var complete = cljs.core.nth.call(null, vec__8823, 2, null);
          var ret = init.call(null, x);
          var i = 0;
          var G__8829 = cljs.core.seq.call(null, x);
          var vec__8830 = G__8829;
          var seq__8831 = cljs.core.seq.call(null, vec__8830);
          var first__8832 = cljs.core.first.call(null, seq__8831);
          var seq__8831__$1 = cljs.core.next.call(null, seq__8831);
          var v = first__8832;
          var vs = seq__8831__$1;
          var vseq = vec__8830;
          var ret__$1 = ret;
          var i__$1 = i;
          var G__8829__$1 = G__8829;
          while (true) {
            var ret__$2 = ret__$1;
            var i__$2 = i__$1;
            var vec__8833 = G__8829__$1;
            var seq__8834 = cljs.core.seq.call(null, vec__8833);
            var first__8835 = cljs.core.first.call(null, seq__8834);
            var seq__8834__$1 = cljs.core.next.call(null, seq__8834);
            var v__$1 = first__8835;
            var vs__$1 = seq__8834__$1;
            var vseq__$1 = vec__8833;
            if (vseq__$1) {
              var cv = cljs.spec.alpha.conform_STAR_.call(null, spec__$1, v__$1);
              if (cljs.spec.alpha.invalid_QMARK_.call(null, cv)) {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              } else {
                var G__8860 = add.call(null, ret__$2, i__$2, v__$1, cv);
                var G__8861 = i__$2 + 1;
                var G__8862 = vs__$1;
                ret__$1 = G__8860;
                i__$1 = G__8861;
                G__8829__$1 = G__8862;
                continue;
              }
            } else {
              return complete.call(null, ret__$2);
            }
            break;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, x)) {
            var step = function() {
              var x__4214__auto__ = 1;
              var y__4215__auto__ = cljs.core.long$.call(null, cljs.core.count.call(null, x) / cljs.spec.alpha._STAR_coll_check_limit_STAR_);
              return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
            }();
            var i = 0;
            while (true) {
              if (i >= cljs.core.count.call(null, x)) {
                return x;
              } else {
                if (cljs.spec.alpha.valid_QMARK_.call(null, spec__$1, cljs.core.nth.call(null, x, i))) {
                  var G__8863 = i + step;
                  i = G__8863;
                  continue;
                } else {
                  return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                }
              }
              break;
            }
          } else {
            var limit = cljs.spec.alpha._STAR_coll_check_limit_STAR_;
            var i = 0;
            var G__8839 = cljs.core.seq.call(null, x);
            var vec__8840 = G__8839;
            var seq__8841 = cljs.core.seq.call(null, vec__8840);
            var first__8842 = cljs.core.first.call(null, seq__8841);
            var seq__8841__$1 = cljs.core.next.call(null, seq__8841);
            var v = first__8842;
            var vs = seq__8841__$1;
            var vseq = vec__8840;
            var i__$1 = i;
            var G__8839__$1 = G__8839;
            while (true) {
              var i__$2 = i__$1;
              var vec__8843 = G__8839__$1;
              var seq__8844 = cljs.core.seq.call(null, vec__8843);
              var first__8845 = cljs.core.first.call(null, seq__8844);
              var seq__8844__$1 = cljs.core.next.call(null, seq__8844);
              var v__$1 = first__8845;
              var vs__$1 = seq__8844__$1;
              var vseq__$1 = vec__8843;
              if (vseq__$1 == null || cljs.core._EQ_.call(null, i__$2, limit)) {
                return x;
              } else {
                if (cljs.spec.alpha.valid_QMARK_.call(null, spec__$1, v__$1)) {
                  var G__8864 = i__$2 + 1;
                  var G__8865 = vs__$1;
                  i__$1 = G__8864;
                  G__8839__$1 = G__8865;
                  continue;
                } else {
                  return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                }
              }
              break;
            }
          }
        }
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8820.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.conform_all)) {
        var spec__$1 = cljs.core.deref.call(null, self__.spec);
        var vec__8846 = self__.cfns.call(null, x);
        var init = cljs.core.nth.call(null, vec__8846, 0, null);
        var add = cljs.core.nth.call(null, vec__8846, 1, null);
        var complete = cljs.core.nth.call(null, vec__8846, 2, null);
        var ret = init.call(null, x);
        var i = 0;
        var G__8852 = cljs.core.seq.call(null, x);
        var vec__8853 = G__8852;
        var seq__8854 = cljs.core.seq.call(null, vec__8853);
        var first__8855 = cljs.core.first.call(null, seq__8854);
        var seq__8854__$1 = cljs.core.next.call(null, seq__8854);
        var v = first__8855;
        var vs = seq__8854__$1;
        var vseq = vec__8853;
        var ret__$1 = ret;
        var i__$1 = i;
        var G__8852__$1 = G__8852;
        while (true) {
          var ret__$2 = ret__$1;
          var i__$2 = i__$1;
          var vec__8856 = G__8852__$1;
          var seq__8857 = cljs.core.seq.call(null, vec__8856);
          var first__8858 = cljs.core.first.call(null, seq__8857);
          var seq__8857__$1 = cljs.core.next.call(null, seq__8857);
          var v__$1 = first__8858;
          var vs__$1 = seq__8857__$1;
          var vseq__$1 = vec__8856;
          if (i__$2 >= cljs.core.count.call(null, x)) {
            return complete.call(null, ret__$2);
          } else {
            var G__8866 = add.call(null, ret__$2, i__$2, v__$1, cljs.spec.alpha.unform_STAR_.call(null, spec__$1, v__$1));
            var G__8867 = i__$2 + 1;
            var G__8868 = vs__$1;
            ret__$1 = G__8866;
            i__$1 = G__8867;
            G__8852__$1 = G__8868;
            continue;
          }
          break;
        }
      } else {
        return x;
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8820.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
      var self__ = this;
      var ___$1 = this;
      var or__4126__auto__ = cljs.spec.alpha.coll_prob.call(null, x, self__.kind, self__.kind_form, self__.distinct, self__.count, self__.min_count, self__.max_count, path, via, in$);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        return cljs.core.apply.call(null, cljs.core.concat, (cljs.core.truth_(self__.conform_all) ? cljs.core.identity : cljs.core.partial.call(null, cljs.core.take, cljs.spec.alpha._STAR_coll_error_limit_STAR_)).call(null, cljs.core.keep.call(null, cljs.core.identity, cljs.core.map.call(null, function(i, v) {
          var k = self__.kfn.call(null, i, v);
          if (cljs.core.truth_(self__.check_QMARK_.call(null, v))) {
            return null;
          } else {
            var prob = cljs.spec.alpha.explain_1.call(null, self__.form, self__.pred, path, via, cljs.core.conj.call(null, in$, k), v);
            return prob;
          }
        }, cljs.core.range.call(null), x))));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8820.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        var pgen = cljs.spec.alpha.gensub.call(null, self__.pred, overrides, path, rmap, self__.form);
        return cljs.spec.gen.alpha.bind.call(null, cljs.core.truth_(self__.gen_into) ? cljs.spec.gen.alpha.return$.call(null, self__.gen_into) : cljs.core.truth_(self__.kind) ? cljs.spec.gen.alpha.fmap.call(null, function(p1__8813_SHARP_) {
          if (cljs.core.empty_QMARK_.call(null, p1__8813_SHARP_)) {
            return p1__8813_SHARP_;
          } else {
            return cljs.core.empty.call(null, p1__8813_SHARP_);
          }
        }, cljs.spec.alpha.gensub.call(null, self__.kind, overrides, path, rmap, self__.form)) : cljs.spec.gen.alpha.return$.call(null, cljs.core.PersistentVector.EMPTY), function(init) {
          return cljs.spec.gen.alpha.fmap.call(null, function(p1__8814_SHARP_) {
            if (cljs.core.vector_QMARK_.call(null, init)) {
              return p1__8814_SHARP_;
            } else {
              return cljs.core.into.call(null, init, p1__8814_SHARP_);
            }
          }, cljs.core.truth_(self__.distinct) ? cljs.core.truth_(self__.count) ? cljs.spec.gen.alpha.vector_distinct.call(null, pgen, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "num-elements", "num-elements", 1960422107), self__.count, new cljs.core.Keyword(null, "max-tries", "max-tries", -1824441792), 100], null)) : cljs.spec.gen.alpha.vector_distinct.call(null, pgen, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "min-elements", "min-elements", 
          949370780), function() {
            var or__4126__auto__ = self__.min_count;
            if (cljs.core.truth_(or__4126__auto__)) {
              return or__4126__auto__;
            } else {
              return 0;
            }
          }(), new cljs.core.Keyword(null, "max-elements", "max-elements", 433034073), function() {
            var or__4126__auto__ = self__.max_count;
            if (cljs.core.truth_(or__4126__auto__)) {
              return or__4126__auto__;
            } else {
              var x__4214__auto__ = self__.gen_max;
              var y__4215__auto__ = 2 * function() {
                var or__4126__auto____$1 = self__.min_count;
                if (cljs.core.truth_(or__4126__auto____$1)) {
                  return or__4126__auto____$1;
                } else {
                  return 0;
                }
              }();
              return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
            }
          }(), new cljs.core.Keyword(null, "max-tries", "max-tries", -1824441792), 100], null)) : cljs.core.truth_(self__.count) ? cljs.spec.gen.alpha.vector.call(null, pgen, self__.count) : cljs.core.truth_(function() {
            var or__4126__auto__ = self__.min_count;
            if (cljs.core.truth_(or__4126__auto__)) {
              return or__4126__auto__;
            } else {
              return self__.max_count;
            }
          }()) ? cljs.spec.gen.alpha.vector.call(null, pgen, function() {
            var or__4126__auto__ = self__.min_count;
            if (cljs.core.truth_(or__4126__auto__)) {
              return or__4126__auto__;
            } else {
              return 0;
            }
          }(), function() {
            var or__4126__auto__ = self__.max_count;
            if (cljs.core.truth_(or__4126__auto__)) {
              return or__4126__auto__;
            } else {
              var x__4214__auto__ = self__.gen_max;
              var y__4215__auto__ = 2 * function() {
                var or__4126__auto____$1 = self__.min_count;
                if (cljs.core.truth_(or__4126__auto____$1)) {
                  return or__4126__auto____$1;
                } else {
                  return 0;
                }
              }();
              return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
            }
          }()) : cljs.spec.gen.alpha.vector.call(null, pgen, 0, self__.gen_max));
        });
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8820.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.every_impl.call(null, self__.form, self__.pred, self__.opts, gfn__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8820.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__4126__auto__ = self__.describe_form;
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "every", "cljs.spec.alpha/every", 123912744, null), null, 1, null), new cljs.core.List(null, self__.form, null, 1, null), cljs.core.mapcat.call(null, cljs.core.identity, self__.opts))));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8820.getBasis = function() {
      return new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "max-count", "max-count", -1115250464, null), new cljs.core.Symbol(null, "check?", "check?", 409539557, null), new cljs.core.Symbol(null, "p__8817", "p__8817", -567987385, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "gen-max", "gen-max", 846851082, null), new cljs.core.Symbol(null, 
      "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "cpred", "cpred", -540353554, null), new cljs.core.Symbol(null, "conform-keys", "conform-keys", -159510287, null), new cljs.core.Symbol(null, "kind-form", "kind-form", 1155997457, null), new cljs.core.Symbol(null, "addcv", "addcv", -1552991247, null), new cljs.core.Symbol(null, "cfns", "cfns", 1335482066, null), new cljs.core.Symbol(null, "describe-form", "describe-form", -1410156588, null), new cljs.core.Symbol(null, "distinct", 
      "distinct", -148347594, null), new cljs.core.Symbol(null, "spec", "spec", 1988051928, null), new cljs.core.Symbol(null, "map__8818", "map__8818", -388619943, null), new cljs.core.Symbol(null, "kfn", "kfn", 729311001, null), new cljs.core.Symbol(null, "gen-into", "gen-into", 592640985, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "min-count", "min-count", -1059726756, null), new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, 
      "kind", "kind", 923265724, null), new cljs.core.Symbol(null, "conform-all", "conform-all", -980179459, null), new cljs.core.Symbol(null, "conform-into", "conform-into", -1039113729, null), new cljs.core.Symbol(null, "meta8821", "meta8821", 1873571127, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8820.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha8820.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha8820";
    cljs.spec.alpha.t_cljs$spec$alpha8820.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.spec.alpha/t_cljs$spec$alpha8820");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha8820 = function cljs$spec$alpha$__GT_t_cljs$spec$alpha8820(form__$1, max_count__$1, check_QMARK___$1, p__8817__$1, gfn__$1, gen_max__$1, pred__$1, cpred__$1, conform_keys__$1, kind_form__$1, addcv__$1, cfns__$1, describe_form__$1, distinct__$1, spec__$1, map__8818__$2, kfn__$2, gen_into__$1, count__$1, min_count__$1, opts__$1, kind__$1, conform_all__$1, conform_into__$1, meta8821) {
      return new cljs.spec.alpha.t_cljs$spec$alpha8820(form__$1, max_count__$1, check_QMARK___$1, p__8817__$1, gfn__$1, gen_max__$1, pred__$1, cpred__$1, conform_keys__$1, kind_form__$1, addcv__$1, cfns__$1, describe_form__$1, distinct__$1, spec__$1, map__8818__$2, kfn__$2, gen_into__$1, count__$1, min_count__$1, opts__$1, kind__$1, conform_all__$1, conform_into__$1, meta8821);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha8820(form, max_count, check_QMARK_, p__8817, gfn, gen_max, pred, cpred, conform_keys, kind_form, addcv, cfns, describe_form, distinct, spec, map__8818__$1, kfn__$1, gen_into, count, min_count, opts, kind, conform_all, conform_into, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.every_impl.cljs$lang$maxFixedArity = 4;
cljs.spec.alpha.accept = function cljs$spec$alpha$accept(x) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), new cljs.core.Keyword(null, "ret", "ret", -468222814), x], null);
};
cljs.spec.alpha.accept_QMARK_ = function cljs$spec$alpha$accept_QMARK_(p__8869) {
  var map__8870 = p__8869;
  var map__8870__$1 = (!(map__8870 == null) ? map__8870.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8870.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8870) : map__8870;
  var op = cljs.core.get.call(null, map__8870__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  return cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), op);
};
cljs.spec.alpha.pcat_STAR_ = function cljs$spec$alpha$pcat_STAR_(p__8872) {
  var map__8873 = p__8872;
  var map__8873__$1 = (!(map__8873 == null) ? map__8873.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8873.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8873) : map__8873;
  var vec__8874 = cljs.core.get.call(null, map__8873__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var seq__8875 = cljs.core.seq.call(null, vec__8874);
  var first__8876 = cljs.core.first.call(null, seq__8875);
  var seq__8875__$1 = cljs.core.next.call(null, seq__8875);
  var p1 = first__8876;
  var pr = seq__8875__$1;
  var ps = vec__8874;
  var vec__8877 = cljs.core.get.call(null, map__8873__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var seq__8878 = cljs.core.seq.call(null, vec__8877);
  var first__8879 = cljs.core.first.call(null, seq__8878);
  var seq__8878__$1 = cljs.core.next.call(null, seq__8878);
  var k1 = first__8879;
  var kr = seq__8878__$1;
  var ks = vec__8877;
  var vec__8880 = cljs.core.get.call(null, map__8873__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var seq__8881 = cljs.core.seq.call(null, vec__8880);
  var first__8882 = cljs.core.first.call(null, seq__8881);
  var seq__8881__$1 = cljs.core.next.call(null, seq__8881);
  var f1 = first__8882;
  var fr = seq__8881__$1;
  var forms = vec__8880;
  var ret = cljs.core.get.call(null, map__8873__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var rep_PLUS_ = cljs.core.get.call(null, map__8873__$1, new cljs.core.Keyword(null, "rep+", "rep+", -281382396));
  if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ps)) {
    if (cljs.spec.alpha.accept_QMARK_.call(null, p1)) {
      var rp = (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(p1);
      var ret__$1 = cljs.core.conj.call(null, ret, cljs.core.truth_(ks) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k1, rp]) : rp);
      if (pr) {
        return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), pr, new cljs.core.Keyword(null, "ks", "ks", 1900203942), kr, new cljs.core.Keyword(null, "forms", "forms", 2045992350), fr, new cljs.core.Keyword(null, "ret", "ret", -468222814), ret__$1], null));
      } else {
        return cljs.spec.alpha.accept.call(null, ret__$1);
      }
    } else {
      return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), new cljs.core.Keyword(null, "ps", "ps", 292358046), ps, new cljs.core.Keyword(null, "ret", "ret", -468222814), ret, new cljs.core.Keyword(null, "ks", "ks", 1900203942), ks, new cljs.core.Keyword(null, "forms", "forms", 2045992350), forms, new cljs.core.Keyword(null, "rep+", "rep+", 
      -281382396), rep_PLUS_], null);
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.pcat = function cljs$spec$alpha$pcat(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8885 = arguments.length;
  var i__4737__auto___8886 = 0;
  while (true) {
    if (i__4737__auto___8886 < len__4736__auto___8885) {
      args__4742__auto__.push(arguments[i__4737__auto___8886]);
      var G__8887 = i__4737__auto___8886 + 1;
      i__4737__auto___8886 = G__8887;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.alpha.pcat.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.alpha.pcat.cljs$core$IFn$_invoke$arity$variadic = function(ps) {
  return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ps", "ps", 292358046), ps, new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.PersistentVector.EMPTY], null));
};
cljs.spec.alpha.pcat.cljs$lang$maxFixedArity = 0;
cljs.spec.alpha.pcat.cljs$lang$applyTo = function(seq8884) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8884));
};
cljs.spec.alpha.cat_impl = function cljs$spec$alpha$cat_impl(ks, ps, forms) {
  return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ks", "ks", 1900203942), ks, new cljs.core.Keyword(null, "ps", "ps", 292358046), ps, new cljs.core.Keyword(null, "forms", "forms", 2045992350), forms, new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.spec.alpha.rep_STAR_ = function cljs$spec$alpha$rep_STAR_(p1, p2, ret, splice, form) {
  if (cljs.core.truth_(p1)) {
    var r = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), new cljs.core.Keyword(null, "p2", "p2", 905500641), p2, new cljs.core.Keyword(null, "splice", "splice", 449588165), splice, new cljs.core.Keyword(null, "forms", "forms", 2045992350), form, new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.random_uuid.call(null)], null);
    if (cljs.spec.alpha.accept_QMARK_.call(null, p1)) {
      return cljs.core.assoc.call(null, r, new cljs.core.Keyword(null, "p1", "p1", -936759954), p2, new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.conj.call(null, ret, (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(p1)));
    } else {
      return cljs.core.assoc.call(null, r, new cljs.core.Keyword(null, "p1", "p1", -936759954), p1, new cljs.core.Keyword(null, "ret", "ret", -468222814), ret);
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.rep_impl = function cljs$spec$alpha$rep_impl(form, p) {
  return cljs.spec.alpha.rep_STAR_.call(null, p, p, cljs.core.PersistentVector.EMPTY, false, form);
};
cljs.spec.alpha.rep_PLUS_impl = function cljs$spec$alpha$rep_PLUS_impl(form, p) {
  return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, cljs.spec.alpha.rep_STAR_.call(null, p, p, cljs.core.PersistentVector.EMPTY, true, form)], null), new cljs.core.Keyword(null, "forms", "forms", 2045992350), cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, 
  form, null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "*", "cljs.spec.alpha/*", -1238084288, null), null, 1, null), new cljs.core.List(null, form, null, 1, null)))), null, 1, null))))), new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "rep+", "rep+", -281382396), form], null));
};
cljs.spec.alpha.amp_impl = function cljs$spec$alpha$amp_impl(re, re_form, preds, pred_forms) {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), new cljs.core.Keyword(null, "p1", "p1", -936759954), re, new cljs.core.Keyword(null, "amp", "amp", 271690571), re_form, new cljs.core.Keyword(null, "ps", "ps", 292358046), preds, new cljs.core.Keyword(null, "forms", "forms", 2045992350), pred_forms], null);
};
cljs.spec.alpha.filter_alt = function cljs$spec$alpha$filter_alt(ps, ks, forms, f) {
  if (cljs.core.truth_(function() {
    var or__4126__auto__ = ks;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return forms;
    }
  }())) {
    var pks = cljs.core.filter.call(null, function(p1__8888_SHARP_) {
      return f.call(null, cljs.core.first.call(null, p1__8888_SHARP_));
    }, cljs.core.map.call(null, cljs.core.vector, ps, function() {
      var or__4126__auto__ = cljs.core.seq.call(null, ks);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        return cljs.core.repeat.call(null, null);
      }
    }(), function() {
      var or__4126__auto__ = cljs.core.seq.call(null, forms);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        return cljs.core.repeat.call(null, null);
      }
    }()));
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, pks)), cljs.core.truth_(ks) ? cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, pks)) : null, cljs.core.truth_(forms) ? cljs.core.seq.call(null, cljs.core.map.call(null, function(p1__8889_SHARP_) {
      return cljs.core.nth.call(null, p1__8889_SHARP_, 2);
    }, pks)) : null], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.filter.call(null, f, ps)), ks, forms], null);
  }
};
cljs.spec.alpha.alt_STAR_ = function cljs$spec$alpha$alt_STAR_(ps, ks, forms) {
  var vec__8890 = cljs.spec.alpha.filter_alt.call(null, ps, ks, forms, cljs.core.identity);
  var vec__8893 = cljs.core.nth.call(null, vec__8890, 0, null);
  var seq__8894 = cljs.core.seq.call(null, vec__8893);
  var first__8895 = cljs.core.first.call(null, seq__8894);
  var seq__8894__$1 = cljs.core.next.call(null, seq__8894);
  var p1 = first__8895;
  var pr = seq__8894__$1;
  var ps__$1 = vec__8893;
  var vec__8896 = cljs.core.nth.call(null, vec__8890, 1, null);
  var k1 = cljs.core.nth.call(null, vec__8896, 0, null);
  var ks__$1 = vec__8896;
  var forms__$1 = cljs.core.nth.call(null, vec__8890, 2, null);
  if (cljs.core.truth_(ps__$1)) {
    var ret = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), new cljs.core.Keyword(null, "ps", "ps", 292358046), ps__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942), ks__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350), forms__$1], null);
    if (pr == null) {
      if (cljs.core.truth_(k1)) {
        if (cljs.spec.alpha.accept_QMARK_.call(null, p1)) {
          return cljs.spec.alpha.accept.call(null, cljs.spec.alpha.tagged_ret.call(null, k1, (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(p1)));
        } else {
          return ret;
        }
      } else {
        return p1;
      }
    } else {
      return ret;
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.alts = function cljs$spec$alpha$alts(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___8900 = arguments.length;
  var i__4737__auto___8901 = 0;
  while (true) {
    if (i__4737__auto___8901 < len__4736__auto___8900) {
      args__4742__auto__.push(arguments[i__4737__auto___8901]);
      var G__8902 = i__4737__auto___8901 + 1;
      i__4737__auto___8901 = G__8902;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.spec.alpha.alts.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.spec.alpha.alts.cljs$core$IFn$_invoke$arity$variadic = function(ps) {
  return cljs.spec.alpha.alt_STAR_.call(null, ps, null, null);
};
cljs.spec.alpha.alts.cljs$lang$maxFixedArity = 0;
cljs.spec.alpha.alts.cljs$lang$applyTo = function(seq8899) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8899));
};
cljs.spec.alpha.alt2 = function cljs$spec$alpha$alt2(p1, p2) {
  if (cljs.core.truth_(function() {
    var and__4115__auto__ = p1;
    if (cljs.core.truth_(and__4115__auto__)) {
      return p2;
    } else {
      return and__4115__auto__;
    }
  }())) {
    return cljs.spec.alpha.alts.call(null, p1, p2);
  } else {
    var or__4126__auto__ = p1;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return p2;
    }
  }
};
cljs.spec.alpha.alt_impl = function cljs$spec$alpha$alt_impl(ks, ps, forms) {
  return cljs.core.assoc.call(null, cljs.spec.alpha.alt_STAR_.call(null, ps, ks, forms), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.random_uuid.call(null));
};
cljs.spec.alpha.maybe_impl = function cljs$spec$alpha$maybe_impl(p, form) {
  return cljs.core.assoc.call(null, cljs.spec.alpha.alt_STAR_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, cljs.spec.alpha.accept.call(null, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))], null), null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [form, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950)], null)), new cljs.core.Keyword(null, 
  "maybe", "maybe", -314397560), form);
};
cljs.spec.alpha.noret_QMARK_ = function cljs$spec$alpha$noret_QMARK_(p1, pret) {
  var or__4126__auto__ = cljs.core._EQ_.call(null, pret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950));
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    var or__4126__auto____$1 = function() {
      var and__4115__auto__ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), null], null), null)).call(null, (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.reg_resolve_BANG_.call(null, p1)));
      if (cljs.core.truth_(and__4115__auto__)) {
        return cljs.core.empty_QMARK_.call(null, pret);
      } else {
        return and__4115__auto__;
      }
    }();
    if (cljs.core.truth_(or__4126__auto____$1)) {
      return or__4126__auto____$1;
    } else {
      return null;
    }
  }
};
cljs.spec.alpha.accept_nil_QMARK_ = function cljs$spec$alpha$accept_nil_QMARK_(p) {
  var map__8903 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__8903__$1 = (!(map__8903 == null) ? map__8903.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8903.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8903) : map__8903;
  var p__$1 = map__8903__$1;
  var op = cljs.core.get.call(null, map__8903__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var ps = cljs.core.get.call(null, map__8903__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var p1 = cljs.core.get.call(null, map__8903__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var p2 = cljs.core.get.call(null, map__8903__$1, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  var forms = cljs.core.get.call(null, map__8903__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var G__8905 = op;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__8905)) {
    return true;
  } else {
    if (cljs.core._EQ_.call(null, null, G__8905)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__8905)) {
        var and__4115__auto__ = cljs.spec.alpha.accept_nil_QMARK_.call(null, p1);
        if (cljs.core.truth_(and__4115__auto__)) {
          var ret = cljs.spec.alpha.and_preds.call(null, cljs.spec.alpha.preturn.call(null, p1), ps, cljs.core.next.call(null, forms));
          return !cljs.spec.alpha.invalid_QMARK_.call(null, ret);
        } else {
          return and__4115__auto__;
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__8905)) {
          var or__4126__auto__ = p1 === p2;
          if (or__4126__auto__) {
            return or__4126__auto__;
          } else {
            return cljs.spec.alpha.accept_nil_QMARK_.call(null, p1);
          }
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__8905)) {
            return cljs.core.every_QMARK_.call(null, cljs.spec.alpha.accept_nil_QMARK_, ps);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__8905)) {
              return cljs.core.some.call(null, cljs.spec.alpha.accept_nil_QMARK_, ps);
            } else {
              throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__8905)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.spec.alpha.preturn = function cljs$spec$alpha$preturn(p) {
  var map__8906 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__8906__$1 = (!(map__8906 == null) ? map__8906.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8906.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8906) : map__8906;
  var p__$1 = map__8906__$1;
  var vec__8907 = cljs.core.get.call(null, map__8906__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var seq__8908 = cljs.core.seq.call(null, vec__8907);
  var first__8909 = cljs.core.first.call(null, seq__8908);
  var seq__8908__$1 = cljs.core.next.call(null, seq__8908);
  var p0 = first__8909;
  var pr = seq__8908__$1;
  var ps = vec__8907;
  var vec__8910 = cljs.core.get.call(null, map__8906__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var k = cljs.core.nth.call(null, vec__8910, 0, null);
  var ks = vec__8910;
  var op = cljs.core.get.call(null, map__8906__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var p1 = cljs.core.get.call(null, map__8906__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var ret = cljs.core.get.call(null, map__8906__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var forms = cljs.core.get.call(null, map__8906__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var G__8914 = op;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__8914)) {
    return ret;
  } else {
    if (cljs.core._EQ_.call(null, null, G__8914)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__8914)) {
        var pret = cljs.spec.alpha.preturn.call(null, p1);
        if (cljs.core.truth_(cljs.spec.alpha.noret_QMARK_.call(null, p1, pret))) {
          return new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950);
        } else {
          return cljs.spec.alpha.and_preds.call(null, pret, ps, forms);
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__8914)) {
          return cljs.spec.alpha.add_ret.call(null, p1, ret, k);
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__8914)) {
            return cljs.spec.alpha.add_ret.call(null, p0, ret, k);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__8914)) {
              var vec__8915 = cljs.spec.alpha.filter_alt.call(null, ps, ks, forms, cljs.spec.alpha.accept_nil_QMARK_);
              var vec__8918 = cljs.core.nth.call(null, vec__8915, 0, null);
              var p0__$1 = cljs.core.nth.call(null, vec__8918, 0, null);
              var vec__8921 = cljs.core.nth.call(null, vec__8915, 1, null);
              var k0 = cljs.core.nth.call(null, vec__8921, 0, null);
              var r = p0__$1 == null ? new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950) : cljs.spec.alpha.preturn.call(null, p0__$1);
              if (cljs.core.truth_(k0)) {
                return cljs.spec.alpha.tagged_ret.call(null, k0, r);
              } else {
                return r;
              }
            } else {
              throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__8914)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.spec.alpha.op_unform = function cljs$spec$alpha$op_unform(p, x) {
  var map__8928 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__8928__$1 = (!(map__8928 == null) ? map__8928.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8928.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8928) : map__8928;
  var p__$1 = map__8928__$1;
  var vec__8929 = cljs.core.get.call(null, map__8928__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var seq__8930 = cljs.core.seq.call(null, vec__8929);
  var first__8931 = cljs.core.first.call(null, seq__8930);
  var seq__8930__$1 = cljs.core.next.call(null, seq__8930);
  var p0 = first__8931;
  var pr = seq__8930__$1;
  var ps = vec__8929;
  var vec__8932 = cljs.core.get.call(null, map__8928__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var k = cljs.core.nth.call(null, vec__8932, 0, null);
  var ks = vec__8932;
  var op = cljs.core.get.call(null, map__8928__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var p1 = cljs.core.get.call(null, map__8928__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var ret = cljs.core.get.call(null, map__8928__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var forms = cljs.core.get.call(null, map__8928__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var rep_PLUS_ = cljs.core.get.call(null, map__8928__$1, new cljs.core.Keyword(null, "rep+", "rep+", -281382396));
  var maybe = cljs.core.get.call(null, map__8928__$1, new cljs.core.Keyword(null, "maybe", "maybe", -314397560));
  var kps = cljs.core.zipmap.call(null, ks, ps);
  var G__8936 = op;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__8936)) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ret], null);
  } else {
    if (cljs.core._EQ_.call(null, null, G__8936)) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.unform.call(null, p__$1, x)], null);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__8936)) {
        var px = cljs.core.reduce.call(null, function(p1__8925_SHARP_, p2__8924_SHARP_) {
          return cljs.spec.alpha.unform.call(null, p2__8924_SHARP_, p1__8925_SHARP_);
        }, x, cljs.core.reverse.call(null, ps));
        return cljs.spec.alpha.op_unform.call(null, p1, px);
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__8936)) {
          return cljs.core.mapcat.call(null, function(p1__8926_SHARP_) {
            return cljs.spec.alpha.op_unform.call(null, p1, p1__8926_SHARP_);
          }, x);
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__8936)) {
            if (cljs.core.truth_(rep_PLUS_)) {
              return cljs.core.mapcat.call(null, function(p1__8927_SHARP_) {
                return cljs.spec.alpha.op_unform.call(null, p0, p1__8927_SHARP_);
              }, x);
            } else {
              return cljs.core.mapcat.call(null, function(k__$1) {
                if (cljs.core.contains_QMARK_.call(null, x, k__$1)) {
                  return cljs.spec.alpha.op_unform.call(null, kps.call(null, k__$1), cljs.core.get.call(null, x, k__$1));
                } else {
                  return null;
                }
              }, ks);
            }
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__8936)) {
              if (cljs.core.truth_(maybe)) {
                return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.unform.call(null, p0, x)], null);
              } else {
                var vec__8937 = x;
                var k__$1 = cljs.core.nth.call(null, vec__8937, 0, null);
                var v = cljs.core.nth.call(null, vec__8937, 1, null);
                return cljs.spec.alpha.op_unform.call(null, kps.call(null, k__$1), v);
              }
            } else {
              throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__8936)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.spec.alpha.add_ret = function cljs$spec$alpha$add_ret(p, r, k) {
  var map__8940 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__8940__$1 = (!(map__8940 == null) ? map__8940.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8940.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8940) : map__8940;
  var p__$1 = map__8940__$1;
  var op = cljs.core.get.call(null, map__8940__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var ps = cljs.core.get.call(null, map__8940__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var splice = cljs.core.get.call(null, map__8940__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var prop = function() {
    var ret = cljs.spec.alpha.preturn.call(null, p__$1);
    if (cljs.core.empty_QMARK_.call(null, ret)) {
      return r;
    } else {
      return (cljs.core.truth_(splice) ? cljs.core.into : cljs.core.conj).call(null, r, cljs.core.truth_(k) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, ret]) : ret);
    }
  };
  var G__8942 = op;
  if (cljs.core._EQ_.call(null, null, G__8942)) {
    return r;
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__8942)) {
      var ret = cljs.spec.alpha.preturn.call(null, p__$1);
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
        return r;
      } else {
        return cljs.core.conj.call(null, r, cljs.core.truth_(k) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, ret]) : ret);
      }
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__8942)) {
        var ret = cljs.spec.alpha.preturn.call(null, p__$1);
        if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
          return r;
        } else {
          return cljs.core.conj.call(null, r, cljs.core.truth_(k) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, ret]) : ret);
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__8942)) {
          var ret = cljs.spec.alpha.preturn.call(null, p__$1);
          if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
            return r;
          } else {
            return cljs.core.conj.call(null, r, cljs.core.truth_(k) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, ret]) : ret);
          }
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__8942)) {
            return prop.call(null);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__8942)) {
              return prop.call(null);
            } else {
              throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__8942)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.spec.alpha.deriv = function cljs$spec$alpha$deriv(p, x) {
  var map__8944 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__8944__$1 = (!(map__8944 == null) ? map__8944.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8944.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8944) : map__8944;
  var p__$1 = map__8944__$1;
  var forms = cljs.core.get.call(null, map__8944__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var p2 = cljs.core.get.call(null, map__8944__$1, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  var vec__8945 = cljs.core.get.call(null, map__8944__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var seq__8946 = cljs.core.seq.call(null, vec__8945);
  var first__8947 = cljs.core.first.call(null, seq__8946);
  var seq__8946__$1 = cljs.core.next.call(null, seq__8946);
  var p0 = first__8947;
  var pr = seq__8946__$1;
  var ps = vec__8945;
  var ret = cljs.core.get.call(null, map__8944__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var op = cljs.core.get.call(null, map__8944__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var splice = cljs.core.get.call(null, map__8944__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var vec__8948 = cljs.core.get.call(null, map__8944__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var seq__8949 = cljs.core.seq.call(null, vec__8948);
  var first__8950 = cljs.core.first.call(null, seq__8949);
  var seq__8949__$1 = cljs.core.next.call(null, seq__8949);
  var k0 = first__8950;
  var kr = seq__8949__$1;
  var ks = vec__8948;
  var amp = cljs.core.get.call(null, map__8944__$1, new cljs.core.Keyword(null, "amp", "amp", 271690571));
  var p1 = cljs.core.get.call(null, map__8944__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  if (cljs.core.truth_(p__$1)) {
    var G__8952 = op;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__8952)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, null, G__8952)) {
        var ret__$1 = cljs.spec.alpha.dt.call(null, p__$1, x, p__$1);
        if (cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1)) {
          return null;
        } else {
          return cljs.spec.alpha.accept.call(null, ret__$1);
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__8952)) {
          var temp__5720__auto__ = cljs.spec.alpha.deriv.call(null, p1, x);
          if (cljs.core.truth_(temp__5720__auto__)) {
            var p1__$1 = temp__5720__auto__;
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(p1__$1))) {
              var ret__$1 = cljs.spec.alpha.and_preds.call(null, cljs.spec.alpha.preturn.call(null, p1__$1), ps, cljs.core.next.call(null, forms));
              if (cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1)) {
                return null;
              } else {
                return cljs.spec.alpha.accept.call(null, ret__$1);
              }
            } else {
              return cljs.spec.alpha.amp_impl.call(null, p1__$1, amp, ps, forms);
            }
          } else {
            return null;
          }
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__8952)) {
            return cljs.spec.alpha.alt2.call(null, cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), cljs.core.cons.call(null, cljs.spec.alpha.deriv.call(null, p0, x), pr), new cljs.core.Keyword(null, "ks", "ks", 1900203942), ks, new cljs.core.Keyword(null, "forms", "forms", 2045992350), forms, new cljs.core.Keyword(null, "ret", "ret", -468222814), ret], null)), cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, 
            p0)) ? cljs.spec.alpha.deriv.call(null, cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), pr, new cljs.core.Keyword(null, "ks", "ks", 1900203942), kr, new cljs.core.Keyword(null, "forms", "forms", 2045992350), cljs.core.next.call(null, forms), new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.spec.alpha.add_ret.call(null, p0, ret, k0)], null)), x) : null);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__8952)) {
              return cljs.spec.alpha.alt_STAR_.call(null, cljs.core.map.call(null, function(p1__8943_SHARP_) {
                return cljs.spec.alpha.deriv.call(null, p1__8943_SHARP_, x);
              }, ps), ks, forms);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__8952)) {
                return cljs.spec.alpha.alt2.call(null, cljs.spec.alpha.rep_STAR_.call(null, cljs.spec.alpha.deriv.call(null, p1, x), p2, ret, splice, forms), cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, p1)) ? cljs.spec.alpha.deriv.call(null, cljs.spec.alpha.rep_STAR_.call(null, p2, p2, cljs.spec.alpha.add_ret.call(null, p1, ret, null), splice, forms), x) : null);
              } else {
                throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__8952)].join(""));
              }
            }
          }
        }
      }
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.op_describe = function cljs$spec$alpha$op_describe(p) {
  var map__8953 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__8953__$1 = (!(map__8953 == null) ? map__8953.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8953.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8953) : map__8953;
  var p__$1 = map__8953__$1;
  var ps = cljs.core.get.call(null, map__8953__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var forms = cljs.core.get.call(null, map__8953__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var rep_PLUS_ = cljs.core.get.call(null, map__8953__$1, new cljs.core.Keyword(null, "rep+", "rep+", -281382396));
  var op = cljs.core.get.call(null, map__8953__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var splice = cljs.core.get.call(null, map__8953__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var ks = cljs.core.get.call(null, map__8953__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var maybe = cljs.core.get.call(null, map__8953__$1, new cljs.core.Keyword(null, "maybe", "maybe", -314397560));
  var amp = cljs.core.get.call(null, map__8953__$1, new cljs.core.Keyword(null, "amp", "amp", 271690571));
  var p1 = cljs.core.get.call(null, map__8953__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  if (cljs.core.truth_(p__$1)) {
    var G__8955 = op;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__8955)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, null, G__8955)) {
        return p__$1;
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__8955)) {
          return cljs.core.list_STAR_.call(null, new cljs.core.Symbol("cljs.spec.alpha", "\x26", "cljs.spec.alpha/\x26", 1635809823, null), amp, forms);
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__8955)) {
            if (cljs.core.truth_(rep_PLUS_)) {
              return new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "+", "cljs.spec.alpha/+", 2101263265, null), new cljs.core.List(null, rep_PLUS_, null, 1, null), 2, null);
            } else {
              return cljs.core.cons.call(null, new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), cljs.core.mapcat.call(null, cljs.core.vector, function() {
                var or__4126__auto__ = cljs.core.seq.call(null, ks);
                if (or__4126__auto__) {
                  return or__4126__auto__;
                } else {
                  return cljs.core.repeat.call(null, new cljs.core.Keyword(null, "_", "_", 1453416199));
                }
              }(), forms));
            }
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__8955)) {
              if (cljs.core.truth_(maybe)) {
                return new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "?", "cljs.spec.alpha/?", 1605136319, null), new cljs.core.List(null, maybe, null, 1, null), 2, null);
              } else {
                return cljs.core.cons.call(null, new cljs.core.Symbol("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", -2130750332, null), cljs.core.mapcat.call(null, cljs.core.vector, ks, forms));
              }
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__8955)) {
                return new cljs.core.List(null, cljs.core.truth_(splice) ? new cljs.core.Symbol("cljs.spec.alpha", "+", "cljs.spec.alpha/+", 2101263265, null) : new cljs.core.Symbol("cljs.spec.alpha", "*", "cljs.spec.alpha/*", -1238084288, null), new cljs.core.List(null, forms, null, 1, null), 2, null);
              } else {
                throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__8955)].join(""));
              }
            }
          }
        }
      }
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.op_explain = function cljs$spec$alpha$op_explain(form, p, path, via, in$, input) {
  var vec__8956 = input;
  var x = cljs.core.nth.call(null, vec__8956, 0, null);
  var input__$1 = vec__8956;
  var map__8959 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__8959__$1 = (!(map__8959 == null) ? map__8959.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8959.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8959) : map__8959;
  var p__$1 = map__8959__$1;
  var op = cljs.core.get.call(null, map__8959__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var ps = cljs.core.get.call(null, map__8959__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var ks = cljs.core.get.call(null, map__8959__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var forms = cljs.core.get.call(null, map__8959__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var splice = cljs.core.get.call(null, map__8959__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var p1 = cljs.core.get.call(null, map__8959__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var p2 = cljs.core.get.call(null, map__8959__$1, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  var via__$1 = function() {
    var temp__5718__auto__ = cljs.spec.alpha.spec_name.call(null, p__$1);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var name = temp__5718__auto__;
      return cljs.core.conj.call(null, via, name);
    } else {
      return via;
    }
  }();
  var insufficient = function(path__$1, form__$1) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path__$1, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "Insufficient input", new cljs.core.Keyword(null, "pred", "pred", 1927423397), form__$1, new cljs.core.Keyword(null, "val", "val", 128701612), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "via", "via", -1904457336), via__$1, new cljs.core.Keyword(null, 
    "in", "in", -1531184865), in$], null)], null);
  };
  if (cljs.core.truth_(p__$1)) {
    var G__8961 = op;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__8961)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, null, G__8961)) {
        if (cljs.core.empty_QMARK_.call(null, input__$1)) {
          return insufficient.call(null, path, form);
        } else {
          return cljs.spec.alpha.explain_1.call(null, form, p__$1, path, via__$1, in$, x);
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__8961)) {
          if (cljs.core.empty_QMARK_.call(null, input__$1)) {
            if (cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, p1))) {
              return cljs.spec.alpha.explain_pred_list.call(null, forms, ps, path, via__$1, in$, cljs.spec.alpha.preturn.call(null, p1));
            } else {
              return insufficient.call(null, path, (new cljs.core.Keyword(null, "amp", "amp", 271690571)).cljs$core$IFn$_invoke$arity$1(p__$1));
            }
          } else {
            var temp__5718__auto__ = cljs.spec.alpha.deriv.call(null, p1, x);
            if (cljs.core.truth_(temp__5718__auto__)) {
              var p1__$1 = temp__5718__auto__;
              return cljs.spec.alpha.explain_pred_list.call(null, forms, ps, path, via__$1, in$, cljs.spec.alpha.preturn.call(null, p1__$1));
            } else {
              return cljs.spec.alpha.op_explain.call(null, (new cljs.core.Keyword(null, "amp", "amp", 271690571)).cljs$core$IFn$_invoke$arity$1(p__$1), p1, path, via__$1, in$, input__$1);
            }
          }
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__8961)) {
            var pkfs = cljs.core.map.call(null, cljs.core.vector, ps, function() {
              var or__4126__auto__ = cljs.core.seq.call(null, ks);
              if (or__4126__auto__) {
                return or__4126__auto__;
              } else {
                return cljs.core.repeat.call(null, null);
              }
            }(), function() {
              var or__4126__auto__ = cljs.core.seq.call(null, forms);
              if (or__4126__auto__) {
                return or__4126__auto__;
              } else {
                return cljs.core.repeat.call(null, null);
              }
            }());
            var vec__8962 = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, pkfs)) ? cljs.core.first.call(null, pkfs) : cljs.core.first.call(null, cljs.core.remove.call(null, function(p__8965) {
              var vec__8966 = p__8965;
              var p__$2 = cljs.core.nth.call(null, vec__8966, 0, null);
              return cljs.spec.alpha.accept_nil_QMARK_.call(null, p__$2);
            }, pkfs));
            var pred = cljs.core.nth.call(null, vec__8962, 0, null);
            var k = cljs.core.nth.call(null, vec__8962, 1, null);
            var form__$1 = cljs.core.nth.call(null, vec__8962, 2, null);
            var path__$1 = cljs.core.truth_(k) ? cljs.core.conj.call(null, path, k) : path;
            var form__$2 = function() {
              var or__4126__auto__ = form__$1;
              if (cljs.core.truth_(or__4126__auto__)) {
                return or__4126__auto__;
              } else {
                return cljs.spec.alpha.op_describe.call(null, pred);
              }
            }();
            if (cljs.core.empty_QMARK_.call(null, input__$1) && cljs.core.not.call(null, pred)) {
              return insufficient.call(null, path__$1, form__$2);
            } else {
              return cljs.spec.alpha.op_explain.call(null, form__$2, pred, path__$1, via__$1, in$, input__$1);
            }
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__8961)) {
              if (cljs.core.empty_QMARK_.call(null, input__$1)) {
                return insufficient.call(null, path, cljs.spec.alpha.op_describe.call(null, p__$1));
              } else {
                return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(k, form__$1, pred) {
                  return cljs.spec.alpha.op_explain.call(null, function() {
                    var or__4126__auto__ = form__$1;
                    if (cljs.core.truth_(or__4126__auto__)) {
                      return or__4126__auto__;
                    } else {
                      return cljs.spec.alpha.op_describe.call(null, pred);
                    }
                  }(), pred, cljs.core.truth_(k) ? cljs.core.conj.call(null, path, k) : path, via__$1, in$, input__$1);
                }, function() {
                  var or__4126__auto__ = cljs.core.seq.call(null, ks);
                  if (or__4126__auto__) {
                    return or__4126__auto__;
                  } else {
                    return cljs.core.repeat.call(null, null);
                  }
                }(), function() {
                  var or__4126__auto__ = cljs.core.seq.call(null, forms);
                  if (or__4126__auto__) {
                    return or__4126__auto__;
                  } else {
                    return cljs.core.repeat.call(null, null);
                  }
                }(), ps));
              }
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__8961)) {
                return cljs.spec.alpha.op_explain.call(null, p1 === p2 ? forms : cljs.spec.alpha.op_describe.call(null, p1), p1, path, via__$1, in$, input__$1);
              } else {
                throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__8961)].join(""));
              }
            }
          }
        }
      }
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.re_gen = function cljs$spec$alpha$re_gen(p, overrides, path, rmap, f) {
  var origp = p;
  var map__8970 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__8970__$1 = (!(map__8970 == null) ? map__8970.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8970.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8970) : map__8970;
  var p__$1 = map__8970__$1;
  var ps = cljs.core.get.call(null, map__8970__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var forms = cljs.core.get.call(null, map__8970__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var p2 = cljs.core.get.call(null, map__8970__$1, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  var ret = cljs.core.get.call(null, map__8970__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var gfn = cljs.core.get.call(null, map__8970__$1, new cljs.core.Keyword("cljs.spec.alpha", "gfn", "cljs.spec.alpha/gfn", -593120375));
  var op = cljs.core.get.call(null, map__8970__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var splice = cljs.core.get.call(null, map__8970__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var ks = cljs.core.get.call(null, map__8970__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var p1 = cljs.core.get.call(null, map__8970__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var id = cljs.core.get.call(null, map__8970__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var rmap__$1 = cljs.core.truth_(id) ? cljs.spec.alpha.inck.call(null, rmap, id) : rmap;
  var ggens = function(ps__$1, ks__$1, forms__$1) {
    var gen = function(p__$2, k, f__$1) {
      if (cljs.core.truth_(function() {
        var and__4115__auto__ = rmap__$1;
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = id;
          if (cljs.core.truth_(and__4115__auto____$1)) {
            var and__4115__auto____$2 = k;
            if (cljs.core.truth_(and__4115__auto____$2)) {
              return cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, id, path, k);
            } else {
              return and__4115__auto____$2;
            }
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }())) {
        return null;
      } else {
        if (cljs.core.truth_(id)) {
          return cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function() {
            return cljs.spec.alpha.re_gen.call(null, p__$2, overrides, cljs.core.truth_(k) ? cljs.core.conj.call(null, path, k) : path, rmap__$1, function() {
              var or__4126__auto__ = f__$1;
              if (cljs.core.truth_(or__4126__auto__)) {
                return or__4126__auto__;
              } else {
                return p__$2;
              }
            }());
          }, null));
        } else {
          return cljs.spec.alpha.re_gen.call(null, p__$2, overrides, cljs.core.truth_(k) ? cljs.core.conj.call(null, path, k) : path, rmap__$1, function() {
            var or__4126__auto__ = f__$1;
            if (cljs.core.truth_(or__4126__auto__)) {
              return or__4126__auto__;
            } else {
              return p__$2;
            }
          }());
        }
      }
    };
    return cljs.core.map.call(null, gen, ps__$1, function() {
      var or__4126__auto__ = cljs.core.seq.call(null, ks__$1);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        return cljs.core.repeat.call(null, null);
      }
    }(), function() {
      var or__4126__auto__ = cljs.core.seq.call(null, forms__$1);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        return cljs.core.repeat.call(null, null);
      }
    }());
  };
  var or__4126__auto__ = function() {
    var temp__5720__auto__ = function() {
      var or__4126__auto__ = cljs.core.get.call(null, overrides, cljs.spec.alpha.spec_name.call(null, origp));
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = cljs.core.get.call(null, overrides, cljs.spec.alpha.spec_name.call(null, p__$1));
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          return cljs.core.get.call(null, overrides, path);
        }
      }
    }();
    if (cljs.core.truth_(temp__5720__auto__)) {
      var gfn__$1 = temp__5720__auto__;
      var G__8973 = op;
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "accept", "accept", 1874130431), G__8973)) {
        return cljs.spec.gen.alpha.fmap.call(null, cljs.core.vector, gfn__$1.call(null));
      } else {
        if (cljs.core._EQ_.call(null, null, G__8973)) {
          return cljs.spec.gen.alpha.fmap.call(null, cljs.core.vector, gfn__$1.call(null));
        } else {
          return gfn__$1.call(null);
        }
      }
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    var or__4126__auto____$1 = cljs.core.truth_(gfn) ? gfn.call(null) : null;
    if (cljs.core.truth_(or__4126__auto____$1)) {
      return or__4126__auto____$1;
    } else {
      if (cljs.core.truth_(p__$1)) {
        var G__8974 = op;
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__8974)) {
          if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
            return cljs.spec.gen.alpha.return$.call(null, cljs.core.PersistentVector.EMPTY);
          } else {
            return cljs.spec.gen.alpha.return$.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ret], null));
          }
        } else {
          if (cljs.core._EQ_.call(null, null, G__8974)) {
            var temp__5720__auto__ = cljs.spec.alpha.gensub.call(null, p__$1, overrides, path, rmap__$1, f);
            if (cljs.core.truth_(temp__5720__auto__)) {
              var g = temp__5720__auto__;
              return cljs.spec.gen.alpha.fmap.call(null, cljs.core.vector, g);
            } else {
              return null;
            }
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__8974)) {
              return cljs.spec.alpha.re_gen.call(null, p1, overrides, path, rmap__$1, cljs.spec.alpha.op_describe.call(null, p1));
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__8974)) {
                var gens = ggens.call(null, ps, ks, forms);
                if (cljs.core.every_QMARK_.call(null, cljs.core.identity, gens)) {
                  return cljs.core.apply.call(null, cljs.spec.gen.alpha.cat, gens);
                } else {
                  return null;
                }
              } else {
                if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__8974)) {
                  var gens = cljs.core.remove.call(null, cljs.core.nil_QMARK_, ggens.call(null, ps, ks, forms));
                  if (cljs.core.empty_QMARK_.call(null, gens)) {
                    return null;
                  } else {
                    return cljs.spec.gen.alpha.one_of.call(null, gens);
                  }
                } else {
                  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__8974)) {
                    if (cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, id, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [id], null), id)) {
                      return cljs.spec.gen.alpha.return$.call(null, cljs.core.PersistentVector.EMPTY);
                    } else {
                      var temp__5720__auto__ = cljs.spec.alpha.re_gen.call(null, p2, overrides, path, rmap__$1, forms);
                      if (cljs.core.truth_(temp__5720__auto__)) {
                        var g = temp__5720__auto__;
                        return cljs.spec.gen.alpha.fmap.call(null, function(p1__8969_SHARP_) {
                          return cljs.core.apply.call(null, cljs.core.concat, p1__8969_SHARP_);
                        }, cljs.spec.gen.alpha.vector.call(null, g));
                      } else {
                        return null;
                      }
                    }
                  } else {
                    throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__8974)].join(""));
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.spec.alpha.re_conform = function cljs$spec$alpha$re_conform(p, p__8975) {
  while (true) {
    var vec__8976 = p__8975;
    var seq__8977 = cljs.core.seq.call(null, vec__8976);
    var first__8978 = cljs.core.first.call(null, seq__8977);
    var seq__8977__$1 = cljs.core.next.call(null, seq__8977);
    var x = first__8978;
    var xs = seq__8977__$1;
    var data = vec__8976;
    if (cljs.core.empty_QMARK_.call(null, data)) {
      if (cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, p))) {
        var ret = cljs.spec.alpha.preturn.call(null, p);
        if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
          return null;
        } else {
          return ret;
        }
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    } else {
      var temp__5718__auto__ = cljs.spec.alpha.deriv.call(null, p, x);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var dp = temp__5718__auto__;
        var G__8979 = dp;
        var G__8980 = xs;
        p = G__8979;
        p__8975 = G__8980;
        continue;
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    }
    break;
  }
};
cljs.spec.alpha.re_explain = function cljs$spec$alpha$re_explain(path, via, in$, re, input) {
  var p = re;
  var G__8984 = input;
  var vec__8985 = G__8984;
  var seq__8986 = cljs.core.seq.call(null, vec__8985);
  var first__8987 = cljs.core.first.call(null, seq__8986);
  var seq__8986__$1 = cljs.core.next.call(null, seq__8986);
  var x = first__8987;
  var xs = seq__8986__$1;
  var data = vec__8985;
  var i = 0;
  var p__$1 = p;
  var G__8984__$1 = G__8984;
  var i__$1 = i;
  while (true) {
    var p__$2 = p__$1;
    var vec__8988 = G__8984__$1;
    var seq__8989 = cljs.core.seq.call(null, vec__8988);
    var first__8990 = cljs.core.first.call(null, seq__8989);
    var seq__8989__$1 = cljs.core.next.call(null, seq__8989);
    var x__$1 = first__8990;
    var xs__$1 = seq__8989__$1;
    var data__$1 = vec__8988;
    var i__$2 = i__$1;
    if (cljs.core.empty_QMARK_.call(null, data__$1)) {
      if (cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, p__$2))) {
        return null;
      } else {
        return cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, p__$2), p__$2, path, via, in$, null);
      }
    } else {
      var temp__5718__auto__ = cljs.spec.alpha.deriv.call(null, p__$2, x__$1);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var dp = temp__5718__auto__;
        var G__8991 = dp;
        var G__8992 = xs__$1;
        var G__8993 = i__$2 + 1;
        p__$1 = G__8991;
        G__8984__$1 = G__8992;
        i__$1 = G__8993;
        continue;
      } else {
        if (cljs.spec.alpha.accept_QMARK_.call(null, p__$2)) {
          if (cljs.core._EQ_.call(null, (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(p__$2), new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623))) {
            return cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, p__$2), p__$2, path, via, cljs.core.conj.call(null, in$, i__$2), cljs.core.seq.call(null, data__$1));
          } else {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "Extra input", new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.spec.alpha.op_describe.call(null, re), new cljs.core.Keyword(null, "val", "val", 128701612), data__$1, new cljs.core.Keyword(null, "via", "via", -1904457336), 
            via, new cljs.core.Keyword(null, "in", "in", -1531184865), cljs.core.conj.call(null, in$, i__$2)], null)], null);
          }
        } else {
          var or__4126__auto__ = cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, p__$2), p__$2, path, via, cljs.core.conj.call(null, in$, i__$2), cljs.core.seq.call(null, data__$1));
          if (cljs.core.truth_(or__4126__auto__)) {
            return or__4126__auto__;
          } else {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "Extra input", new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.spec.alpha.op_describe.call(null, p__$2), new cljs.core.Keyword(null, "val", "val", 128701612), data__$1, new cljs.core.Keyword(null, "via", "via", -1904457336), 
            via, new cljs.core.Keyword(null, "in", "in", -1531184865), cljs.core.conj.call(null, in$, i__$2)], null)], null);
          }
        }
      }
    }
    break;
  }
};
cljs.spec.alpha.regex_spec_impl = function cljs$spec$alpha$regex_spec_impl(re, gfn) {
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha8994 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha8994 = function(re, gfn, meta8995) {
      this.re = re;
      this.gfn = gfn;
      this.meta8995 = meta8995;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8994.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8996, meta8995__$1) {
      var self__ = this;
      var _8996__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha8994(self__.re, self__.gfn, meta8995__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8994.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8996) {
      var self__ = this;
      var _8996__$1 = this;
      return self__.meta8995;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8994.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8994.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8994.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha8994.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha8994.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      if (x == null || cljs.core.sequential_QMARK_.call(null, x)) {
        return cljs.spec.alpha.re_conform.call(null, self__.re, cljs.core.seq.call(null, x));
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8994.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.op_unform.call(null, self__.re, x);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8994.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
      var self__ = this;
      var ___$1 = this;
      if (x == null || cljs.core.sequential_QMARK_.call(null, x)) {
        return cljs.spec.alpha.re_explain.call(null, path, via, in$, self__.re, cljs.core.seq.call(null, x));
      } else {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), null, 1, null), new cljs.core.List(null, cljs.core.vec.call(null, 
        cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null))))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "or", "cljs.core/or", 1201033885, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
        cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "nil?", "cljs.core/nil?", 945071861, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "sequential?", "cljs.core/sequential?", 1777854658, null), null, 
        1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null)))), null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8994.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        return cljs.spec.alpha.re_gen.call(null, self__.re, overrides, path, rmap, cljs.spec.alpha.op_describe.call(null, self__.re));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha8994.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.regex_spec_impl.call(null, self__.re, gfn__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8994.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.op_describe.call(null, self__.re);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8994.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "re", "re", 1869207729, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "meta8995", "meta8995", 28585731, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha8994.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha8994.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha8994";
    cljs.spec.alpha.t_cljs$spec$alpha8994.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.spec.alpha/t_cljs$spec$alpha8994");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha8994 = function cljs$spec$alpha$regex_spec_impl_$___GT_t_cljs$spec$alpha8994(re__$1, gfn__$1, meta8995) {
      return new cljs.spec.alpha.t_cljs$spec$alpha8994(re__$1, gfn__$1, meta8995);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha8994(re, gfn, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.call_valid_QMARK_ = function cljs$spec$alpha$call_valid_QMARK_(f, specs, args) {
  var cargs = cljs.spec.alpha.conform.call(null, (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(specs), args);
  if (cljs.spec.alpha.invalid_QMARK_.call(null, cargs)) {
    return null;
  } else {
    var ret = cljs.core.apply.call(null, f, args);
    var cret = cljs.spec.alpha.conform.call(null, (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(specs), ret);
    if (!cljs.spec.alpha.invalid_QMARK_.call(null, cret)) {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(specs))) {
        return cljs.spec.alpha.pvalid_QMARK_.call(null, (new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(specs), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "args", "args", 1315556576), cargs, new cljs.core.Keyword(null, "ret", "ret", -468222814), cret], null));
      } else {
        return true;
      }
    } else {
      return false;
    }
  }
};
cljs.spec.alpha.validate_fn = function cljs$spec$alpha$validate_fn(f, specs, iters) {
  var g = cljs.spec.alpha.gen.call(null, (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(specs));
  var prop = cljs.spec.gen.alpha.for_all_STAR_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [g], null), function(p1__8997_SHARP_) {
    return cljs.spec.alpha.call_valid_QMARK_.call(null, f, specs, p1__8997_SHARP_);
  });
  var ret = cljs.spec.gen.alpha.quick_check.call(null, iters, prop);
  var temp__5718__auto__ = (new cljs.core.Keyword(null, "smallest", "smallest", -152623883)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "shrunk", "shrunk", -2041664412)).cljs$core$IFn$_invoke$arity$1(ret));
  if (cljs.core.truth_(temp__5718__auto__)) {
    var vec__8998 = temp__5718__auto__;
    var smallest = cljs.core.nth.call(null, vec__8998, 0, null);
    return smallest;
  } else {
    return f;
  }
};
cljs.spec.alpha.fspec_impl = function cljs$spec$alpha$fspec_impl(argspec, aform, retspec, rform, fnspec, fform, gfn) {
  var specs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "args", "args", 1315556576), argspec, new cljs.core.Keyword(null, "ret", "ret", -468222814), retspec, new cljs.core.Keyword(null, "fn", "fn", -1175266204), fnspec], null);
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha9001 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha9001 = function(argspec, aform, retspec, rform, fnspec, fform, gfn, specs, meta9002) {
      this.argspec = argspec;
      this.aform = aform;
      this.retspec = retspec;
      this.rform = rform;
      this.fnspec = fnspec;
      this.fform = fform;
      this.gfn = gfn;
      this.specs = specs;
      this.meta9002 = meta9002;
      this.cljs$lang$protocol_mask$partition0$ = 393472;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9003, meta9002__$1) {
      var self__ = this;
      var _9003__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha9001(self__.argspec, self__.aform, self__.retspec, self__.rform, self__.fnspec, self__.fform, self__.gfn, self__.specs, meta9002__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9003) {
      var self__ = this;
      var _9003__$1 = this;
      return self__.meta9002;
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
      var self__ = this;
      var this$__$1 = this;
      return cljs.core.get.call(null, self__.specs, k);
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$core$ILookup$_lookup$arity$3 = function(_, k, not_found) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.get.call(null, self__.specs, k, not_found);
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, f) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.ifn_QMARK_.call(null, f)) {
        if (f === cljs.spec.alpha.validate_fn.call(null, f, self__.specs, cljs.spec.alpha._STAR_fspec_iterations_STAR_)) {
          return f;
        } else {
          return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
        }
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, f) {
      var self__ = this;
      var ___$1 = this;
      return f;
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, f) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.ifn_QMARK_.call(null, f)) {
        var args = cljs.spec.alpha.validate_fn.call(null, f, self__.specs, 100);
        if (f === args) {
          return null;
        } else {
          var ret = function() {
            try {
              return cljs.core.apply.call(null, f, args);
            } catch (e9004) {
              if (e9004 instanceof Error) {
                var t = e9004;
                return t;
              } else {
                throw e9004;
              }
            }
          }();
          if (ret instanceof Error) {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.list(new cljs.core.Symbol(null, "apply", "apply", -1334050276, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null)), new cljs.core.Keyword(null, "val", "val", 128701612), args, new cljs.core.Keyword(null, "reason", 
            "reason", -2070751759), ret.message, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
          } else {
            var cret = cljs.spec.alpha.dt.call(null, self__.retspec, ret, self__.rform);
            if (cljs.spec.alpha.invalid_QMARK_.call(null, cret)) {
              return cljs.spec.alpha.explain_1.call(null, self__.rform, self__.retspec, cljs.core.conj.call(null, path, new cljs.core.Keyword(null, "ret", "ret", -468222814)), via, in$, ret);
            } else {
              if (cljs.core.truth_(self__.fnspec)) {
                var cargs = cljs.spec.alpha.conform.call(null, self__.argspec, args);
                return cljs.spec.alpha.explain_1.call(null, self__.fform, self__.fnspec, cljs.core.conj.call(null, path, new cljs.core.Keyword(null, "fn", "fn", -1175266204)), via, in$, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "args", "args", 1315556576), cargs, new cljs.core.Keyword(null, "ret", "ret", -468222814), cret], null));
              } else {
                return null;
              }
            }
          }
        }
      } else {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Keyword(null, "val", "val", 128701612), f, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], 
        null)], null);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, ___$1, ___$2) {
      var self__ = this;
      var ___$3 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        return cljs.spec.gen.alpha.return$.call(null, function() {
          var G__9013__delegate = function(args) {
            if (cljs.spec.alpha.pvalid_QMARK_.call(null, self__.argspec, args)) {
            } else {
              throw new Error(["Assert failed: ", function() {
                var sb__4667__auto__ = new goog.string.StringBuffer;
                var _STAR_print_newline_STAR__orig_val__9009_9014 = cljs.core._STAR_print_newline_STAR_;
                var _STAR_print_fn_STAR__orig_val__9010_9015 = cljs.core._STAR_print_fn_STAR_;
                var _STAR_print_newline_STAR__temp_val__9011_9016 = true;
                var _STAR_print_fn_STAR__temp_val__9012_9017 = function(x__4668__auto__) {
                  return sb__4667__auto__.append(x__4668__auto__);
                };
                cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__9011_9016;
                cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__9012_9017;
                try {
                  cljs.spec.alpha.explain.call(null, self__.argspec, args);
                } finally {
                  cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__9010_9015;
                  cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__9009_9014;
                }
                return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4667__auto__);
              }(), "\n", "(pvalid? argspec args)"].join(""));
            }
            return cljs.spec.gen.alpha.generate.call(null, cljs.spec.alpha.gen.call(null, self__.retspec, overrides));
          };
          var G__9013 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__9018__i = 0, G__9018__a = new Array(arguments.length - 0);
              while (G__9018__i < G__9018__a.length) {
                G__9018__a[G__9018__i] = arguments[G__9018__i + 0];
                ++G__9018__i;
              }
              args = new cljs.core.IndexedSeq(G__9018__a, 0, null);
            }
            return G__9013__delegate.call(this, args);
          };
          G__9013.cljs$lang$maxFixedArity = 0;
          G__9013.cljs$lang$applyTo = function(arglist__9019) {
            var args = cljs.core.seq(arglist__9019);
            return G__9013__delegate(args);
          };
          G__9013.cljs$core$IFn$_invoke$arity$variadic = G__9013__delegate;
          return G__9013;
        }());
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.fspec_impl.call(null, self__.argspec, self__.aform, self__.retspec, self__.rform, self__.fnspec, self__.fform, gfn__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "fspec", "cljs.spec.alpha/fspec", -1289128341, null), null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "args", "args", 1315556576), null, 1, null), new cljs.core.List(null, self__.aform, null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "ret", "ret", -468222814), null, 1, null), new cljs.core.List(null, 
      self__.rform, null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, 1, null), new cljs.core.List(null, self__.fform, null, 1, null))));
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.getBasis = function() {
      return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "argspec", "argspec", -1207762746, null), new cljs.core.Symbol(null, "aform", "aform", 531303525, null), new cljs.core.Symbol(null, "retspec", "retspec", -920025354, null), new cljs.core.Symbol(null, "rform", "rform", -1420499912, null), new cljs.core.Symbol(null, "fnspec", "fnspec", -1865712406, null), new cljs.core.Symbol(null, "fform", "fform", -176049972, null), new cljs.core.Symbol(null, 
      "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "specs", "specs", -1227865028, null), new cljs.core.Symbol(null, "meta9002", "meta9002", -1704589318, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha9001.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha9001.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha9001";
    cljs.spec.alpha.t_cljs$spec$alpha9001.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.spec.alpha/t_cljs$spec$alpha9001");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha9001 = function cljs$spec$alpha$fspec_impl_$___GT_t_cljs$spec$alpha9001(argspec__$1, aform__$1, retspec__$1, rform__$1, fnspec__$1, fform__$1, gfn__$1, specs__$1, meta9002) {
      return new cljs.spec.alpha.t_cljs$spec$alpha9001(argspec__$1, aform__$1, retspec__$1, rform__$1, fnspec__$1, fform__$1, gfn__$1, specs__$1, meta9002);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha9001(argspec, aform, retspec, rform, fnspec, fform, gfn, specs, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.def_impl.call(null, new cljs.core.Keyword("cljs.spec.alpha", "kvs-\x3emap", "cljs.spec.alpha/kvs-\x3emap", 579713455), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "conformer", "cljs.spec.alpha/conformer", 2140085535, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__9020#", "p1__9020#", -644446475, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", 
"zipmap", "cljs.core/zipmap", -1902130674, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "p1__9020#", "p1__9020#", -644446475, null)), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), new cljs.core.Symbol(null, "p1__9020#", 
"p1__9020#", -644446475, null)))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__9021#", "p1__9021#", 1890370205, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), new cljs.core.Symbol(null, "v", 
"v", 1661996586, null)], null)), new cljs.core.Symbol(null, "p1__9021#", "p1__9021#", 1890370205, null)))), cljs.spec.alpha.spec_impl.call(null, cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "conformer", "cljs.spec.alpha/conformer", 2140085535, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "%", "%", -950237169, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", 
"zipmap", "cljs.core/zipmap", -1902130674, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "%", "%", -950237169, null)), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), new cljs.core.Symbol(null, "%", "%", -950237169, null)))), 
cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "%", "%", -950237169, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), new cljs.core.Symbol(null, "v", 
"v", 1661996586, null)], null)), new cljs.core.Symbol(null, "%", "%", -950237169, null)))), function(p1__9020_SHARP_) {
  return cljs.core.zipmap.call(null, cljs.core.map.call(null, new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), p1__9020_SHARP_), cljs.core.map.call(null, new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), p1__9020_SHARP_));
}, null, true, function(p1__9021_SHARP_) {
  return cljs.core.map.call(null, function(p__9022) {
    var vec__9023 = p__9022;
    var k = cljs.core.nth.call(null, vec__9023, 0, null);
    var v = cljs.core.nth.call(null, vec__9023, 1, null);
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), k, new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), v], null);
  }, p1__9021_SHARP_);
}));
cljs.spec.alpha.nonconforming = function cljs$spec$alpha$nonconforming(spec) {
  var spec__$1 = new cljs.core.Delay(function() {
    return cljs.spec.alpha.specize.call(null, spec);
  }, null);
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha9026 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha9026 = function(spec, meta9027) {
      this.spec = spec;
      this.meta9027 = meta9027;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha9026.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9028, meta9027__$1) {
      var self__ = this;
      var _9028__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha9026(self__.spec, meta9027__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha9026.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9028) {
      var self__ = this;
      var _9028__$1 = this;
      return self__.meta9027;
    };
    cljs.spec.alpha.t_cljs$spec$alpha9026.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha9026.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha9026.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha9026.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha9026.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.spec.alpha.conform_STAR_.call(null, cljs.core.deref.call(null, self__.spec), x);
      if (cljs.spec.alpha.invalid_QMARK_.call(null, ret)) {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      } else {
        return x;
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha9026.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.unform_STAR_.call(null, cljs.core.deref.call(null, self__.spec), x);
    };
    cljs.spec.alpha.t_cljs$spec$alpha9026.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.explain_STAR_.call(null, cljs.core.deref.call(null, self__.spec), path, via, in$, x);
    };
    cljs.spec.alpha.t_cljs$spec$alpha9026.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.gen_STAR_.call(null, cljs.core.deref.call(null, self__.spec), overrides, path, rmap);
    };
    cljs.spec.alpha.t_cljs$spec$alpha9026.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.nonconforming.call(null, cljs.spec.alpha.with_gen_STAR_.call(null, cljs.core.deref.call(null, self__.spec), gfn));
    };
    cljs.spec.alpha.t_cljs$spec$alpha9026.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "nonconforming", "cljs.spec.alpha/nonconforming", -1009218508, null), null, 1, null), new cljs.core.List(null, cljs.spec.alpha.describe_STAR_.call(null, cljs.core.deref.call(null, self__.spec)), null, 1, null))));
    };
    cljs.spec.alpha.t_cljs$spec$alpha9026.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "spec", "spec", 1988051928, null), new cljs.core.Symbol(null, "meta9027", "meta9027", -1333996395, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha9026.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha9026.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha9026";
    cljs.spec.alpha.t_cljs$spec$alpha9026.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.spec.alpha/t_cljs$spec$alpha9026");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha9026 = function cljs$spec$alpha$nonconforming_$___GT_t_cljs$spec$alpha9026(spec__$2, meta9027) {
      return new cljs.spec.alpha.t_cljs$spec$alpha9026(spec__$2, meta9027);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha9026(spec__$1, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.nilable_impl = function cljs$spec$alpha$nilable_impl(form, pred, gfn) {
  var spec = new cljs.core.Delay(function() {
    return cljs.spec.alpha.specize.call(null, pred, form);
  }, null);
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha9029 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha9029 = function(form, pred, gfn, spec, meta9030) {
      this.form = form;
      this.pred = pred;
      this.gfn = gfn;
      this.spec = spec;
      this.meta9030 = meta9030;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha9029.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9031, meta9030__$1) {
      var self__ = this;
      var _9031__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha9029(self__.form, self__.pred, self__.gfn, self__.spec, meta9030__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha9029.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9031) {
      var self__ = this;
      var _9031__$1 = this;
      return self__.meta9030;
    };
    cljs.spec.alpha.t_cljs$spec$alpha9029.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha9029.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha9029.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha9029.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha9029.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      if (x == null) {
        return null;
      } else {
        return cljs.spec.alpha.conform_STAR_.call(null, cljs.core.deref.call(null, self__.spec), x);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha9029.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      if (x == null) {
        return null;
      } else {
        return cljs.spec.alpha.unform_STAR_.call(null, cljs.core.deref.call(null, self__.spec), x);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha9029.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.spec.alpha.pvalid_QMARK_.call(null, cljs.core.deref.call(null, self__.spec), x) || x == null) {
        return null;
      } else {
        return cljs.core.conj.call(null, cljs.spec.alpha.explain_1.call(null, self__.form, self__.pred, cljs.core.conj.call(null, path, new cljs.core.Keyword("cljs.spec.alpha", "pred", "cljs.spec.alpha/pred", -798342594)), via, in$, x), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), cljs.core.conj.call(null, path, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950)), new cljs.core.Keyword(null, "pred", "pred", 1927423397), 
        new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha9029.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        return cljs.spec.gen.alpha.frequency.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function() {
          return cljs.spec.gen.alpha.return$.call(null, null);
        }, null))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [9, cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function() {
          return cljs.spec.alpha.gensub.call(null, self__.pred, overrides, cljs.core.conj.call(null, path, new cljs.core.Keyword("cljs.spec.alpha", "pred", "cljs.spec.alpha/pred", -798342594)), rmap, self__.form);
        }, null))], null)], null));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha9029.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.nilable_impl.call(null, self__.form, self__.pred, gfn__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha9029.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "nilable", "cljs.spec.alpha/nilable", 1628308748, null), null, 1, null), new cljs.core.List(null, self__.form, null, 1, null))));
    };
    cljs.spec.alpha.t_cljs$spec$alpha9029.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "spec", "spec", 1988051928, null), new cljs.core.Symbol(null, "meta9030", "meta9030", -1484039104, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha9029.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha9029.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha9029";
    cljs.spec.alpha.t_cljs$spec$alpha9029.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.spec.alpha/t_cljs$spec$alpha9029");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha9029 = function cljs$spec$alpha$nilable_impl_$___GT_t_cljs$spec$alpha9029(form__$1, pred__$1, gfn__$1, spec__$1, meta9030) {
      return new cljs.spec.alpha.t_cljs$spec$alpha9029(form__$1, pred__$1, gfn__$1, spec__$1, meta9030);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha9029(form, pred, gfn, spec, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.exercise = function cljs$spec$alpha$exercise(var_args) {
  var G__9034 = arguments.length;
  switch(G__9034) {
    case 1:
      return cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$1 = function(spec) {
  return cljs.spec.alpha.exercise.call(null, spec, 10);
};
cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$2 = function(spec, n) {
  return cljs.spec.alpha.exercise.call(null, spec, n, null);
};
cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$3 = function(spec, n, overrides) {
  return cljs.core.map.call(null, function(p1__9032_SHARP_) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9032_SHARP_, cljs.spec.alpha.conform.call(null, spec, p1__9032_SHARP_)], null);
  }, cljs.spec.gen.alpha.sample.call(null, cljs.spec.alpha.gen.call(null, spec, overrides), n));
};
cljs.spec.alpha.exercise.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.inst_in_range_QMARK_ = function cljs$spec$alpha$inst_in_range_QMARK_(start, end, inst) {
  if (cljs.core.inst_QMARK_.call(null, inst)) {
    var t = cljs.core.inst_ms.call(null, inst);
    return cljs.core.inst_ms.call(null, start) <= t && t < cljs.core.inst_ms.call(null, end);
  } else {
    return false;
  }
};
cljs.spec.alpha.int_in_range_QMARK_ = function cljs$spec$alpha$int_in_range_QMARK_(start, end, val) {
  if (cljs.core.integer_QMARK_.call(null, val)) {
    return start <= val && val < end;
  } else {
    if (val instanceof goog.math.Long) {
      var and__4115__auto__ = start.lessThanOrEqual(val);
      if (cljs.core.truth_(and__4115__auto__)) {
        return val.lessThan(end);
      } else {
        return and__4115__auto__;
      }
    } else {
      if (val instanceof goog.math.Integer) {
        var and__4115__auto__ = start.lessThanOrEqual(val);
        if (cljs.core.truth_(and__4115__auto__)) {
          return val.lessThan(end);
        } else {
          return and__4115__auto__;
        }
      } else {
        return false;
      }
    }
  }
};
if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha._STAR_compile_asserts_STAR_ !== "undefined") {
} else {
  cljs.spec.alpha._STAR_compile_asserts_STAR_ = true;
}
if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha._STAR_runtime_asserts_STAR_ !== "undefined") {
} else {
  cljs.spec.alpha._STAR_runtime_asserts_STAR_ = false;
}
cljs.spec.alpha.check_asserts_QMARK_ = function cljs$spec$alpha$check_asserts_QMARK_() {
  return cljs.spec.alpha._STAR_runtime_asserts_STAR_;
};
cljs.spec.alpha.check_asserts = function cljs$spec$alpha$check_asserts(flag) {
  return cljs.spec.alpha._STAR_runtime_asserts_STAR_ = flag;
};
cljs.spec.alpha.assert_STAR_ = function cljs$spec$alpha$assert_STAR_(spec, x) {
  if (cljs.spec.alpha.valid_QMARK_.call(null, spec, x)) {
    return x;
  } else {
    var ed = cljs.core.merge.call(null, cljs.core.assoc.call(null, cljs.spec.alpha.explain_data_STAR_.call(null, spec, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, x), new cljs.core.Keyword("cljs.spec.alpha", "failure", "cljs.spec.alpha/failure", 188258592), new cljs.core.Keyword(null, "assertion-failed", "assertion-failed", -970534477)));
    throw new Error(["Spec assertion failed\n", function() {
      var sb__4667__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR__orig_val__9040_9044 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR__orig_val__9041_9045 = cljs.core._STAR_print_fn_STAR_;
      var _STAR_print_newline_STAR__temp_val__9042_9046 = true;
      var _STAR_print_fn_STAR__temp_val__9043_9047 = function(x__4668__auto__) {
        return sb__4667__auto__.append(x__4668__auto__);
      };
      cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__9042_9046;
      cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__9043_9047;
      try {
        cljs.spec.alpha.explain_out.call(null, ed);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__9041_9045;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__9040_9044;
      }
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4667__auto__);
    }()].join(""));
  }
};
goog.provide("cljs.repl");
goog.require("cljs.core");
goog.require("cljs.spec.alpha");
goog.require("goog.string");
goog.require("goog.string.format");
cljs.repl.print_doc = function cljs$repl$print_doc(p__9050) {
  var map__9051 = p__9050;
  var map__9051__$1 = (!(map__9051 == null) ? map__9051.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9051.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9051) : map__9051;
  var m = map__9051__$1;
  var n = cljs.core.get.call(null, map__9051__$1, new cljs.core.Keyword(null, "ns", "ns", 441598760));
  var nm = cljs.core.get.call(null, map__9051__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
  cljs.core.println.call(null, "-------------------------");
  cljs.core.println.call(null, function() {
    var or__4126__auto__ = (new cljs.core.Keyword(null, "spec", "spec", 347520401)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return [function() {
        var temp__5720__auto__ = (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__5720__auto__)) {
          var ns = temp__5720__auto__;
          return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "/"].join("");
        } else {
          return null;
        }
      }(), cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(m))].join("");
    }
  }());
  if (cljs.core.truth_((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(m))) {
    cljs.core.println.call(null, "Protocol");
  } else {
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "forms", "forms", 2045992350)).cljs$core$IFn$_invoke$arity$1(m))) {
    var seq__9053_9085 = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "forms", "forms", 2045992350)).cljs$core$IFn$_invoke$arity$1(m));
    var chunk__9054_9086 = null;
    var count__9055_9087 = 0;
    var i__9056_9088 = 0;
    while (true) {
      if (i__9056_9088 < count__9055_9087) {
        var f_9089 = cljs.core._nth.call(null, chunk__9054_9086, i__9056_9088);
        cljs.core.println.call(null, "  ", f_9089);
        var G__9090 = seq__9053_9085;
        var G__9091 = chunk__9054_9086;
        var G__9092 = count__9055_9087;
        var G__9093 = i__9056_9088 + 1;
        seq__9053_9085 = G__9090;
        chunk__9054_9086 = G__9091;
        count__9055_9087 = G__9092;
        i__9056_9088 = G__9093;
        continue;
      } else {
        var temp__5720__auto___9094 = cljs.core.seq.call(null, seq__9053_9085);
        if (temp__5720__auto___9094) {
          var seq__9053_9095__$1 = temp__5720__auto___9094;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__9053_9095__$1)) {
            var c__4556__auto___9096 = cljs.core.chunk_first.call(null, seq__9053_9095__$1);
            var G__9097 = cljs.core.chunk_rest.call(null, seq__9053_9095__$1);
            var G__9098 = c__4556__auto___9096;
            var G__9099 = cljs.core.count.call(null, c__4556__auto___9096);
            var G__9100 = 0;
            seq__9053_9085 = G__9097;
            chunk__9054_9086 = G__9098;
            count__9055_9087 = G__9099;
            i__9056_9088 = G__9100;
            continue;
          } else {
            var f_9101 = cljs.core.first.call(null, seq__9053_9095__$1);
            cljs.core.println.call(null, "  ", f_9101);
            var G__9102 = cljs.core.next.call(null, seq__9053_9095__$1);
            var G__9103 = null;
            var G__9104 = 0;
            var G__9105 = 0;
            seq__9053_9085 = G__9102;
            chunk__9054_9086 = G__9103;
            count__9055_9087 = G__9104;
            i__9056_9088 = G__9105;
            continue;
          }
        } else {
        }
      }
      break;
    }
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "arglists", "arglists", 1661989754)).cljs$core$IFn$_invoke$arity$1(m))) {
      var arglists_9106 = (new cljs.core.Keyword(null, "arglists", "arglists", 1661989754)).cljs$core$IFn$_invoke$arity$1(m);
      if (cljs.core.truth_(function() {
        var or__4126__auto__ = (new cljs.core.Keyword(null, "macro", "macro", -867863404)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return (new cljs.core.Keyword(null, "repl-special-function", "repl-special-function", 1262603725)).cljs$core$IFn$_invoke$arity$1(m);
        }
      }())) {
        cljs.core.prn.call(null, arglists_9106);
      } else {
        cljs.core.prn.call(null, cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.first.call(null, arglists_9106)) ? cljs.core.second.call(null, arglists_9106) : arglists_9106);
      }
    } else {
    }
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "special-form", "special-form", -1326536374)).cljs$core$IFn$_invoke$arity$1(m))) {
    cljs.core.println.call(null, "Special Form");
    cljs.core.println.call(null, " ", (new cljs.core.Keyword(null, "doc", "doc", 1913296891)).cljs$core$IFn$_invoke$arity$1(m));
    if (cljs.core.contains_QMARK_.call(null, m, new cljs.core.Keyword(null, "url", "url", 276297046))) {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(m))) {
        return cljs.core.println.call(null, ["\n  Please see http://clojure.org/", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(m))].join(""));
      } else {
        return null;
      }
    } else {
      return cljs.core.println.call(null, ["\n  Please see http://clojure.org/special_forms#", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(m))].join(""));
    }
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "macro", "macro", -867863404)).cljs$core$IFn$_invoke$arity$1(m))) {
      cljs.core.println.call(null, "Macro");
    } else {
    }
    if (cljs.core.truth_((new cljs.core.Keyword(null, "spec", "spec", 347520401)).cljs$core$IFn$_invoke$arity$1(m))) {
      cljs.core.println.call(null, "Spec");
    } else {
    }
    if (cljs.core.truth_((new cljs.core.Keyword(null, "repl-special-function", "repl-special-function", 1262603725)).cljs$core$IFn$_invoke$arity$1(m))) {
      cljs.core.println.call(null, "REPL Special Function");
    } else {
    }
    cljs.core.println.call(null, " ", (new cljs.core.Keyword(null, "doc", "doc", 1913296891)).cljs$core$IFn$_invoke$arity$1(m));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(m))) {
      var seq__9057_9107 = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "methods", "methods", 453930866)).cljs$core$IFn$_invoke$arity$1(m));
      var chunk__9058_9108 = null;
      var count__9059_9109 = 0;
      var i__9060_9110 = 0;
      while (true) {
        if (i__9060_9110 < count__9059_9109) {
          var vec__9071_9111 = cljs.core._nth.call(null, chunk__9058_9108, i__9060_9110);
          var name_9112 = cljs.core.nth.call(null, vec__9071_9111, 0, null);
          var map__9074_9113 = cljs.core.nth.call(null, vec__9071_9111, 1, null);
          var map__9074_9114__$1 = (!(map__9074_9113 == null) ? map__9074_9113.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9074_9113.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9074_9113) : map__9074_9113;
          var doc_9115 = cljs.core.get.call(null, map__9074_9114__$1, new cljs.core.Keyword(null, "doc", "doc", 1913296891));
          var arglists_9116 = cljs.core.get.call(null, map__9074_9114__$1, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754));
          cljs.core.println.call(null);
          cljs.core.println.call(null, " ", name_9112);
          cljs.core.println.call(null, " ", arglists_9116);
          if (cljs.core.truth_(doc_9115)) {
            cljs.core.println.call(null, " ", doc_9115);
          } else {
          }
          var G__9117 = seq__9057_9107;
          var G__9118 = chunk__9058_9108;
          var G__9119 = count__9059_9109;
          var G__9120 = i__9060_9110 + 1;
          seq__9057_9107 = G__9117;
          chunk__9058_9108 = G__9118;
          count__9059_9109 = G__9119;
          i__9060_9110 = G__9120;
          continue;
        } else {
          var temp__5720__auto___9121 = cljs.core.seq.call(null, seq__9057_9107);
          if (temp__5720__auto___9121) {
            var seq__9057_9122__$1 = temp__5720__auto___9121;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__9057_9122__$1)) {
              var c__4556__auto___9123 = cljs.core.chunk_first.call(null, seq__9057_9122__$1);
              var G__9124 = cljs.core.chunk_rest.call(null, seq__9057_9122__$1);
              var G__9125 = c__4556__auto___9123;
              var G__9126 = cljs.core.count.call(null, c__4556__auto___9123);
              var G__9127 = 0;
              seq__9057_9107 = G__9124;
              chunk__9058_9108 = G__9125;
              count__9059_9109 = G__9126;
              i__9060_9110 = G__9127;
              continue;
            } else {
              var vec__9076_9128 = cljs.core.first.call(null, seq__9057_9122__$1);
              var name_9129 = cljs.core.nth.call(null, vec__9076_9128, 0, null);
              var map__9079_9130 = cljs.core.nth.call(null, vec__9076_9128, 1, null);
              var map__9079_9131__$1 = (!(map__9079_9130 == null) ? map__9079_9130.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9079_9130.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9079_9130) : map__9079_9130;
              var doc_9132 = cljs.core.get.call(null, map__9079_9131__$1, new cljs.core.Keyword(null, "doc", "doc", 1913296891));
              var arglists_9133 = cljs.core.get.call(null, map__9079_9131__$1, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754));
              cljs.core.println.call(null);
              cljs.core.println.call(null, " ", name_9129);
              cljs.core.println.call(null, " ", arglists_9133);
              if (cljs.core.truth_(doc_9132)) {
                cljs.core.println.call(null, " ", doc_9132);
              } else {
              }
              var G__9134 = cljs.core.next.call(null, seq__9057_9122__$1);
              var G__9135 = null;
              var G__9136 = 0;
              var G__9137 = 0;
              seq__9057_9107 = G__9134;
              chunk__9058_9108 = G__9135;
              count__9059_9109 = G__9136;
              i__9060_9110 = G__9137;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
    }
    if (cljs.core.truth_(n)) {
      var temp__5720__auto__ = cljs.spec.alpha.get_spec.call(null, cljs.core.symbol.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.ns_name.call(null, n)), cljs.core.name.call(null, nm)));
      if (cljs.core.truth_(temp__5720__auto__)) {
        var fnspec = temp__5720__auto__;
        cljs.core.print.call(null, "Spec");
        var seq__9081 = cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "args", "args", 1315556576), new cljs.core.Keyword(null, "ret", "ret", -468222814), new cljs.core.Keyword(null, "fn", "fn", -1175266204)], null));
        var chunk__9082 = null;
        var count__9083 = 0;
        var i__9084 = 0;
        while (true) {
          if (i__9084 < count__9083) {
            var role = cljs.core._nth.call(null, chunk__9082, i__9084);
            var temp__5720__auto___9138__$1 = cljs.core.get.call(null, fnspec, role);
            if (cljs.core.truth_(temp__5720__auto___9138__$1)) {
              var spec_9139 = temp__5720__auto___9138__$1;
              cljs.core.print.call(null, ["\n ", cljs.core.name.call(null, role), ":"].join(""), cljs.spec.alpha.describe.call(null, spec_9139));
            } else {
            }
            var G__9140 = seq__9081;
            var G__9141 = chunk__9082;
            var G__9142 = count__9083;
            var G__9143 = i__9084 + 1;
            seq__9081 = G__9140;
            chunk__9082 = G__9141;
            count__9083 = G__9142;
            i__9084 = G__9143;
            continue;
          } else {
            var temp__5720__auto____$1 = cljs.core.seq.call(null, seq__9081);
            if (temp__5720__auto____$1) {
              var seq__9081__$1 = temp__5720__auto____$1;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__9081__$1)) {
                var c__4556__auto__ = cljs.core.chunk_first.call(null, seq__9081__$1);
                var G__9144 = cljs.core.chunk_rest.call(null, seq__9081__$1);
                var G__9145 = c__4556__auto__;
                var G__9146 = cljs.core.count.call(null, c__4556__auto__);
                var G__9147 = 0;
                seq__9081 = G__9144;
                chunk__9082 = G__9145;
                count__9083 = G__9146;
                i__9084 = G__9147;
                continue;
              } else {
                var role = cljs.core.first.call(null, seq__9081__$1);
                var temp__5720__auto___9148__$2 = cljs.core.get.call(null, fnspec, role);
                if (cljs.core.truth_(temp__5720__auto___9148__$2)) {
                  var spec_9149 = temp__5720__auto___9148__$2;
                  cljs.core.print.call(null, ["\n ", cljs.core.name.call(null, role), ":"].join(""), cljs.spec.alpha.describe.call(null, spec_9149));
                } else {
                }
                var G__9150 = cljs.core.next.call(null, seq__9081__$1);
                var G__9151 = null;
                var G__9152 = 0;
                var G__9153 = 0;
                seq__9081 = G__9150;
                chunk__9082 = G__9151;
                count__9083 = G__9152;
                i__9084 = G__9153;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.repl.Error__GT_map = function cljs$repl$Error__GT_map(o) {
  var base = function(t) {
    return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), t instanceof cljs.core.ExceptionInfo ? new cljs.core.Symbol(null, "ExceptionInfo", "ExceptionInfo", 294935087, null) : t instanceof Error ? cljs.core.symbol.call(null, "js", t.name) : null], null), function() {
      var temp__5720__auto__ = cljs.core.ex_message.call(null, t);
      if (cljs.core.truth_(temp__5720__auto__)) {
        var msg = temp__5720__auto__;
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "message", "message", -406056002), msg], null);
      } else {
        return null;
      }
    }(), function() {
      var temp__5720__auto__ = cljs.core.ex_data.call(null, t);
      if (cljs.core.truth_(temp__5720__auto__)) {
        var ed = temp__5720__auto__;
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "data", "data", -232669377), ed], null);
      } else {
        return null;
      }
    }());
  };
  var via = function() {
    var via = cljs.core.PersistentVector.EMPTY;
    var t = o;
    while (true) {
      if (cljs.core.truth_(t)) {
        var G__9154 = cljs.core.conj.call(null, via, t);
        var G__9155 = cljs.core.ex_cause.call(null, t);
        via = G__9154;
        t = G__9155;
        continue;
      } else {
        return via;
      }
      break;
    }
  }();
  var root = cljs.core.peek.call(null, via);
  return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "via", "via", -1904457336), cljs.core.vec.call(null, cljs.core.map.call(null, base, via)), new cljs.core.Keyword(null, "trace", "trace", -1082747415), null], null), function() {
    var temp__5720__auto__ = cljs.core.ex_message.call(null, root);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var root_msg = temp__5720__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cause", "cause", 231901252), root_msg], null);
    } else {
      return null;
    }
  }(), function() {
    var temp__5720__auto__ = cljs.core.ex_data.call(null, root);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var data = temp__5720__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "data", "data", -232669377), data], null);
    } else {
      return null;
    }
  }(), function() {
    var temp__5720__auto__ = (new cljs.core.Keyword("clojure.error", "phase", "clojure.error/phase", 275140358)).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data.call(null, o));
    if (cljs.core.truth_(temp__5720__auto__)) {
      var phase = temp__5720__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "phase", "phase", 575722892), phase], null);
    } else {
      return null;
    }
  }());
};
cljs.repl.ex_triage = function cljs$repl$ex_triage(datafied_throwable) {
  var map__9158 = datafied_throwable;
  var map__9158__$1 = (!(map__9158 == null) ? map__9158.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9158.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9158) : map__9158;
  var via = cljs.core.get.call(null, map__9158__$1, new cljs.core.Keyword(null, "via", "via", -1904457336));
  var trace = cljs.core.get.call(null, map__9158__$1, new cljs.core.Keyword(null, "trace", "trace", -1082747415));
  var phase = cljs.core.get.call(null, map__9158__$1, new cljs.core.Keyword(null, "phase", "phase", 575722892), new cljs.core.Keyword(null, "execution", "execution", 253283524));
  var map__9159 = cljs.core.last.call(null, via);
  var map__9159__$1 = (!(map__9159 == null) ? map__9159.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9159.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9159) : map__9159;
  var type = cljs.core.get.call(null, map__9159__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var message = cljs.core.get.call(null, map__9159__$1, new cljs.core.Keyword(null, "message", "message", -406056002));
  var data = cljs.core.get.call(null, map__9159__$1, new cljs.core.Keyword(null, "data", "data", -232669377));
  var map__9160 = data;
  var map__9160__$1 = (!(map__9160 == null) ? map__9160.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9160.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9160) : map__9160;
  var problems = cljs.core.get.call(null, map__9160__$1, new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814));
  var fn = cljs.core.get.call(null, map__9160__$1, new cljs.core.Keyword("cljs.spec.alpha", "fn", "cljs.spec.alpha/fn", 408600443));
  var caller = cljs.core.get.call(null, map__9160__$1, new cljs.core.Keyword("cljs.spec.test.alpha", "caller", "cljs.spec.test.alpha/caller", -398302390));
  var map__9161 = (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, via));
  var map__9161__$1 = (!(map__9161 == null) ? map__9161.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9161.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9161) : map__9161;
  var top_data = map__9161__$1;
  var source = cljs.core.get.call(null, map__9161__$1, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397));
  return cljs.core.assoc.call(null, function() {
    var G__9166 = phase;
    var G__9166__$1 = G__9166 instanceof cljs.core.Keyword ? G__9166.fqn : null;
    switch(G__9166__$1) {
      case "read-source":
        var map__9167 = data;
        var map__9167__$1 = (!(map__9167 == null) ? map__9167.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9167.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9167) : map__9167;
        var line = cljs.core.get.call(null, map__9167__$1, new cljs.core.Keyword("clojure.error", "line", "clojure.error/line", -1816287471));
        var column = cljs.core.get.call(null, map__9167__$1, new cljs.core.Keyword("clojure.error", "column", "clojure.error/column", 304721553));
        var G__9169 = cljs.core.merge.call(null, (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, via)), top_data);
        var G__9169__$1 = cljs.core.truth_(source) ? cljs.core.assoc.call(null, G__9169, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397), source) : G__9169;
        var G__9169__$2 = cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["NO_SOURCE_PATH", null, "NO_SOURCE_FILE", null], null), null)).call(null, source)) ? cljs.core.dissoc.call(null, G__9169__$1, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397)) : G__9169__$1;
        if (cljs.core.truth_(message)) {
          return cljs.core.assoc.call(null, G__9169__$2, new cljs.core.Keyword("clojure.error", "cause", "clojure.error/cause", -1879175742), message);
        } else {
          return G__9169__$2;
        }
        break;
      case "compile-syntax-check":
      case "compilation":
      case "macro-syntax-check":
      case "macroexpansion":
        var G__9170 = top_data;
        var G__9170__$1 = cljs.core.truth_(source) ? cljs.core.assoc.call(null, G__9170, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397), source) : G__9170;
        var G__9170__$2 = cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["NO_SOURCE_PATH", null, "NO_SOURCE_FILE", null], null), null)).call(null, source)) ? cljs.core.dissoc.call(null, G__9170__$1, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397)) : G__9170__$1;
        var G__9170__$3 = cljs.core.truth_(type) ? cljs.core.assoc.call(null, G__9170__$2, new cljs.core.Keyword("clojure.error", "class", "clojure.error/class", 278435890), type) : G__9170__$2;
        var G__9170__$4 = cljs.core.truth_(message) ? cljs.core.assoc.call(null, G__9170__$3, new cljs.core.Keyword("clojure.error", "cause", "clojure.error/cause", -1879175742), message) : G__9170__$3;
        if (cljs.core.truth_(problems)) {
          return cljs.core.assoc.call(null, G__9170__$4, new cljs.core.Keyword("clojure.error", "spec", "clojure.error/spec", 2055032595), data);
        } else {
          return G__9170__$4;
        }
        break;
      case "read-eval-result":
      case "print-eval-result":
        var vec__9171 = cljs.core.first.call(null, trace);
        var source__$1 = cljs.core.nth.call(null, vec__9171, 0, null);
        var method = cljs.core.nth.call(null, vec__9171, 1, null);
        var file = cljs.core.nth.call(null, vec__9171, 2, null);
        var line = cljs.core.nth.call(null, vec__9171, 3, null);
        var G__9174 = top_data;
        var G__9174__$1 = cljs.core.truth_(line) ? cljs.core.assoc.call(null, G__9174, new cljs.core.Keyword("clojure.error", "line", "clojure.error/line", -1816287471), line) : G__9174;
        var G__9174__$2 = cljs.core.truth_(file) ? cljs.core.assoc.call(null, G__9174__$1, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397), file) : G__9174__$1;
        var G__9174__$3 = cljs.core.truth_(function() {
          var and__4115__auto__ = source__$1;
          if (cljs.core.truth_(and__4115__auto__)) {
            return method;
          } else {
            return and__4115__auto__;
          }
        }()) ? cljs.core.assoc.call(null, G__9174__$2, new cljs.core.Keyword("clojure.error", "symbol", "clojure.error/symbol", 1544821994), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [source__$1, method], null)) : G__9174__$2;
        var G__9174__$4 = cljs.core.truth_(type) ? cljs.core.assoc.call(null, G__9174__$3, new cljs.core.Keyword("clojure.error", "class", "clojure.error/class", 278435890), type) : G__9174__$3;
        if (cljs.core.truth_(message)) {
          return cljs.core.assoc.call(null, G__9174__$4, new cljs.core.Keyword("clojure.error", "cause", "clojure.error/cause", -1879175742), message);
        } else {
          return G__9174__$4;
        }
        break;
      case "execution":
        var vec__9175 = cljs.core.first.call(null, trace);
        var source__$1 = cljs.core.nth.call(null, vec__9175, 0, null);
        var method = cljs.core.nth.call(null, vec__9175, 1, null);
        var file = cljs.core.nth.call(null, vec__9175, 2, null);
        var line = cljs.core.nth.call(null, vec__9175, 3, null);
        var file__$1 = cljs.core.first.call(null, cljs.core.remove.call(null, function(p1__9157_SHARP_) {
          var or__4126__auto__ = p1__9157_SHARP_ == null;
          if (or__4126__auto__) {
            return or__4126__auto__;
          } else {
            return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["NO_SOURCE_PATH", null, "NO_SOURCE_FILE", null], null), null)).call(null, p1__9157_SHARP_);
          }
        }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "file", "file", -1269645878)).cljs$core$IFn$_invoke$arity$1(caller), file], null)));
        var err_line = function() {
          var or__4126__auto__ = (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(caller);
          if (cljs.core.truth_(or__4126__auto__)) {
            return or__4126__auto__;
          } else {
            return line;
          }
        }();
        var G__9178 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("clojure.error", "class", "clojure.error/class", 278435890), type], null);
        var G__9178__$1 = cljs.core.truth_(err_line) ? cljs.core.assoc.call(null, G__9178, new cljs.core.Keyword("clojure.error", "line", "clojure.error/line", -1816287471), err_line) : G__9178;
        var G__9178__$2 = cljs.core.truth_(message) ? cljs.core.assoc.call(null, G__9178__$1, new cljs.core.Keyword("clojure.error", "cause", "clojure.error/cause", -1879175742), message) : G__9178__$1;
        var G__9178__$3 = cljs.core.truth_(function() {
          var or__4126__auto__ = fn;
          if (cljs.core.truth_(or__4126__auto__)) {
            return or__4126__auto__;
          } else {
            var and__4115__auto__ = source__$1;
            if (cljs.core.truth_(and__4115__auto__)) {
              return method;
            } else {
              return and__4115__auto__;
            }
          }
        }()) ? cljs.core.assoc.call(null, G__9178__$2, new cljs.core.Keyword("clojure.error", "symbol", "clojure.error/symbol", 1544821994), function() {
          var or__4126__auto__ = fn;
          if (cljs.core.truth_(or__4126__auto__)) {
            return or__4126__auto__;
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [source__$1, method], null);
          }
        }()) : G__9178__$2;
        var G__9178__$4 = cljs.core.truth_(file__$1) ? cljs.core.assoc.call(null, G__9178__$3, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397), file__$1) : G__9178__$3;
        if (cljs.core.truth_(problems)) {
          return cljs.core.assoc.call(null, G__9178__$4, new cljs.core.Keyword("clojure.error", "spec", "clojure.error/spec", 2055032595), data);
        } else {
          return G__9178__$4;
        }
        break;
      default:
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__9166__$1)].join(""));
    }
  }(), new cljs.core.Keyword("clojure.error", "phase", "clojure.error/phase", 275140358), phase);
};
cljs.repl.ex_str = function cljs$repl$ex_str(p__9182) {
  var map__9183 = p__9182;
  var map__9183__$1 = (!(map__9183 == null) ? map__9183.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9183.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9183) : map__9183;
  var triage_data = map__9183__$1;
  var phase = cljs.core.get.call(null, map__9183__$1, new cljs.core.Keyword("clojure.error", "phase", "clojure.error/phase", 275140358));
  var source = cljs.core.get.call(null, map__9183__$1, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397));
  var line = cljs.core.get.call(null, map__9183__$1, new cljs.core.Keyword("clojure.error", "line", "clojure.error/line", -1816287471));
  var column = cljs.core.get.call(null, map__9183__$1, new cljs.core.Keyword("clojure.error", "column", "clojure.error/column", 304721553));
  var symbol = cljs.core.get.call(null, map__9183__$1, new cljs.core.Keyword("clojure.error", "symbol", "clojure.error/symbol", 1544821994));
  var class$ = cljs.core.get.call(null, map__9183__$1, new cljs.core.Keyword("clojure.error", "class", "clojure.error/class", 278435890));
  var cause = cljs.core.get.call(null, map__9183__$1, new cljs.core.Keyword("clojure.error", "cause", "clojure.error/cause", -1879175742));
  var spec = cljs.core.get.call(null, map__9183__$1, new cljs.core.Keyword("clojure.error", "spec", "clojure.error/spec", 2055032595));
  var loc = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var or__4126__auto__ = source;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return "\x3ccljs repl\x3e";
    }
  }()), ":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var or__4126__auto__ = line;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return 1;
    }
  }()), cljs.core.truth_(column) ? [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(column)].join("") : ""].join("");
  var class_name = cljs.core.name.call(null, function() {
    var or__4126__auto__ = class$;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return "";
    }
  }());
  var simple_class = class_name;
  var cause_type = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["RuntimeException", null, "Exception", null], null), null), simple_class) ? "" : [" (", simple_class, ")"].join("");
  var format = goog.string.format;
  var G__9185 = phase;
  var G__9185__$1 = G__9185 instanceof cljs.core.Keyword ? G__9185.fqn : null;
  switch(G__9185__$1) {
    case "read-source":
      return format.call(null, "Syntax error reading source at (%s).\n%s\n", loc, cause);
      break;
    case "macro-syntax-check":
      return format.call(null, "Syntax error macroexpanding %sat (%s).\n%s", cljs.core.truth_(symbol) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol), " "].join("") : "", loc, cljs.core.truth_(spec) ? function() {
        var sb__4667__auto__ = new goog.string.StringBuffer;
        var _STAR_print_newline_STAR__orig_val__9186_9195 = cljs.core._STAR_print_newline_STAR_;
        var _STAR_print_fn_STAR__orig_val__9187_9196 = cljs.core._STAR_print_fn_STAR_;
        var _STAR_print_newline_STAR__temp_val__9188_9197 = true;
        var _STAR_print_fn_STAR__temp_val__9189_9198 = function(x__4668__auto__) {
          return sb__4667__auto__.append(x__4668__auto__);
        };
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__9188_9197;
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__9189_9198;
        try {
          cljs.spec.alpha.explain_out.call(null, cljs.core.update.call(null, spec, new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814), function(probs) {
            return cljs.core.map.call(null, function(p1__9180_SHARP_) {
              return cljs.core.dissoc.call(null, p1__9180_SHARP_, new cljs.core.Keyword(null, "in", "in", -1531184865));
            }, probs);
          }));
        } finally {
          cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__9187_9196;
          cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__9186_9195;
        }
        return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4667__auto__);
      }() : format.call(null, "%s\n", cause));
      break;
    case "macroexpansion":
      return format.call(null, "Unexpected error%s macroexpanding %sat (%s).\n%s\n", cause_type, cljs.core.truth_(symbol) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol), " "].join("") : "", loc, cause);
      break;
    case "compile-syntax-check":
      return format.call(null, "Syntax error%s compiling %sat (%s).\n%s\n", cause_type, cljs.core.truth_(symbol) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol), " "].join("") : "", loc, cause);
      break;
    case "compilation":
      return format.call(null, "Unexpected error%s compiling %sat (%s).\n%s\n", cause_type, cljs.core.truth_(symbol) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol), " "].join("") : "", loc, cause);
      break;
    case "read-eval-result":
      return format.call(null, "Error reading eval result%s at %s (%s).\n%s\n", cause_type, symbol, loc, cause);
      break;
    case "print-eval-result":
      return format.call(null, "Error printing return value%s at %s (%s).\n%s\n", cause_type, symbol, loc, cause);
      break;
    case "execution":
      if (cljs.core.truth_(spec)) {
        return format.call(null, "Execution error - invalid arguments to %s at (%s).\n%s", symbol, loc, function() {
          var sb__4667__auto__ = new goog.string.StringBuffer;
          var _STAR_print_newline_STAR__orig_val__9190_9199 = cljs.core._STAR_print_newline_STAR_;
          var _STAR_print_fn_STAR__orig_val__9191_9200 = cljs.core._STAR_print_fn_STAR_;
          var _STAR_print_newline_STAR__temp_val__9192_9201 = true;
          var _STAR_print_fn_STAR__temp_val__9193_9202 = function(x__4668__auto__) {
            return sb__4667__auto__.append(x__4668__auto__);
          };
          cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__9192_9201;
          cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__9193_9202;
          try {
            cljs.spec.alpha.explain_out.call(null, cljs.core.update.call(null, spec, new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814), function(probs) {
              return cljs.core.map.call(null, function(p1__9181_SHARP_) {
                return cljs.core.dissoc.call(null, p1__9181_SHARP_, new cljs.core.Keyword(null, "in", "in", -1531184865));
              }, probs);
            }));
          } finally {
            cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__9191_9200;
            cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__9190_9199;
          }
          return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4667__auto__);
        }());
      } else {
        return format.call(null, "Execution error%s at %s(%s).\n%s\n", cause_type, cljs.core.truth_(symbol) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol), " "].join("") : "", loc, cause);
      }
      break;
    default:
      throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__9185__$1)].join(""));
  }
};
cljs.repl.error__GT_str = function cljs$repl$error__GT_str(error) {
  return cljs.repl.ex_str.call(null, cljs.repl.ex_triage.call(null, cljs.repl.Error__GT_map.call(null, error)));
};
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.json");
goog.require("goog.userAgent.product");
goog.require("clojure.browser.net");
goog.require("clojure.browser.event");
goog.require("cljs.repl");
clojure.browser.repl.HOST = goog.define("clojure.browser.repl.HOST", "localhost");
clojure.browser.repl.PORT = goog.define("clojure.browser.repl.PORT", 9000);
clojure.browser.repl._STAR_repl_STAR_ = null;
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.parent_connected_QMARK_ = cljs.core.atom.call(null, false);
clojure.browser.repl.print_queue = [];
clojure.browser.repl.flush_print_queue_BANG_ = function clojure$browser$repl$flush_print_queue_BANG_(conn) {
  var seq__9205_9209 = cljs.core.seq.call(null, clojure.browser.repl.print_queue);
  var chunk__9206_9210 = null;
  var count__9207_9211 = 0;
  var i__9208_9212 = 0;
  while (true) {
    if (i__9208_9212 < count__9207_9211) {
      var str_9213 = cljs.core._nth.call(null, chunk__9206_9210, i__9208_9212);
      clojure.browser.net.transmit.call(null, conn, new cljs.core.Keyword(null, "print", "print", 1299562414), goog.json.serialize({"repl":clojure.browser.repl._STAR_repl_STAR_, "str":str_9213}));
      var G__9214 = seq__9205_9209;
      var G__9215 = chunk__9206_9210;
      var G__9216 = count__9207_9211;
      var G__9217 = i__9208_9212 + 1;
      seq__9205_9209 = G__9214;
      chunk__9206_9210 = G__9215;
      count__9207_9211 = G__9216;
      i__9208_9212 = G__9217;
      continue;
    } else {
      var temp__5720__auto___9218 = cljs.core.seq.call(null, seq__9205_9209);
      if (temp__5720__auto___9218) {
        var seq__9205_9219__$1 = temp__5720__auto___9218;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__9205_9219__$1)) {
          var c__4556__auto___9220 = cljs.core.chunk_first.call(null, seq__9205_9219__$1);
          var G__9221 = cljs.core.chunk_rest.call(null, seq__9205_9219__$1);
          var G__9222 = c__4556__auto___9220;
          var G__9223 = cljs.core.count.call(null, c__4556__auto___9220);
          var G__9224 = 0;
          seq__9205_9209 = G__9221;
          chunk__9206_9210 = G__9222;
          count__9207_9211 = G__9223;
          i__9208_9212 = G__9224;
          continue;
        } else {
          var str_9225 = cljs.core.first.call(null, seq__9205_9219__$1);
          clojure.browser.net.transmit.call(null, conn, new cljs.core.Keyword(null, "print", "print", 1299562414), goog.json.serialize({"repl":clojure.browser.repl._STAR_repl_STAR_, "str":str_9225}));
          var G__9226 = cljs.core.next.call(null, seq__9205_9219__$1);
          var G__9227 = null;
          var G__9228 = 0;
          var G__9229 = 0;
          seq__9205_9209 = G__9226;
          chunk__9206_9210 = G__9227;
          count__9207_9211 = G__9228;
          i__9208_9212 = G__9229;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return goog.array.clear(clojure.browser.repl.print_queue);
};
clojure.browser.repl.repl_print = function clojure$browser$repl$repl_print(data) {
  clojure.browser.repl.print_queue.push(cljs.core.pr_str.call(null, data));
  if (cljs.core.truth_(cljs.core.deref.call(null, clojure.browser.repl.parent_connected_QMARK_))) {
    return clojure.browser.repl.flush_print_queue_BANG_.call(null, cljs.core.deref.call(null, clojure.browser.repl.xpc_connection));
  } else {
    return null;
  }
};
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core.set_print_fn_BANG_.call(null, clojure.browser.repl.repl_print);
cljs.core.set_print_err_fn_BANG_.call(null, clojure.browser.repl.repl_print);
clojure.browser.repl.get_ua_product = function clojure$browser$repl$get_ua_product() {
  if (goog.userAgent.product.SAFARI) {
    return new cljs.core.Keyword(null, "safari", "safari", 497115653);
  } else {
    if (goog.userAgent.product.CHROME) {
      return new cljs.core.Keyword(null, "chrome", "chrome", 1718738387);
    } else {
      if (goog.userAgent.product.FIREFOX) {
        return new cljs.core.Keyword(null, "firefox", "firefox", 1283768880);
      } else {
        if (goog.userAgent.product.IE) {
          return new cljs.core.Keyword(null, "ie", "ie", 2038473780);
        } else {
          return null;
        }
      }
    }
  }
};
clojure.browser.repl.evaluate_javascript = function clojure$browser$repl$evaluate_javascript(conn, block) {
  var result = function() {
    try {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "success", "success", 1890645906), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.str.cljs$core$IFn$_invoke$arity$1(eval(block))], null);
    } catch (e9230) {
      var e = e9230;
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.repl.error__GT_str.call(null, e)], null);
    }
  }();
  return cljs.core.pr_str.call(null, result);
};
clojure.browser.repl.send_result = function clojure$browser$repl$send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0);
};
clojure.browser.repl.send_print = function clojure$browser$repl$send_print(var_args) {
  var G__9232 = arguments.length;
  switch(G__9232) {
    case 2:
      return clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$2 = function(url, data) {
  return clojure.browser.repl.send_print.call(null, url, data, 0);
};
clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$3 = function(url, data, n) {
  var conn = clojure.browser.net.xhr_connection.call(null);
  clojure.browser.event.listen.call(null, conn, new cljs.core.Keyword(null, "error", "error", -978969032), function(_) {
    if (n < 10) {
      return clojure.browser.repl.send_print.call(null, url, data, n + 1);
    } else {
      return console.log(["Could not send ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(data), " after ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " attempts."].join(""));
    }
  });
  return clojure.browser.net.transmit.call(null, conn, url, "POST", data, null, 0);
};
clojure.browser.repl.send_print.cljs$lang$maxFixedArity = 3;
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function clojure$browser$repl$wrap_message(repl, t, data) {
  return cljs.core.pr_str.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "repl", "repl", -35398667), repl, new cljs.core.Keyword(null, "type", "type", 1174270348), t, new cljs.core.Keyword(null, "content", "content", 15833224), data, new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)], null));
};
clojure.browser.repl.start_evaluator = function clojure$browser$repl$start_evaluator(url) {
  var temp__5718__auto__ = clojure.browser.net.xpc_connection.call(null);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var repl_connection = temp__5718__auto__;
    var connection = clojure.browser.net.xhr_connection.call(null);
    var repl_connected_QMARK_ = cljs.core.atom.call(null, false);
    var try_handshake = function clojure$browser$repl$start_evaluator_$_try_handshake() {
      if (cljs.core.truth_(cljs.core.deref.call(null, repl_connected_QMARK_))) {
        return null;
      } else {
        clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "start-handshake", "start-handshake", 359692894), null);
        return setTimeout(clojure$browser$repl$start_evaluator_$_try_handshake, 10);
      }
    };
    clojure.browser.net.connect.call(null, repl_connection, try_handshake);
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "ack-handshake", "ack-handshake", 1651340387), function(_) {
      if (cljs.core.truth_(cljs.core.deref.call(null, repl_connected_QMARK_))) {
        return null;
      } else {
        cljs.core.reset_BANG_.call(null, repl_connected_QMARK_, true);
        return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, null, new cljs.core.Keyword(null, "ready", "ready", 1086465795), "ready"));
      }
    });
    clojure.browser.event.listen.call(null, connection, new cljs.core.Keyword(null, "success", "success", 1890645906), function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", -315749780), e.currentTarget.getResponseText(cljs.core.List.EMPTY));
    });
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 35388249), function(json) {
      var obj = goog.json.parse(json);
      var repl = goog.object.get(obj, "repl");
      var result = goog.object.get(obj, "result");
      return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, repl, new cljs.core.Keyword(null, "result", "result", 1415092211), result));
    });
    return clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "print", "print", 1299562414), function(json) {
      var obj = goog.json.parse(json);
      var repl = goog.object.get(obj, "repl");
      var str = goog.object.get(obj, "str");
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, repl, new cljs.core.Keyword(null, "print", "print", 1299562414), str));
    });
  } else {
    return alert("No 'xpc' param provided to child iframe.");
  }
};
clojure.browser.repl.load_queue = null;
clojure.browser.repl.bootstrap = function clojure$browser$repl$bootstrap() {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    goog.require__ = goog.require;
    goog.isProvided_ = function(name) {
      return false;
    };
    goog.constructNamespace_("cljs.user");
    goog.writeScriptTag__ = function(src, opt_sourceText) {
      var loaded = cljs.core.atom.call(null, false);
      var onload = function() {
        if (cljs.core.truth_(function() {
          var and__4115__auto__ = clojure.browser.repl.load_queue;
          if (cljs.core.truth_(and__4115__auto__)) {
            return cljs.core.deref.call(null, loaded) === false;
          } else {
            return and__4115__auto__;
          }
        }())) {
          cljs.core.swap_BANG_.call(null, loaded, cljs.core.not);
          if (clojure.browser.repl.load_queue.length === 0) {
            return clojure.browser.repl.load_queue = null;
          } else {
            return goog.writeScriptTag__.apply(null, clojure.browser.repl.load_queue.shift());
          }
        } else {
          return null;
        }
      };
      return document.body.appendChild(function() {
        var script = document.createElement("script");
        var script__$1 = function() {
          var G__9234 = script;
          goog.object.set(G__9234, "type", "text/javascript");
          goog.object.set(G__9234, "onload", onload);
          goog.object.set(G__9234, "onreadystatechange", onload);
          return G__9234;
        }();
        if (opt_sourceText == null) {
          var G__9235 = script__$1;
          goog.object.set(G__9235, "src", src);
          return G__9235;
        } else {
          var G__9236 = script__$1;
          goog.dom.setTextContent(G__9236, opt_sourceText);
          return G__9236;
        }
      }());
    };
    goog.writeScriptTag_ = function(src, opt_sourceText) {
      if (cljs.core.truth_(clojure.browser.repl.load_queue)) {
        return clojure.browser.repl.load_queue.push([src, opt_sourceText]);
      } else {
        clojure.browser.repl.load_queue = [];
        return goog.writeScriptTag__(src, opt_sourceText);
      }
    };
    if (cljs.core.truth_(goog.debugLoader_)) {
      CLOSURE_IMPORT_SCRIPT = goog.writeScriptTag_;
    } else {
    }
    return goog.require = function(src, reload) {
      if (cljs.core._EQ_.call(null, reload, "reload-all")) {
        goog.cljsReloadAll_ = true;
      } else {
      }
      var reload_QMARK_ = function() {
        var or__4126__auto__ = reload;
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return goog.cljsReloadAll__;
        }
      }();
      if (cljs.core.truth_(reload_QMARK_)) {
        if (!(goog.debugLoader_ == null)) {
          var path_9237 = goog.debugLoader_.getPathFromDeps_(src);
          goog.object.remove(goog.debugLoader_.written_, path_9237);
          goog.object.remove(goog.debugLoader_.written_, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(goog.basePath), cljs.core.str.cljs$core$IFn$_invoke$arity$1(path_9237)].join(""));
        } else {
          var path_9238 = goog.object.get(goog.dependencies_.nameToPath, src);
          goog.object.remove(goog.dependencies_.visited, path_9238);
          goog.object.remove(goog.dependencies_.written, path_9238);
          goog.object.remove(goog.dependencies_.written, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(goog.basePath), cljs.core.str.cljs$core$IFn$_invoke$arity$1(path_9238)].join(""));
        }
      } else {
      }
      var ret = goog.require__(src);
      if (cljs.core._EQ_.call(null, reload, "reload-all")) {
        goog.cljsReloadAll_ = false;
      } else {
      }
      return ret;
    };
  }
};
clojure.browser.repl.connect = function clojure$browser$repl$connect(repl_server_url) {
  var connected_QMARK_ = cljs.core.atom.call(null, false);
  var repl_connection = clojure.browser.net.xpc_connection.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "peer_uri", "peer_uri", 910305997), repl_server_url], null));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection));
  clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "start-handshake", "start-handshake", 359692894), function(_) {
    if (cljs.core.truth_(cljs.core.deref.call(null, connected_QMARK_))) {
      return null;
    } else {
      cljs.core.reset_BANG_.call(null, connected_QMARK_, true);
      cljs.core.reset_BANG_.call(null, clojure.browser.repl.parent_connected_QMARK_, true);
      clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "ack-handshake", "ack-handshake", 1651340387), null);
      return clojure.browser.repl.flush_print_queue_BANG_.call(null, repl_connection);
    }
  });
  clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", -315749780), function(json) {
    var obj = goog.json.parse(json);
    var repl = goog.object.get(obj, "repl");
    var form = goog.object.get(obj, "form");
    return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 35388249), goog.json.serialize({"repl":repl, "result":function() {
      var _STAR_repl_STAR__orig_val__9239 = clojure.browser.repl._STAR_repl_STAR_;
      var _STAR_repl_STAR__temp_val__9240 = repl;
      clojure.browser.repl._STAR_repl_STAR_ = _STAR_repl_STAR__temp_val__9240;
      try {
        return clojure.browser.repl.evaluate_javascript.call(null, repl_connection, form);
      } finally {
        clojure.browser.repl._STAR_repl_STAR_ = _STAR_repl_STAR__orig_val__9239;
      }
    }()}));
  });
  clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none";
  });
  clojure.browser.repl.bootstrap.call(null);
  return repl_connection;
};
goog.provide("scheshire_cat.core");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
scheshire_cat.core.init = function scheshire_cat$core$init() {
  return null;
};
goog.exportSymbol("scheshire_cat.core.init", scheshire_cat.core.init);
clojure.browser.repl.connect.call(null, "http://localhost:9000/repl");
